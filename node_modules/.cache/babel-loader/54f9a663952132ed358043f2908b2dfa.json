{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Modals/ChangePasswordModal.jsx\";\nimport React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport Col from \"reactstrap/lib/Col\";\nimport Label from \"reactstrap/lib/Label\";\nimport Axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport _ from \"lodash\";\n\nclass ChangePasswordModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.onChange = e => {\n      this.setState({ ...this.state,\n        account: { ...this.state.account,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.changePassword = () => {\n      axiosInstance.baseurl = baseurl;\n      axiosInstance.put(baseurl + `${this.props.authentication.default_path == \"/admins/\" ? \"/management\" : \"/partners\"}/password`, {\n        // current_password: this.state.account.current_password,\n        password_confirmation: this.state.account.new_password_confirmation,\n        password: this.state.account.new_password\n      }).then(response => {\n        console.log(response);\n      }, error => {\n        console.log(\"THIS IS ERROR\", error.response.data);\n        this.setState({ ...this.state,\n          errors: error.response.data.errors\n        });\n      });\n    };\n\n    this.state = {\n      modal: this.props.isOpen,\n      size_groups: [],\n      account: {\n        current_password: \"\",\n        new_password: \"\",\n        new_password_confirmation: \"\"\n      }\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      modalTransition: {\n        timeout: 100\n      },\n      backdropTransition: {\n        timeout: 100\n      },\n      size: \"lg\",\n      toggle: this.toggle,\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.props.toggle.bind(this.props.parentForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Change My Password\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, !_.isEmpty(this.state.errors) ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \"The Following Error Occurred\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, this.state.errors.map(err => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 30\n        }\n      }, err);\n    })))) : \"\", /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-horizontal\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"new_password\",\n      placeholder: \"New Password\",\n      onChange: this.onChange,\n      value: this.state.account.new_password,\n      readOnly: this.state.readonly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, \"Confirm New Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"new_password_confirmation\",\n      placeholder: \"Confirm New Password\",\n      onChange: this.onChange,\n      value: this.state.account.new_password_confirmation,\n      readOnly: this.state.readonly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"form-control\",\n      color: \"success\",\n      onClick: this.changePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Change Password\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.props.toggle.bind(this.props.parentForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ChangePasswordModal));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Modals/ChangePasswordModal.jsx"],"names":["React","FaSearch","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Col","Label","Axios","Link","withRouter","axiosInstance","baseurl","actions","connect","bindActionCreators","Alert","_","ChangePasswordModal","Component","constructor","props","state","onChange","e","setState","account","target","name","value","changePassword","put","authentication","default_path","password_confirmation","new_password_confirmation","password","new_password","then","response","console","log","error","data","errors","modal","isOpen","size_groups","current_password","toggle","bind","prevState","render","timeout","className","parentForm","isEmpty","map","err","onSubmit","readonly","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport Col from \"reactstrap/lib/Col\";\nimport Label from \"reactstrap/lib/Label\";\nimport Axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport _ from \"lodash\";\nclass ChangePasswordModal extends React.Component {\n  state = {};\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: this.props.isOpen,\n      size_groups: [],\n      account: {\n        current_password: \"\",\n        new_password: \"\",\n        new_password_confirmation: \"\",\n      },\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  onChange = (e) => {\n    this.setState({\n      ...this.state,\n      account: {\n        ...this.state.account,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  changePassword = () => {\n    axiosInstance.baseurl = baseurl;\n    axiosInstance\n      .put(\n        baseurl +\n          `${\n            this.props.authentication.default_path == \"/admins/\"\n              ? \"/management\"\n              : \"/partners\"\n          }/password`,\n        {\n          // current_password: this.state.account.current_password,\n          password_confirmation: this.state.account.new_password_confirmation,\n          password: this.state.account.new_password,\n        }\n      )\n      .then(\n        (response) => {\n          console.log(response);\n        },\n        (error) => {\n          console.log(\"THIS IS ERROR\", error.response.data);\n          this.setState({\n            ...this.state,\n            errors: error.response.data.errors,\n          });\n        }\n      );\n  };\n  toggle() {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  }\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.isOpen}\n          modalTransition={{ timeout: 100 }}\n          backdropTransition={{ timeout: 100 }}\n          size={\"lg\"}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.props.toggle.bind(this.props.parentForm)}>\n            Change My Password\n          </ModalHeader>\n          <ModalBody>\n            {!_.isEmpty(this.state.errors) ? (\n              <Col md={12}>\n                <Alert color=\"danger\">\n                  <h6>The Following Error Occurred</h6>\n                  <ul>\n                    {this.state.errors.map((err) => {\n                      return <li>{err}</li>;\n                    })}\n                  </ul>\n                </Alert>\n              </Col>\n            ) : (\n              \"\"\n            )}\n            <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n              {/* <FormGroup className=\"col-md-12\">\n                <Label>Current Password</Label>\n\n                <Input\n                  type=\"password\"\n                  name=\"current_password\"\n                  placeholder=\"Current Password\"\n                  onChange={this.onChange}\n                  value={this.state.account.current_password}\n                  readOnly={this.state.readonly}\n                />\n              </FormGroup> */}\n              <FormGroup className=\"col-md-12\">\n                <Label>New Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"new_password\"\n                  placeholder=\"New Password\"\n                  onChange={this.onChange}\n                  value={this.state.account.new_password}\n                  readOnly={this.state.readonly}\n                />\n              </FormGroup>\n              <FormGroup className=\"col-md-12\">\n                <Label>Confirm New Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"new_password_confirmation\"\n                  placeholder=\"Confirm New Password\"\n                  onChange={this.onChange}\n                  value={this.state.account.new_password_confirmation}\n                  readOnly={this.state.readonly}\n                />\n              </FormGroup>\n              <Col md={12}>\n                <Button\n                  className=\"form-control\"\n                  color=\"success\"\n                  onClick={this.changePassword}\n                >\n                  Change Password\n                </Button>\n              </Col>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            {/* <Button color=\"primary\" className onClick={this.props.toggle.bind(this.props.parentForm)}>OK</Button>{' '} */}\n            <Button\n              color=\"secondary\"\n              onClick={this.props.toggle.bind(this.props.parentForm)}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ChangePasswordModal)\n);\n"]},"metadata":{},"sourceType":"module"}