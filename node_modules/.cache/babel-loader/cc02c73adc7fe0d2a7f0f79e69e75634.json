{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/ProductConfigurations/Size.jsx\";\nimport React, { Component } from 'react';\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap';\nimport Select from '../Controls/Select';\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios';\nimport SubmitButton from '../Controls/SubmitButton';\nimport { Link } from 'react-router-dom';\nimport { getSizeGroups } from '../misc/functions';\nimport './sizes.scss';\nimport Dropzone from 'react-dropzone';\nexport default class Size extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      size: {\n        photo_id: null,\n        description: '',\n        link: ''\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      size_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        size: { ...this.state.size,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        size: { ...this.state.size,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          size: { ...this.state.size,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.size[attr_name]);\n        var date = new moment(this.state.size[attr_name]);\n        var new_state = { ...this.state,\n          size: { ...this.state.size,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setSizes = (state, size) => {\n      var new_state = { ...state,\n        size: size,\n        group_id: state.size_groups.find(obj => obj.value == size.group_id)\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        size: { ...this.state.size,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        size: { ...this.state.size,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDrop = (name, acceptedFiles) => {\n      console.log(name);\n      console.log(acceptedFiles);\n\n      if (this.state.readOnly != true) {\n        acceptedFiles.map((file, i) => {\n          var formData = new FormData();\n          formData.append(\"file\", file);\n          axiosInstance.post(\"/photos\", formData).then(response => {\n            this.setState({ ...this.state,\n              size: { ...this.state.size,\n                photo_id: response.data.photo.id,\n                photo: response.data.photo\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      var self = this;\n      Promise.all([getSizeGroups()]).then(([size_groups]) => {\n        console.log(\"ID\", this.props.match.params.id);\n\n        if (self.state.existing_record == true) {\n          console.log(\"FECHING EXISTING RECORD\");\n          axiosInstance.get(`/admins/sizes/${this.state.size_uuid}`).then(response => {\n            var new_state = { ...this.state,\n              existing_record: true,\n              readOnly: true,\n              size_groups: size_groups\n            };\n            new_state = self.setSizes(new_state, response.data.size);\n            self.setState({ ...new_state\n            });\n          });\n        } else {\n          self.setState({ ...this.state,\n            size_groups: size_groups\n          });\n        }\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post('/admins/sizes', {\n            size: this.state.size\n          });\n        } else {\n          instance = axiosInstance.put(`/admins/sizes/${this.state.size_id || this.state.size.uuid}`, {\n            size: this.state.size\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setSizes(this.state, response.data.size);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`/product_configurations/sizes/${response.data.size.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \"Size\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/product_configurations/sizes/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, \"New Size\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 45\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.size.name,\n      placeholder: \"Size Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 45\n      }\n    }, \"Group\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"group_id\",\n      value: this.state.group_id,\n      onChange: this.handleChangeSelect.bind(this, \"group_id\"),\n      options: this.state.size_groups,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/ProductConfigurations/Size.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","moment","axiosInstance","baseurl","SubmitButton","Link","getSizeGroups","Dropzone","Size","state","size","photo_id","description","link","editing","readOnly","props","match","params","id","size_uuid","existing_record","onChange","e","console","log","target","name","setState","value","handleChangeSelect","selectedOption","val","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setSizes","group_id","size_groups","find","obj","onValueChange","floatValue","onDrop","acceptedFiles","map","file","i","formData","FormData","append","post","then","response","data","photo","componentDidMount","self","Promise","all","get","onSubmit","preventDefault","instance","put","size_id","uuid","history","push","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap'\nimport Select from '../Controls/Select'\n\n\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios'\nimport SubmitButton from '../Controls/SubmitButton'\nimport {Link} from 'react-router-dom'\nimport {  getSizeGroups } from '../misc/functions'\nimport './sizes.scss'\nimport Dropzone from 'react-dropzone';\nexport default class Size extends Component {\n    state = {\n        size: {\n            photo_id: null,\n            description: '',\n            link: ''\n        },\n        editing: false,\n        readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n        size_uuid: this.props.match.params.id,\n        existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    }\n    onChange = e => {\n        console.log(e.target.name)\n        this.setState({\n            ...this.state,\n            size: {\n                ...this.state.size,\n                [e.target.name]: e.target.value\n            }\n        }\n        )\n    }\n    handleChangeSelect = (selectedOption, val) => {\n        var state = {\n            ...this.state,\n            size: {\n                ...this.state.size,\n                [selectedOption]: val.value\n            },\n            [selectedOption]: val\n        }\n        this.setState({ ...state })\n    }\n    onDateChanged = (momentdate, attr_name) => {\n        // console.log(\"ClassName is\", momentdate.constructor.name)\n        var new_date = new moment();\n        if (momentdate.constructor.name == new_date.constructor.name) {\n            var new_state = {\n                ...this.state,\n                size: {\n                    ...this.state.size,\n                    [attr_name]: momentdate,\n                }\n            };\n            this.setState({ ...new_state });\n        }\n        else {\n            console.log(this.state.size[attr_name])\n            var date = new moment(this.state.size[attr_name])\n            var new_state = {\n                ...this.state,\n                size: {\n                    ...this.state.size,\n                    [attr_name]: date,\n\n                }\n            };\n            this.setState({ ...new_state });\n        }\n    }\n\n    setSizes = (state, size) => {\n        \n        var new_state = {\n            ...state,\n            size: size,\n            group_id: state.size_groups.find(\n                (obj) => obj.value == size.group_id\n              ),\n            \n        }\n        return new_state;\n    }\n    onValueChange = (e, val)=>{\n        console.log(val);\n        \n        this.setState({\n            ...this.state,\n            size: {\n                ...this.state.size,\n                [e]: val.floatValue\n            }\n        })\n    }\n    handleChangeSelect = (selectedOption, val) => {\n        var state = {\n            ...this.state,\n            size: {\n                ...this.state.size,\n                [selectedOption]: val.value\n            },\n            [selectedOption]: val\n        }\n        this.setState({ ...state })\n    }\n    onDrop = (name, acceptedFiles) => {\n        console.log(name);\n        console.log(acceptedFiles);\n        if (this.state.readOnly != true) {\n            acceptedFiles.map((file, i) => {\n                var formData = new FormData();\n                formData.append(\"file\", file)\n                axiosInstance.post(\"/photos\", formData).then(response => {\n                    this.setState({\n                        ...this.state,\n                        size: {\n                            ...this.state.size,\n                            photo_id:  response.data.photo.id,\n                            photo: response.data.photo\n                        }\n                    })\n                })\n            })\n        }\n    }\n    componentDidMount = () => {\n        var self = this\n        \n        Promise.all([getSizeGroups()]).then(([size_groups]) => {\n            console.log(\"ID\", this.props.match.params.id)\n            if (self.state.existing_record == true) {\n                console.log(\"FECHING EXISTING RECORD\")\n                axiosInstance.get(`/admins/sizes/${this.state.size_uuid}`).then((response) => {\n                    var new_state = {\n                        ...this.state,\n                        existing_record: true,\n                        readOnly: true,\n                        size_groups: size_groups\n                        \n                        \n                    }\n                    new_state = self.setSizes(new_state, response.data.size)\n                    self.setState({ ...new_state })\n                })\n            }\n            else {\n                self.setState({\n                    ...this.state,\n                    size_groups: size_groups\n                    \n                })\n            }\n\n        })\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        var self = this;\n        if (self.state.readOnly == true && self.state.existing_record == true) {\n            self.setState({\n                ...self.state,\n                readOnly: false\n            })\n        }\n\n        else {\n            var instance;\n            if (self.state.existing_record != true) {\n                instance = axiosInstance.post('/admins/sizes', { size: this.state.size })\n            }\n            else {\n                \n                instance = axiosInstance.put(`/admins/sizes/${this.state.size_id || this.state.size.uuid}`, { size: this.state.size })\n            }\n\n            instance.then((response) => {\n                console.log(\"RESPONSE\", response)\n\n                // console.log(\"Setting state\")\n                if (this.state.existing_record == true) {\n                    var new_state = this.setSizes(this.state, response.data.size)\n                    console.log(\"THIS IS NEW STATE\", new_state)\n                    this.setState({ ...new_state, readOnly: true })\n                }\n                else {\n                    this.props.history.push(`/product_configurations/sizes/${response.data.size.uuid}`)\n                    // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n                }\n\n\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <Col md={12}>\n                <Card>\n\n                    <CardBody>\n                        <CardTitle className='col-md-12'>Size\n                        <ul>\n                            <li><Link className='btn btn-success btn-sm' to='/product_configurations/sizes/new'>New Size</Link></li>\n                        </ul></CardTitle>\n                        <CardText className='col-md-12'>\n                            <Form className='row'>\n                                <Col md={12}>\n                                    \n                                <Row>\n                                \n                                                    <Col md={12}>\n                                                    <Row>\n                                                   \n                                        <FormGroup className='col-md-4'>\n                                            <Label for=\"name\">Name</Label>\n                                            <Input type=\"text\" name=\"name\" value={this.state.size.name} placeholder=\"Size Name\" onChange={this.onChange} readOnly={this.state.readOnly} /> \n                                        </FormGroup>\n                                        </Row>\n                                        <Row>\n                                        <FormGroup className='col-md-4'>\n                                            <Label for=\"exampleEmail\">Group</Label>\n                                            <Select\n                                                name=\"group_id\"\n                                                value={this.state.group_id}\n                                                onChange={this.handleChangeSelect.bind(this, \"group_id\")}\n                                                options={this.state.size_groups}\n                                                isDisabled={this.state.readOnly}\n                                            />\n                                        </FormGroup>\n                                        </Row>\n                                                    </Col>\n                \n                  </Row>\n                                \n                                    <Row>\n                                        \n                                        \n                                    </Row>\n                                </Col>\n\n                                <Col md={12}>\n                                    {/* <Row> */}\n                                        <SubmitButton onClick={this.onSubmit} readOnly={this.state.readOnly} editing={this.state.editing} existing_record={this.state.existing_record} />\n                                    {/* </Row> */}\n                                </Col>\n                            </Form>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}