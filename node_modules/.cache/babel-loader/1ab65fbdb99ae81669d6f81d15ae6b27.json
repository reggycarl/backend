{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Pages/Page.jsx\";\nimport React, { Component } from 'react';\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap';\nimport Select from '../Controls/Select';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios';\nimport SubmitButton from '../Controls/SubmitButton';\nimport { Link } from 'react-router-dom';\nimport { getIndirectPages, getPagesTypes, getGenders, getMaritalStatuses } from '../misc/functions';\nimport { history } from '../../index';\nimport NumberField from '../Controls/NumberField';\nimport './page.scss';\nimport Dropzone from 'react-dropzone';\nimport { Editor } from '@tinymce/tinymce-react';\nexport default class Page extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: {\n        cover_photo_id: null,\n        title: '',\n        content: '',\n        url: \"\"\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      page_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        page: { ...this.state.page,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        page: { ...this.state.page,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          page: { ...this.state.page,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.page[attr_name]);\n        var date = new moment(this.state.page[attr_name]);\n        var new_state = { ...this.state,\n          page: { ...this.state.page,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setPages = (state, page) => {\n      console.log(\"THIS IS STATE\", state);\n      var new_state = { ...state,\n        page: page // type_id: state.page_types.\n        // parent_id: state.pages.find(obj => obj.value == page.parent_id)\n\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        page: { ...this.state.page,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.onDrop = (name, acceptedFiles) => {\n      console.log(name);\n      console.log(acceptedFiles);\n\n      if (this.state.readOnly != true) {\n        acceptedFiles.map((file, i) => {\n          var formData = new FormData();\n          formData.append(\"file\", file);\n          axiosInstance.post(\"/photos\", formData).then(response => {\n            this.setState({ ...this.state,\n              page: { ...this.state.page,\n                cover_photo_id: response.data.photo.id,\n                cover_photo: response.data.photo\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      var self = this; // Promise.all().then(() => {\n\n      console.log(\"ID\", this.props.match.params.id);\n\n      if (self.state.existing_record == true) {\n        console.log(\"FECHING EXISTING RECORD\");\n        axiosInstance.get(`/admins/pages/${this.state.page_uuid}`).then(response => {\n          var new_state = { ...this.state,\n            existing_record: true,\n            readOnly: true\n          };\n          new_state = self.setPages(new_state, response.data.page);\n          self.setState({ ...new_state\n          });\n        });\n      } else {\n        self.setState({ ...this.state\n        });\n      } // })\n\n    };\n\n    this.delete = e => {\n      e.preventDefault();\n      axiosInstance.delete(`/admins/pages/${this.state.page_uuid}`).then(response => {\n        this.props.history.push(`/appearances/pages`);\n      });\n    };\n\n    this.handleEditorChange = (attr, val, e) => {\n      console.log(\"EVENT\", e);\n      console.log(\"VAL\", val);\n      console.log(\"ATTR\", attr);\n      this.setState({ ...this.state,\n        page: { ...this.state.page,\n          [attr]: val\n        }\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post('/admins/pages', { ...this.state\n          });\n        } else {\n          instance = axiosInstance.put(`/admins/pages/${this.state.page_id || this.state.page.uuid}`, {\n            page: this.state.page\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setPages(this.state, response.data.page);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`/appearances/pages/${response.data.page.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Page\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/appearances/pages/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 33\n      }\n    }, \"New Page\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      readOnly: this.state.readOnly,\n      onDrop: this.readOnly ? null : this.onDrop.bind(null, \"photo\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(Col, Object.assign({\n      id: \"photoBox\"\n    }, getRootProps(), {\n      className: `${this.state.readOnly ? \"\" : \"dropZone\"}  col-md-12`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 61\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 63\n      }\n    })), this.state.page.cover_photo ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.page.cover_photo.image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 96\n      }\n    }) : null))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 45\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.page.title,\n      placeholder: \"Page Title\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 45\n      }\n    }, \"Content\"), /*#__PURE__*/React.createElement(Editor, {\n      initialValue: this.state.page.content,\n      apiKey: \"gf24erovj899rh2ynuu6qrkowdve3c4pih2o7l9a06rgfl5d\",\n      value: this.state.page.content,\n      disabled: this.state.readOnly,\n      name: \"content\",\n      init: {\n        height: 600,\n        menubar: false,\n        plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n        toolbar: \"undo redo | formatselect | bold italic underline | \\\n             alignleft aligncenter alignright alignjustify | \\\n             bullist numlist outdent indent | removeformat | help\"\n      },\n      onEditorChange: this.handleEditorChange.bind(this, \"content\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 45\n      }\n    }, \"Link\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"url\",\n      value: this.state.page.url,\n      placeholder: \"sample-page-url\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 45\n      }\n    }, \"Keywords\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"keywords\",\n      value: this.state.page.keywords,\n      placeholder: \"Page Keywords\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 41\n      }\n    }), \"\\xA0\", this.state.readOnly ? /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.delete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 60\n      }\n    }, \"Delete\") : \"\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Pages/Page.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","Datetime","moment","axiosInstance","baseurl","SubmitButton","Link","getIndirectPages","getPagesTypes","getGenders","getMaritalStatuses","history","NumberField","Dropzone","Editor","Page","state","page","cover_photo_id","title","content","url","editing","readOnly","props","match","params","id","page_uuid","existing_record","onChange","e","console","log","target","name","setState","value","handleChangeSelect","selectedOption","val","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setPages","onValueChange","floatValue","onDrop","acceptedFiles","map","file","i","formData","FormData","append","post","then","response","data","photo","cover_photo","componentDidMount","self","get","delete","preventDefault","push","handleEditorChange","attr","onSubmit","instance","put","page_id","uuid","render","bind","getRootProps","getInputProps","image_url","height","menubar","plugins","toolbar","keywords"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap'\nimport Select from '../Controls/Select'\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios'\nimport SubmitButton from '../Controls/SubmitButton'\nimport {Link} from 'react-router-dom'\nimport { getIndirectPages, getPagesTypes, getGenders, getMaritalStatuses } from '../misc/functions'\nimport { history } from '../../index'\nimport NumberField from '../Controls/NumberField';\nimport './page.scss'\nimport Dropzone from 'react-dropzone';\nimport { Editor } from '@tinymce/tinymce-react';\nexport default class Page extends Component {\n    state = {\n        page: {\n            cover_photo_id: null,\n            title: '',\n            content: '',\n            url: \"\",\n\n        },\n        editing: false,\n        readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n        page_uuid: this.props.match.params.id,\n        existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    }\n    onChange = e => {\n        console.log(e.target.name)\n        this.setState({\n            ...this.state,\n            page: {\n                ...this.state.page,\n                [e.target.name]: e.target.value\n            }\n        }\n        )\n    }\n    handleChangeSelect = (selectedOption, val) => {\n        var state = {\n            ...this.state,\n            page: {\n                ...this.state.page,\n                [selectedOption]: val.value\n            },\n            [selectedOption]: val\n        }\n        this.setState({ ...state })\n    }\n    onDateChanged = (momentdate, attr_name) => {\n        // console.log(\"ClassName is\", momentdate.constructor.name)\n        var new_date = new moment();\n        if (momentdate.constructor.name == new_date.constructor.name) {\n            var new_state = {\n                ...this.state,\n                page: {\n                    ...this.state.page,\n                    [attr_name]: momentdate,\n                }\n            };\n            this.setState({ ...new_state });\n        }\n        else {\n            console.log(this.state.page[attr_name])\n            var date = new moment(this.state.page[attr_name])\n            var new_state = {\n                ...this.state,\n                page: {\n                    ...this.state.page,\n                    [attr_name]: date,\n\n                }\n            };\n            this.setState({ ...new_state });\n        }\n    }\n\n    setPages = (state, page) => {\n        console.log(\"THIS IS STATE\", state)\n        var new_state = {\n            ...state,\n            page: page,\n            // type_id: state.page_types.\n            // parent_id: state.pages.find(obj => obj.value == page.parent_id)\n\n        }\n        return new_state;\n    }\n    onValueChange = (e, val)=>{\n        console.log(val);\n        \n        this.setState({\n            ...this.state,\n            page: {\n                ...this.state.page,\n                [e]: val.floatValue\n            }\n        })\n    }\n    onDrop = (name, acceptedFiles) => {\n        console.log(name);\n        console.log(acceptedFiles);\n        if (this.state.readOnly != true) {\n            acceptedFiles.map((file, i) => {\n                var formData = new FormData();\n                formData.append(\"file\", file)\n                axiosInstance.post(\"/photos\", formData).then(response => {\n                    this.setState({\n                        ...this.state,\n                        page: {\n                            ...this.state.page,\n                            cover_photo_id:  response.data.photo.id,\n                            cover_photo: response.data.photo\n                        }\n                    })\n                })\n            })\n        }\n    }\n    componentDidMount = () => {\n        var self = this\n        \n        // Promise.all().then(() => {\n            console.log(\"ID\", this.props.match.params.id)\n            \n            if (self.state.existing_record == true) {\n                console.log(\"FECHING EXISTING RECORD\")\n                axiosInstance.get(`/admins/pages/${this.state.page_uuid}`).then((response) => {\n                    var new_state = {\n                        ...this.state,\n                        existing_record: true,\n                        readOnly: true,\n                        \n                    }\n                    new_state = self.setPages(new_state, response.data.page)\n                    self.setState({ ...new_state })\n                })\n            }\n            else {\n                self.setState({\n                    ...this.state,\n                    \n                })\n            }\n\n        // })\n    }\n    delete = (e) => {\n        e.preventDefault();\n        axiosInstance.delete(`/admins/pages/${this.state.page_uuid}`).then(response => {\n            this.props.history.push(`/appearances/pages`);\n        })\n    }\n    handleEditorChange = (attr, val, e) => {\n        console.log(\"EVENT\", e);\n        console.log(\"VAL\", val);\n        console.log(\"ATTR\", attr);\n        this.setState({\n          ...this.state,\n          page: {\n            ...this.state.page,\n            [attr]: val\n          }\n        })\n      };\n    onSubmit = e => {\n        e.preventDefault();\n        var self = this;\n        if (self.state.readOnly == true && self.state.existing_record == true) {\n            self.setState({\n                ...self.state,\n                readOnly: false\n            })\n        }\n        else {\n            var instance;\n            if (self.state.existing_record != true) {\n                instance = axiosInstance.post('/admins/pages', { ...this.state })\n            }\n            else {\n                \n                instance = axiosInstance.put(`/admins/pages/${this.state.page_id || this.state.page.uuid}`, { page: this.state.page })\n            }\n\n            instance.then((response) => {\n                console.log(\"RESPONSE\", response)\n\n                // console.log(\"Setting state\")\n                if (this.state.existing_record == true) {\n                    var new_state = this.setPages(this.state, response.data.page)\n                    console.log(\"THIS IS NEW STATE\", new_state)\n                    this.setState({ ...new_state, readOnly: true })\n                }\n                else {\n                    this.props.history.push(`/appearances/pages/${response.data.page.uuid}`)\n                    // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n                }\n\n\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <Col md={12}>\n                <Card>\n\n                    <CardBody>\n                        <CardTitle className='col-md-12'>Page\n                        <ul>\n                            <li><Link className='btn btn-success btn-sm' to='/appearances/pages/new'>New Page</Link></li>\n                        </ul></CardTitle>\n                        <CardText className='col-md-12'>\n                            <Form className='row'>\n                                <Col md={12}>\n                                <Row>\n                    \n                    <Dropzone readOnly={this.state.readOnly} onDrop={ this.readOnly ? null : this.onDrop.bind(null, \"photo\")}>\n                                                        {({ getRootProps, getInputProps }) => (\n\n                                                            <Col id='photoBox' {...getRootProps()} className={`${this.state.readOnly ? \"\" : \"dropZone\"}  col-md-12`} >\n                                                              <input {...getInputProps()} />\n                                                                \n                                                                {this.state.page.cover_photo ? <img src={this.state.page.cover_photo.image_url} /> : null}\n                                                            </Col>\n\n                                                        )}\n                                                    </Dropzone>\n                  </Row>\n                                <Row>\n                                <FormGroup className='col-md-12'>\n                                            <Label for=\"name\">Title</Label>\n                                            <Input type=\"text\" name=\"title\" value={this.state.page.title} placeholder=\"Page Title\" onChange={this.onChange} readOnly={this.state.readOnly} />\n                                        </FormGroup>\n                                        \n                                        <FormGroup className='col-md-12'>\n                                            <Label for=\"name\">Content</Label>\n                                            <Editor\n                          initialValue={this.state.page.content}\n                          apiKey=\"gf24erovj899rh2ynuu6qrkowdve3c4pih2o7l9a06rgfl5d\"\n                          value={this.state.page.content}\n                          disabled={this.state.readOnly}\n                          name=\"content\"\n                          init={{\n                            height: 600,\n                            menubar: false,\n                            plugins: [\n                              \"advlist autolink lists link image charmap print preview anchor\",\n                              \"searchreplace visualblocks code fullscreen\",\n                              \"insertdatetime media table paste code help wordcount\",\n                            ],\n                            toolbar:\n                              \"undo redo | formatselect | bold italic underline | \\\n             alignleft aligncenter alignright alignjustify | \\\n             bullist numlist outdent indent | removeformat | help\",\n                          }}\n                          onEditorChange={this.handleEditorChange.bind(this, \n                            \"content\"\n                          )}\n                        />\n                                        </FormGroup>\n                                        <FormGroup className='col-md-12'>\n                                            <Label for=\"name\">Link</Label>\n                                            <Input type=\"text\" name=\"url\" value={this.state.page.url} placeholder=\"sample-page-url\" onChange={this.onChange} readOnly={this.state.readOnly} />\n                                        </FormGroup>\n                                    \n                                        <FormGroup className='col-md-12'>\n                                            <Label for=\"name\">Keywords</Label>\n                                            <Input type=\"textarea\" name=\"keywords\" value={this.state.page.keywords} placeholder=\"Page Keywords\" onChange={this.onChange} readOnly={this.state.readOnly} />\n                                        </FormGroup>\n                                        </Row>\n                                    <Row>\n                                        \n                                        \n                                    </Row>\n                                    \n                                    \n                                    \n                                \n                                </Col>\n                                \n                                <Col md={12}>\n                                    {/* <Row> */}\n                                        <SubmitButton onClick={this.onSubmit} readOnly={this.state.readOnly} editing={this.state.editing} existing_record={this.state.existing_record} />\n                                    {/* </Row> */}\n                                    &nbsp;\n                                    {this.state.readOnly ? <Button color='danger' onClick={this.delete}>\n                                                                Delete\n                                    </Button>: \"\"}\n                                </Col>\n                            </Form>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}