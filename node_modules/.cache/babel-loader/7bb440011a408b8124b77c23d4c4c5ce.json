{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Modals/ChangeStatusModal.jsx\";\nimport React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport Col from \"reactstrap/lib/Col\";\nimport Label from \"reactstrap/lib/Label\";\nimport Axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Select from \"../Controls/Select\";\nimport { getOrderStatuses } from \"../misc/functions\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport _ from \"lodash\";\n\nclass ChangeStatusModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      order_statuses: [],\n      order: {}\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      this.setState({ ...this.state,\n        order: { ...this.state.order,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({ ...this.state,\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.cancel = () => {\n      axiosInstance.baseurl = baseurl;\n      axiosInstance.delete(baseurl + `${this.props.action_url}?reason=${this.state.reason}`).then(response => {\n        console.log(response);\n        this.props.setObject(response.data);\n      }, error => {\n        console.log(\"THIS IS ERROR\", error.response.data);\n        this.setState({ ...this.state,\n          errors: error.response.data.errors\n        });\n      });\n    };\n\n    this.changeStatus = e => {\n      e.preventDefault();\n      this.props.changeStatus(this.state.order.status_id);\n    };\n\n    this.componentDidMount = () => {\n      getOrderStatuses().then(response => {\n        console.log(\"THESE ARE RESPONSES\", response);\n        this.setState({ ...this.state,\n          order_statuses: response\n        });\n      });\n    };\n\n    this.state = {\n      modal: this.props.isOpen\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.props.isOpen,\n      modalTransition: {\n        timeout: 100\n      },\n      backdropTransition: {\n        timeout: 100\n      },\n      toggle: this.toggle,\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.props.toggle.bind(this.props.parentForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, \"Change Order Status\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, !_.isEmpty(this.state.errors) ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      color: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"The Following Error Occurred\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, this.state.errors.map(err => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 30\n        }\n      }, err);\n    })))) : \"\", /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-horizontal\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Status\")), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"country_id\",\n      value: this.state.status_id,\n      onChange: this.handleChangeSelect.bind(this, \"status_id\"),\n      options: this.state.order_statuses,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    })), \"\\xA0\", /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"form-control\",\n      color: \"success\",\n      onClick: this.changeStatus,\n      disabled: !(this.state.order && this.state.order.status_id != null) || this.props.changingStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, \"Change Status\")))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.props.toggle.bind(this.props.parentForm),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ChangeStatusModal));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Modals/ChangeStatusModal.jsx"],"names":["React","FaSearch","Button","Modal","ModalHeader","ModalBody","ModalFooter","FormGroup","Input","Col","Label","Axios","Link","withRouter","Select","getOrderStatuses","axiosInstance","baseurl","actions","connect","bindActionCreators","Alert","_","ChangeStatusModal","Component","constructor","props","state","order_statuses","order","handleChangeSelect","selectedOption","val","setState","value","onChange","e","target","name","cancel","delete","action_url","reason","then","response","console","log","setObject","data","error","errors","changeStatus","preventDefault","status_id","componentDidMount","modal","isOpen","toggle","bind","prevState","render","timeout","className","parentForm","isEmpty","map","err","onSubmit","readOnly","changingStatus","mapStateToProps","authentication","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\n\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport Col from \"reactstrap/lib/Col\";\nimport Label from \"reactstrap/lib/Label\";\nimport Axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Select from \"../Controls/Select\";\nimport { getOrderStatuses } from \"../misc/functions\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Alert from \"reactstrap/lib/Alert\";\nimport _ from \"lodash\";\nclass ChangeStatusModal extends React.Component {\n  state = {\n    order_statuses: [],\n    order: {}\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: this.props.isOpen,\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n  handleChangeSelect = (selectedOption, val) => {\n    this.setState({\n      ...this.state,\n      order: {\n        ...this.state.order,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value,\n    });\n  };\n  cancel = () => {\n    axiosInstance.baseurl = baseurl;\n    axiosInstance\n      .delete(baseurl + `${this.props.action_url}?reason=${this.state.reason}`)\n      .then(\n        (response) => {\n          console.log(response);\n          this.props.setObject(response.data);\n        },\n        (error) => {\n          console.log(\"THIS IS ERROR\", error.response.data);\n          this.setState({\n            ...this.state,\n            errors: error.response.data.errors,\n          });\n        }\n      );\n  };\n  toggle() {\n    this.setState((prevState) => ({\n      modal: !prevState.modal,\n    }));\n  }\n  changeStatus = e => {\n    e.preventDefault();\n    this.props.changeStatus(this.state.order.status_id)\n  }\n  \n  componentDidMount = () => {\n    getOrderStatuses().then((response) => {\n      console.log(\"THESE ARE RESPONSES\", response);\n      this.setState({\n        ...this.state,\n        order_statuses: response,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Modal\n          isOpen={this.props.isOpen}\n          modalTransition={{ timeout: 100 }}\n          backdropTransition={{ timeout: 100 }}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.props.toggle.bind(this.props.parentForm)}>\n            Change Order Status\n          </ModalHeader>\n          <ModalBody>\n            {!_.isEmpty(this.state.errors) ? (\n              <Col md={12}>\n                <Alert color=\"danger\">\n                  <h6>The Following Error Occurred</h6>\n                  <ul>\n                    {this.state.errors.map((err) => {\n                      return <li>{err}</li>;\n                    })}\n                  </ul>\n                </Alert>\n              </Col>\n            ) : (\n              \"\"\n            )}\n            <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n              {/* <FormGroup className=\"col-md-12\">\n                <Label>Current Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"current_password\"\n                  placeholder=\"Current Password\"\n                  onChange={this.onChange}\n                  value={this.state.account.current_password}\n                  readOnly={this.state.readonly}\n                />\n              </FormGroup> */}\n              <FormGroup className=\"col-md-12\">\n                <Label>Status</Label>\n              </FormGroup>\n              <Col md={12}>\n                <Select\n                  name=\"country_id\"\n                  value={this.state.status_id}\n                  onChange={this.handleChangeSelect.bind(this, \"status_id\")}\n                  options={this.state.order_statuses}\n                  isDisabled={this.state.readOnly}\n                />\n              </Col>\n              &nbsp;\n              <Col md={12}>\n                <Button\n                  className=\"form-control\"\n                  color=\"success\"\n                  onClick={this.changeStatus}\n                  disabled ={!(this.state.order && this.state.order.status_id != null) || this.props.changingStatus}\n                >\n                  Change Status\n                </Button>\n              </Col>\n            </form>\n          </ModalBody>\n          <ModalFooter>\n            {/* <Button color=\"primary\" className onClick={this.props.toggle.bind(this.props.parentForm)}>OK</Button>{' '} */}\n            <Button\n              color=\"secondary\"\n              onClick={this.props.toggle.bind(this.props.parentForm)}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ChangeStatusModal)\n);\n"]},"metadata":{},"sourceType":"module"}