{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/ProductConfigurations/Color.jsx\";\nimport React, { Component } from 'react';\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap';\nimport Select from '../Controls/Select';\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios';\nimport SubmitButton from '../Controls/SubmitButton';\nimport { Link } from 'react-router-dom';\nimport { getIndirectCountries, getCountriesTypes, getGenders, getMaritalStatuses, getCategories } from '../misc/functions';\nimport { history } from '../../index';\nimport NumberField from '../Controls/NumberField';\nimport './colors.scss';\nimport Dropzone from 'react-dropzone';\nexport default class Color extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      color: {\n        photo_id: null,\n        description: '',\n        link: ''\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      color_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        color: { ...this.state.color,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        color: { ...this.state.color,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          color: { ...this.state.color,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.color[attr_name]);\n        var date = new moment(this.state.color[attr_name]);\n        var new_state = { ...this.state,\n          color: { ...this.state.color,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setCountries = (state, color) => {\n      var new_state = { ...state,\n        color: color\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        color: { ...this.state.color,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        color: { ...this.state.color,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDrop = (name, acceptedFiles) => {\n      console.log(name);\n      console.log(acceptedFiles);\n\n      if (this.state.readOnly != true) {\n        acceptedFiles.map((file, i) => {\n          var formData = new FormData();\n          formData.append(\"file\", file);\n          axiosInstance.post(\"/photos\", formData).then(response => {\n            this.setState({ ...this.state,\n              color: { ...this.state.color,\n                photo_id: response.data.photo.id,\n                photo: response.data.photo\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      var self = this; // Promise.all([getCategories()]).then(([categories]) => {\n\n      console.log(\"ID\", this.props.match.params.id);\n\n      if (self.state.existing_record == true) {\n        console.log(\"FECHING EXISTING RECORD\");\n        axiosInstance.get(`/admins/colors/${this.state.color_uuid}`).then(response => {\n          var new_state = { ...this.state,\n            existing_record: true,\n            readOnly: true\n          };\n          new_state = self.setCountries(new_state, response.data.color);\n          self.setState({ ...new_state\n          });\n        });\n      } else {\n        self.setState({ ...this.state\n        });\n      } // })\n\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post('/admins/colors', {\n            color: this.state.color\n          });\n        } else {\n          instance = axiosInstance.put(`/admins/colors/${this.state.color_id || this.state.color.uuid}`, {\n            color: this.state.color\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setCountries(this.state, response.data.color);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`/product_configurations/colors/${response.data.color.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"Color\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/product_configurations/colors/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 33\n      }\n    }, \"New Color\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 45\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.color.name,\n      placeholder: \"Color Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 45\n      }\n    }, \"Hex Code\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"hex_code\",\n      value: this.state.color.hex_code,\n      placeholder: \"Color Hex Code\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 41\n      }\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/ProductConfigurations/Color.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","moment","axiosInstance","baseurl","SubmitButton","Link","getIndirectCountries","getCountriesTypes","getGenders","getMaritalStatuses","getCategories","history","NumberField","Dropzone","Color","state","color","photo_id","description","link","editing","readOnly","props","match","params","id","color_uuid","existing_record","onChange","e","console","log","target","name","setState","value","handleChangeSelect","selectedOption","val","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setCountries","onValueChange","floatValue","onDrop","acceptedFiles","map","file","i","formData","FormData","append","post","then","response","data","photo","componentDidMount","self","get","onSubmit","preventDefault","instance","put","color_id","uuid","push","render","hex_code"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap'\nimport Select from '../Controls/Select'\n\n\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios'\nimport SubmitButton from '../Controls/SubmitButton'\nimport {Link} from 'react-router-dom'\nimport { getIndirectCountries, getCountriesTypes, getGenders, getMaritalStatuses, getCategories } from '../misc/functions'\nimport { history } from '../../index'\nimport NumberField from '../Controls/NumberField';\nimport './colors.scss'\nimport Dropzone from 'react-dropzone';\nexport default class Color extends Component {\n    state = {\n        color: {\n            photo_id: null,\n            description: '',\n            link: ''\n        },\n        editing: false,\n        readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n        color_uuid: this.props.match.params.id,\n        existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    }\n    onChange = e => {\n        console.log(e.target.name)\n        this.setState({\n            ...this.state,\n            color: {\n                ...this.state.color,\n                [e.target.name]: e.target.value\n            }\n        }\n        )\n    }\n    handleChangeSelect = (selectedOption, val) => {\n        var state = {\n            ...this.state,\n            color: {\n                ...this.state.color,\n                [selectedOption]: val.value\n            },\n            [selectedOption]: val\n        }\n        this.setState({ ...state })\n    }\n    onDateChanged = (momentdate, attr_name) => {\n        // console.log(\"ClassName is\", momentdate.constructor.name)\n        var new_date = new moment();\n        if (momentdate.constructor.name == new_date.constructor.name) {\n            var new_state = {\n                ...this.state,\n                color: {\n                    ...this.state.color,\n                    [attr_name]: momentdate,\n                }\n            };\n            this.setState({ ...new_state });\n        }\n        else {\n            console.log(this.state.color[attr_name])\n            var date = new moment(this.state.color[attr_name])\n            var new_state = {\n                ...this.state,\n                color: {\n                    ...this.state.color,\n                    [attr_name]: date,\n\n                }\n            };\n            this.setState({ ...new_state });\n        }\n    }\n\n    setCountries = (state, color) => {\n        \n        var new_state = {\n            ...state,\n            color: color,\n            \n            \n        }\n        return new_state;\n    }\n    onValueChange = (e, val)=>{\n        console.log(val);\n        \n        this.setState({\n            ...this.state,\n            color: {\n                ...this.state.color,\n                [e]: val.floatValue\n            }\n        })\n    }\n    handleChangeSelect = (selectedOption, val) => {\n        var state = {\n            ...this.state,\n            color: {\n                ...this.state.color,\n                [selectedOption]: val.value\n            },\n            [selectedOption]: val\n        }\n        this.setState({ ...state })\n    }\n    onDrop = (name, acceptedFiles) => {\n        console.log(name);\n        console.log(acceptedFiles);\n        if (this.state.readOnly != true) {\n            acceptedFiles.map((file, i) => {\n                var formData = new FormData();\n                formData.append(\"file\", file)\n                axiosInstance.post(\"/photos\", formData).then(response => {\n                    this.setState({\n                        ...this.state,\n                        color: {\n                            ...this.state.color,\n                            photo_id:  response.data.photo.id,\n                            photo: response.data.photo\n                        }\n                    })\n                })\n            })\n        }\n    }\n    componentDidMount = () => {\n        var self = this\n        \n        // Promise.all([getCategories()]).then(([categories]) => {\n            console.log(\"ID\", this.props.match.params.id)\n            if (self.state.existing_record == true) {\n                console.log(\"FECHING EXISTING RECORD\")\n                axiosInstance.get(`/admins/colors/${this.state.color_uuid}`).then((response) => {\n                    var new_state = {\n                        ...this.state,\n                        existing_record: true,\n                        readOnly: true,\n                        \n                        \n                    }\n                    new_state = self.setCountries(new_state, response.data.color)\n                    self.setState({ ...new_state })\n                })\n            }\n            else {\n                self.setState({\n                    ...this.state,\n                    \n                })\n            }\n\n        // })\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        var self = this;\n        if (self.state.readOnly == true && self.state.existing_record == true) {\n            self.setState({\n                ...self.state,\n                readOnly: false\n            })\n        }\n\n        else {\n            var instance;\n            if (self.state.existing_record != true) {\n                instance = axiosInstance.post('/admins/colors', { color: this.state.color })\n            }\n            else {\n                \n                instance = axiosInstance.put(`/admins/colors/${this.state.color_id || this.state.color.uuid}`, { color: this.state.color })\n            }\n\n            instance.then((response) => {\n                console.log(\"RESPONSE\", response)\n\n                // console.log(\"Setting state\")\n                if (this.state.existing_record == true) {\n                    var new_state = this.setCountries(this.state, response.data.color)\n                    console.log(\"THIS IS NEW STATE\", new_state)\n                    this.setState({ ...new_state, readOnly: true })\n                }\n                else {\n                    this.props.history.push(`/product_configurations/colors/${response.data.color.uuid}`)\n                    // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n                }\n\n\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <Col md={12}>\n                <Card>\n\n                    <CardBody>\n                        <CardTitle className='col-md-12'>Color\n                        <ul>\n                            <li><Link className='btn btn-success btn-sm' to='/product_configurations/colors/new'>New Color</Link></li>\n                        </ul></CardTitle>\n                        <CardText className='col-md-12'>\n                            <Form className='row'>\n                                <Col md={12}>\n                                    \n                                <Row>\n                                \n                                                    <Col md={12}>\n                                                    <Row>\n                                                   \n                                        <FormGroup className='col-md-12'>\n                                            <Label for=\"name\">Name</Label>\n                                            <Input type=\"text\" name=\"name\" value={this.state.color.name} placeholder=\"Color Name\" onChange={this.onChange} readOnly={this.state.readOnly} /> \n                                        </FormGroup>\n                                      \n                                        \n                                    \n                                    \n                                        </Row>\n                                        <Row>\n                                                   \n                                        <FormGroup className='col-md-12'>\n                                            <Label for=\"name\">Hex Code</Label>\n                                            <Input type=\"text\" name=\"hex_code\" value={this.state.color.hex_code} placeholder=\"Color Hex Code\" onChange={this.onChange} readOnly={this.state.readOnly} /> \n                                        </FormGroup>\n                                      \n                                        \n                                    \n                                    \n                                        </Row>\n                                                    </Col>\n                \n                  </Row>\n                                \n                                    <Row>\n                                        \n                                        \n                                    </Row>\n                                </Col>\n\n                                <Col md={12}>\n                                    {/* <Row> */}\n                                        <SubmitButton onClick={this.onSubmit} readOnly={this.state.readOnly} editing={this.state.editing} existing_record={this.state.existing_record} />\n                                    {/* </Row> */}\n                                </Col>\n                            </Form>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}