{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Controls/NumberField.jsx\";\nimport React, { Component } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { Input } from \"reactstrap\";\nexport default class NumberField extends Component {\n  render() {\n    var _this$props$decimalSc;\n\n    // console.log(\"THIS THE DEPLAY TYPE\", ths)\n    return /*#__PURE__*/React.createElement(NumberFormat, {\n      customInput: Input,\n      value: this.props.value,\n      className: `form-control ${this.props.className}`,\n      displayType: this.props.displayType == \"input\" ? \"input\" : \"text\",\n      thousandSeparator: true,\n      className: this.props.input ? \"form-control right\" : this.props.className || \"\",\n      fixedDecimalScale: true,\n      decimalScale: (_this$props$decimalSc = this.props.decimalScale) !== null && _this$props$decimalSc !== void 0 ? _this$props$decimalSc : 2,\n      onValueChange: this.props.onValueChange,\n      disabled: this.props.readOnly,\n      readOnly: this.props.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Controls/NumberField.jsx"],"names":["React","Component","NumberFormat","Input","NumberField","render","props","value","className","displayType","input","decimalScale","onValueChange","readOnly"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACjDI,EAAAA,MAAM,GAAG;AAAA;;AACP;AACA,wBACE,oBAAC,YAAD;AACE,MAAA,WAAW,EAAEF,KADf;AAEE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,KAFpB;AAGE,MAAA,SAAS,EAAG,gBAAe,KAAKD,KAAL,CAAWE,SAAU,EAHlD;AAIE,MAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAAX,IAA0B,OAA1B,GAAoC,OAApC,GAA8C,MAJ7D;AAKE,MAAA,iBAAiB,EAAE,IALrB;AAME,MAAA,SAAS,EACP,KAAKH,KAAL,CAAWI,KAAX,GAAmB,oBAAnB,GAA0C,KAAKJ,KAAL,CAAWE,SAAX,IAAwB,EAPtE;AASE,MAAA,iBAAiB,EAAE,IATrB;AAUE,MAAA,YAAY,2BAAE,KAAKF,KAAL,CAAWK,YAAb,yEAA6B,CAV3C;AAWE,MAAA,aAAa,EAAE,KAAKL,KAAL,CAAWM,aAX5B;AAYE,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWO,QAZvB;AAaE,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QAbvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD;;AApBgD","sourcesContent":["import React, { Component } from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport { Input } from \"reactstrap\";\nexport default class NumberField extends Component {\n  render() {\n    // console.log(\"THIS THE DEPLAY TYPE\", ths)\n    return (\n      <NumberFormat\n        customInput={Input}\n        value={this.props.value}\n        className={`form-control ${this.props.className}`}\n        displayType={this.props.displayType == \"input\" ? \"input\" : \"text\"}\n        thousandSeparator={true}\n        className={\n          this.props.input ? \"form-control right\" : this.props.className || \"\"\n        }\n        fixedDecimalScale={true}\n        decimalScale={this.props.decimalScale ?? 2}\n        onValueChange={this.props.onValueChange}\n        disabled={this.props.readOnly}\n        readOnly={this.props.readOnly}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}