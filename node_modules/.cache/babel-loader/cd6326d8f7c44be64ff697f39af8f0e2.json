{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Dashboard/AdminDashboard.jsx\";\nimport React, { Component } from 'react';\nimport './Dashboard.scss';\nimport { Row, Col, Card, CardTitle, CardText } from \"reactstrap\";\nimport NoDataYet from '../Layout/NoDataYet';\nimport { Fragment } from 'react';\nimport axiosInstance from '../misc/Axios';\nimport NumberField from '../Controls/NumberField';\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      live_products_count: 0,\n      pending_products_count: 0,\n      total_products: 0,\n      orders_pending_confirmation: 0\n    };\n\n    this.componentDidMount = () => {\n      this.setState({ ...this.state,\n        loading: true\n      });\n      setTimeout(() => {\n        Promise.all([axiosInstance.get(\"/admins/dashboard/live_products_count\"), axiosInstance.get(\"/admins/dashboard/pending_products_count\"), axiosInstance.get(\"/admins/dashboard/total_products_count\"), axiosInstance.get(\"/admins/dashboard/orders_pending_confirmation_count\")]).then(([live_products_count_response, pending_products_count_response, total_products_count_response, orders_pending_confirmation_count_response]) => {\n          if (live_products_count_response.status == 200) {\n            this.setState({ ...this.state,\n              live_products_count: live_products_count_response.data.data\n            });\n          }\n\n          if (pending_products_count_response.status == 200) {\n            this.setState({ ...this.state,\n              pending_products_count: pending_products_count_response.data.data\n            });\n          }\n\n          if (total_products_count_response.status == 200) {\n            this.setState({ ...this.state,\n              total_products_count: total_products_count_response.data.data\n            });\n          }\n\n          if (orders_pending_confirmation_count_response.status == 200) {\n            this.setState({ ...this.state,\n              orders_pending_confirmation_count: orders_pending_confirmation_count_response.data.data\n            });\n          }\n        });\n      }, 1000);\n    };\n  }\n\n  render() {\n    var dashInfo = [{\n      name: \"Live Products\",\n      value: this.state.live_products_count || 0\n    }, {\n      name: \"Pending Products\",\n      value: this.state.pending_products_count\n    }, {\n      name: \"Total Products\",\n      value: this.state.total_products_count || 0\n    }, {\n      name: \"Order Pending Confirmation \",\n      value: this.state.orders_pending_confirmation_count\n    }];\n    return /*#__PURE__*/React.createElement(Col, {\n      className: \"dashboardContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, dashInfo.map((info, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"infoBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 32\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"h-100 value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(NumberField, {\n        value: info.value,\n        decimalScale: info.decimalScale || 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        className: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, info.name)));\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"Performance Over Time\"), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Dashboard/AdminDashboard.jsx"],"names":["React","Component","Row","Col","Card","CardTitle","CardText","NoDataYet","Fragment","axiosInstance","NumberField","Dashboard","state","live_products_count","pending_products_count","total_products","orders_pending_confirmation","componentDidMount","setState","loading","setTimeout","Promise","all","get","then","live_products_count_response","pending_products_count_response","total_products_count_response","orders_pending_confirmation_count_response","status","data","total_products_count","orders_pending_confirmation_count","render","dashInfo","name","value","map","info","i","decimalScale"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Dashboard.scss'\nimport { Row, Col, Card, CardTitle, CardText } from \"reactstrap\"\nimport NoDataYet from '../Layout/NoDataYet'\nimport { Fragment } from 'react'\nimport axiosInstance from '../misc/Axios'\nimport NumberField from '../Controls/NumberField'\nexport default class Dashboard extends Component {\n    state = {\n        live_products_count: 0,\n        pending_products_count: 0,\n        total_products: 0,\n        orders_pending_confirmation: 0\n    }\n    componentDidMount = () => {\n        this.setState({\n            ...this.state,\n            loading: true\n        })\n        setTimeout(() => {\n            Promise.all([axiosInstance.get(\"/admins/dashboard/live_products_count\"), axiosInstance.get(\"/admins/dashboard/pending_products_count\"), axiosInstance.get(\"/admins/dashboard/total_products_count\"), axiosInstance.get(\"/admins/dashboard/orders_pending_confirmation_count\")]).then(([live_products_count_response, pending_products_count_response, total_products_count_response, orders_pending_confirmation_count_response])=>{\n           \n            if(live_products_count_response.status == 200){\n                this.setState({\n                    ...this.state,\n                    live_products_count: live_products_count_response.data.data\n                })\n            }\n            if(pending_products_count_response.status == 200){\n                this.setState({\n                    ...this.state,\n                    pending_products_count: pending_products_count_response.data.data\n                })\n            }\n            if(total_products_count_response.status == 200){\n                this.setState({\n                    ...this.state,\n                    total_products_count: total_products_count_response.data.data\n                })\n            }\n            if(orders_pending_confirmation_count_response.status == 200){\n                this.setState({\n                    ...this.state,\n                    orders_pending_confirmation_count: orders_pending_confirmation_count_response.data.data\n                })\n            }\n           \n        })\n    }, 1000)\n    }\n    render() {\n        var dashInfo = [{name: \"Live Products\", value: this.state.live_products_count || 0}, {name: \"Pending Products\", value: this.state.pending_products_count},{name: \"Total Products\", value: this.state.total_products_count || 0} , {name: \"Order Pending Confirmation \", value: this.state.orders_pending_confirmation_count}]\n        return (\n            <Col className='dashboardContent'>\n                <Row>\n                    {dashInfo.map((info, i)=> {\n                        return <Col md={3} className='infoBox'>\n                            \n                        <Col className='inner'>\n                            <Row>\n                        <Col className=\"h-100 value\">\n                            <NumberField  value = {info.value} decimalScale={info.decimalScale || 0}/>\n                            </Col>\n                            </Row>\n                                <Col className='bottom'>\n                                    {info.name}\n                                </Col>\n                        </Col>\n    \n                        </Col>\n                    })}\n                    \n                    \n                </Row>\n                <Row>\n                    <Col md={12}>\n                        <Card body>\n                            <CardTitle>Performance Over Time</CardTitle>\n                            <CardText>\n                                \n                            </CardText>\n                        </Card>\n                        \n                    </Col>\n                    {/* <Col md={4}>\n                        <Card body>\n                            <CardTitle>Revenue </CardTitle>\n                            <CardText>\n                                <NoDataYet />\n                            </CardText>\n                        </Card>\n                    </Col> */}\n                </Row>\n            </Col>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}