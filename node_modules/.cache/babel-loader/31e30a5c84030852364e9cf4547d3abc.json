{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Layout/DashboardTop.jsx\";\nimport React, { Component } from 'react';\nimport { Col } from 'reactstrap';\nimport './DashboardTop.scss';\nimport * as actions from '../../actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport _ from 'lodash';\n\nclass DashboardTop extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.isHomePage = () => {\n      if (window.location.pathname == '/') {\n        return true;\n      } // else if(!_.isEmpty(this.props.authentication.default_app)){\n      //     var app = this.props.authentication.default_app;\n      //     // this.props.history.push(app.home)\n      //     return false\n      // }\n\n\n      console.log(\"Home with empty default app ---\");\n      return false;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"dashboardTop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, this.isHomePage() == true ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"welcomeMessage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 87\n      }\n    }, \"Welcome, \", this.props.authentication.user.first_name, \"!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, \"You have 0 message and 0 notifications\")) : '');\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardTop);","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Layout/DashboardTop.jsx"],"names":["React","Component","Col","actions","connect","bindActionCreators","_","DashboardTop","isHomePage","window","location","pathname","console","log","render","props","authentication","user","first_name","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAO,qBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,CAAP,MAAc,QAAd;;AACA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACjCO,UADiC,GACpB,MAAM;AAEf,UAAIC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,IAA4B,GAAhC,EAAsC;AAElC,eAAO,IAAP;AACH,OALc,CAMf;AACA;AACA;AACA;AACA;;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACA,aAAO,KAAP;AACH,KAdgC;AAAA;;AAejCC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,UAAL,MAAqB,IAArB,gBAA6B,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAc,KAAKO,KAAL,CAAWC,cAAX,CAA0BC,IAA1B,CAA+BC,UAA7C,MAAxC,eAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAD0B,CAA7B,GAEQ,EAHb,CADJ;AAOH;;AAvBgC;;AA0BrC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAEJ,EAAAA,cAAc,EAAEI,KAAK,CAACJ;AAAxB,CAAL,CAA7B;;AACA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AAAEnB,EAAAA,OAAO,EAAEE,kBAAkB,CAACF,OAAD,EAAUmB,QAAV;AAA7B,CAAL,CAAnC;;AAEA,eAAelB,OAAO,CACpBe,eADoB,EAEpBE,kBAFoB,CAAP,CAGbd,YAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Col } from 'reactstrap'\nimport './DashboardTop.scss';\nimport * as actions from '../../actions'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport _ from 'lodash'\nclass DashboardTop extends Component {\n    isHomePage = () => {\n        \n        if (window.location.pathname == '/' ) {\n            \n            return true\n        }\n        // else if(!_.isEmpty(this.props.authentication.default_app)){\n        //     var app = this.props.authentication.default_app;\n        //     // this.props.history.push(app.home)\n        //     return false\n        // }\n        console.log(\"Home with empty default app ---\")\n        return false\n    }\n    render() {\n        return (\n            <Col md={12} className='dashboardTop' >\n                {this.isHomePage() == true  ? <Col md={12} className=\"welcomeMessage\"><h1>Welcome, {this.props.authentication.user.first_name}!</h1>\n                    <p>You have 0 message and 0 notifications</p>\n                </Col> : ''}\n            </Col>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({ authentication: state.authentication })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) })\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DashboardTop);\n"]},"metadata":{},"sourceType":"module"}