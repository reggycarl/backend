{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Login/PartnerLogin.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Login.scss\";\nimport PartnerLoginForm from \"./PartnerLoginForm\";\nimport { LOGIN } from \"../../actions\";\nimport axios from \"axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport _ from \"lodash\";\nimport qs from \"query-string\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthLayout from \"../Layout/AuthLayout\";\nimport { Col, Button, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.componentDidMount = () => {\n      console.log(this.props);\n      const params = new URLSearchParams(window.location.search);\n      var show_confirmed = false;\n\n      if (params.has(\"account_confirmation_success\")) {\n        show_confirmed = params.get(\"account_confirmation_success\") == \"true\" ? true : false;\n      }\n\n      this.setState({ ...this.state,\n        show_confirmed: show_confirmed\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({ ...this.state,\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.login = e => {\n      e.preventDefault();\n      console.log(\"LOGGINSING\");\n      this.props.actions.partner_login(this.state.email, this.state.password);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AuthLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, this.state.show_confirmed ? this.showConfirmed() : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4 col-sm-4 authDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Partner Login\"), !_.isEmpty(this.props.authentication.loginErrorMessage) ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-danger \",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, this.props.authentication.loginErrorMessage, \" \") : \"\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PartnerLoginForm, Object.assign({\n      id: \"loginBox\"\n    }, this.state, {\n      loading: this.props.authentication.loading,\n      onChange: this.onChange,\n      login: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  showConfirmed() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Account Successfully Confirmed\")), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"Click on the button below to login to your account\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-success\",\n      onClick: () => {\n        window.location.replace(window.location.protocol + \"//\" + window.location.host);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Login\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Login/PartnerLogin.jsx"],"names":["React","Component","PartnerLoginForm","LOGIN","axios","actions","connect","bindActionCreators","_","qs","Redirect","AuthLayout","Col","Button","Row","Link","Login","state","email","password","componentDidMount","console","log","props","params","URLSearchParams","window","location","search","show_confirmed","has","get","setState","onChange","e","target","name","value","login","preventDefault","partner_login","render","showConfirmed","isEmpty","authentication","loginErrorMessage","loading","replace","protocol","host","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Login.scss\";\nimport PartnerLoginForm from \"./PartnerLoginForm\";\n\nimport { LOGIN } from \"../../actions\";\nimport axios from \"axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport _ from \"lodash\";\nimport qs from \"query-string\";\nimport { Redirect } from \"react-router-dom\";\n\nimport AuthLayout from \"../Layout/AuthLayout\";\n\nimport { Col, Button, Row } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n  componentDidMount = () => {\n    console.log(this.props);\n    const params = new URLSearchParams(window.location.search);\n    var show_confirmed = false;\n    if (params.has(\"account_confirmation_success\")) {\n      show_confirmed =\n        params.get(\"account_confirmation_success\") == \"true\" ? true : false;\n    }\n\n    this.setState({\n      ...this.state,\n      show_confirmed: show_confirmed,\n    });\n  };\n\n  onChange = (e) => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value,\n    });\n  };\n  login = (e) => {\n    e.preventDefault();\n    console.log(\"LOGGINSING\");\n    this.props.actions.partner_login(this.state.email, this.state.password);\n  };\n\n  render() {\n    return (\n      <AuthLayout>\n        {this.state.show_confirmed ? (\n          this.showConfirmed()\n        ) : (\n          <div className=\"col-md-4 col-sm-4 authDiv\">\n            <div className=\"col-md-12 header\">\n              <h2>Partner Login</h2>\n              {!_.isEmpty(this.props.authentication.loginErrorMessage) ? (\n                <div class=\"alert alert-danger \" role=\"alert\">\n                  {this.props.authentication.loginErrorMessage}{\" \"}\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <Col md={12}>\n              <PartnerLoginForm\n                id=\"loginBox\"\n                {...this.state}\n                loading={this.props.authentication.loading}\n                onChange={this.onChange}\n                login={this.login}\n              />\n            </Col>\n\n            {/* <Col md={6}>\n\n                        </Col> */}\n          </div>\n        )}\n      </AuthLayout>\n    );\n  }\n\n  showConfirmed() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-12 header\">\n          <h2>Account Successfully Confirmed</h2>\n        </div>\n        <Col md={12}>\n          <p>Click on the button below to login to your account</p>\n          {/* <Button color='success'>Login</Button> */}\n          <Link\n            to=\"/\"\n            className=\"btn btn-success\"\n            onClick={() => {\n              window.location.replace(\n                window.location.protocol + \"//\" + window.location.host\n              );\n            }}\n          >\n            Login\n          </Link>\n        </Col>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}