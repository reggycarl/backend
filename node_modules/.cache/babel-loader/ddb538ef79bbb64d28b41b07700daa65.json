{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/lib/ReactWillPaginateTable/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Input, Row, Button, Container } from \"reactstrap\";\nimport \"./index.scss\";\nimport _ from \"lodash\";\nimport qs from \"query-string\";\nimport NumberField from \"../../components/Controls/NumberField\";\nimport { formatDate } from \"../../components/misc/functions\";\nimport InputGroup from \"reactstrap/lib/InputGroup\";\nimport Pagination from \"react-js-pagination\";\nimport ExcelExport from \"./ExcelExport\";\nexport default class ReactWillPaginateTable extends Component {\n  constructor(props) {}\n\n  capitalizeFirstLetter(string) {\n    // return string\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      className: \"form-control searchTextBox\",\n      name: \"search_string\",\n      value: this.state.search_string,\n      placeholder: \"Search for...\",\n      \"aria-label\": \"Search Terms\",\n      \"aria-describedby\": \"searchButton\",\n      onChange: this.inputChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"  full-width\",\n      color: \"primary\",\n      type: \"button\",\n      id: \"searchButton\",\n      onClick: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, \"Search\"))))), /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-bordered table-striped table-hover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    }, \"#\"), this.props.columns.map(d => {\n      var name = d.name.replace(/_/g, \" \");\n      name = this.capitalizeFirstLetter(name);\n      return /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 26\n        }\n      }, name);\n    }), this.props.actions && this.props.actions.length > 0 ? /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, \"Actions\") : \"\", this.props.show_edit_actions ? /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 19\n      }\n    }, \"Actions\") : \"\")), this.state.loading ? /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"loadingTD\",\n      colSpan: this.props.columns.length + 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, \"Loading\")) : this.state.data.length > 0 ? /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 15\n      }\n    }, this.state.data.map((row, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        onClick: e => {\n          if (!this.props.disable_link || !this.props.show_edit_actions) {\n            this.redirectToPage(e, row);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 23\n        }\n      }, (this.state.page - 1) * this.state.per_page + index + 1), this.props.columns.map(col => {\n        var data;\n\n        if (col.number == true) {\n          data = data = /*#__PURE__*/React.createElement(\"td\", {\n            className: \"right\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(NumberField, {\n            value: row[col.name],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 31\n            }\n          }));\n        } else if (col.boolean == true) {\n          data = /*#__PURE__*/React.createElement(\"td\", {\n            className: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }\n          }, row[col.field || col.name] ? col.options[0] : col.options[1]);\n        } else if (col.date == true) {\n          data = /*#__PURE__*/React.createElement(\"td\", {\n            className: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }\n          }, formatDate(row[col.field || col.name]));\n        } else {\n          data = /*#__PURE__*/React.createElement(\"td\", {\n            className: \"\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }\n          }, row[col.field || col.name]);\n        }\n\n        return data;\n      }), this.props.actions && this.props.actions.length > 0 ? /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 25\n        }\n      }, \" \", this.props.actions.map(action => {\n        console.log(\"THIS IS ACTIVE\", row);\n        console.log(\"THIS IS ACTIVE PARAMS\", action.active_param);\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"a\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: `btn btn-${action.color || \"primary\"} btn-sm`,\n          disabled: row[action.active_param],\n          onClick: e => {\n            this.sendAction(e, action, row);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 33\n          }\n        }, action.name, \" \"), \" \", \"\\xA0\", \" \");\n      })) : \"\", this.props.show_edit_actions ? /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 55\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 59\n        }\n      }, \"Edit\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n        onClick: e => {\n          this.redirectToPage(e, row);\n          console.log(\"clicking view button \");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 81\n        }\n      }, \"view\")) : \" \");\n    })) : /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: this.props.columns.length + 2,\n      className: \"centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }, \"No Data to Display\"))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Pagination, {\n      activePage: this.state.page || 1,\n      itemsCountPerPage: this.state.per_page || 20,\n      totalItemsCount: this.state.size,\n      pageRangeDisplayed: 6,\n      itemClass: \"btn btn-success\",\n      innerClass: \"btn-group btn-group-toggle special pagination\",\n      onChange: this.navigateTo.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ExcelExport, Object.assign({}, this.props, {\n      additional_params: this.props.additional_params,\n      columns: this.props.columns,\n      axiosInstance: this.props.axiosInstance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/lib/ReactWillPaginateTable/index.jsx"],"names":["React","Component","Col","Input","Row","Button","Container","_","qs","NumberField","formatDate","InputGroup","Pagination","ExcelExport","ReactWillPaginateTable","constructor","props","capitalizeFirstLetter","string","charAt","toUpperCase","slice","render","search","state","search_string","inputChanged","columns","map","d","name","replace","actions","length","show_edit_actions","loading","data","row","index","e","disable_link","redirectToPage","page","per_page","col","number","boolean","field","options","date","action","console","log","active_param","color","sendAction","size","navigateTo","bind","additional_params","axiosInstance"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,YAAnD;AACA,OAAO,cAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,EAAP,MAAe,cAAf;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,UAAT,QAA2B,iCAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,MAAMC,sBAAN,SAAqCb,SAArC,CAA+C;AAC5Dc,EAAAA,WAAW,CAACC,KAAD,EAAQ,CAAE;;AA4HrBC,EAAAA,qBAAqB,CAACC,MAAD,EAAS;AAC5B;AACA,WAAOA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,MAAM,CAACG,KAAP,CAAa,CAAb,CAAxC;AACD;;AA0EDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,QAAQ,EAAE,KAAKC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,4BAFZ;AAGE,MAAA,IAAI,EAAC,eAHP;AAIE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,aAJpB;AAKE,MAAA,WAAW,EAAC,eALd;AAME,oBAAW,cANb;AAOE,0BAAiB,cAPnB;AAQE,MAAA,QAAQ,EAAE,KAAKC,YARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE;AAAK,MAAA,KAAK,EAAC,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,EAAE,EAAC,cAJL;AAKE,MAAA,OAAO,EAAE,KAAKH,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAXF,CADF,CADF,CADF,eA4BE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,CADF,CADF,eAiCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,gDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEG,KAAKP,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CAAwBC,CAAD,IAAO;AAC7B,UAAIC,IAAI,GAAGD,CAAC,CAACC,IAAF,CAAOC,OAAP,CAAe,IAAf,EAAqB,GAArB,CAAX;AACAD,MAAAA,IAAI,GAAG,KAAKb,qBAAL,CAA2Ba,IAA3B,CAAP;AACA,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAL,CAAP;AACD,KAJA,CAFH,EAOG,KAAKd,KAAL,CAAWgB,OAAX,IAAsB,KAAKhB,KAAL,CAAWgB,OAAX,CAAmBC,MAAnB,GAA4B,CAAlD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,GAGC,EAVJ,EAYG,KAAKjB,KAAL,CAAWkB,iBAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,GAGC,EAfJ,CADF,CADF,EAsBG,KAAKV,KAAL,CAAWW,OAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWW,OAAX,CAAmBM,MAAnB,GAA4B,CAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADD,GASG,KAAKT,KAAL,CAAWY,IAAX,CAAgBH,MAAhB,GAAyB,CAAzB,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWY,IAAX,CAAgBR,GAAhB,CAAoB,CAACS,GAAD,EAAMC,KAAN,KAAgB;AACnC,0BACE;AACE,QAAA,OAAO,EAAGC,CAAD,IAAO;AACd,cAAI,CAAC,KAAKvB,KAAL,CAAWwB,YAAZ,IAA4B,CAAC,KAAKxB,KAAL,CAAWkB,iBAA5C,EAA+D;AAC/D,iBAAKO,cAAL,CAAoBF,CAApB,EAAsBF,GAAtB;AACD;AAAC,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,KAAKb,KAAL,CAAWkB,IAAX,GAAkB,CAAnB,IAAwB,KAAKlB,KAAL,CAAWmB,QAAnC,GACCL,KADD,GAEC,CAHJ,CAPF,EAYG,KAAKtB,KAAL,CAAWW,OAAX,CAAmBC,GAAnB,CAAwBgB,GAAD,IAAS;AAC/B,YAAIR,IAAJ;;AACA,YAAIQ,GAAG,CAACC,MAAJ,IAAc,IAAlB,EAAwB;AACtBT,UAAAA,IAAI,GAAGA,IAAI,gBACT;AAAI,YAAA,SAAS,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,WAAD;AAAa,YAAA,KAAK,EAAEC,GAAG,CAACO,GAAG,CAACd,IAAL,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAKD,SAND,MAMO,IAAIc,GAAG,CAACE,OAAJ,IAAe,IAAnB,EAAyB;AAC9BV,UAAAA,IAAI,gBACF;AAAI,YAAA,SAAS,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGC,GAAG,CAACO,GAAG,CAACG,KAAJ,IAAaH,GAAG,CAACd,IAAlB,CAAH,GACGc,GAAG,CAACI,OAAJ,CAAY,CAAZ,CADH,GAEGJ,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAHN,CADF;AAOD,SARM,MAQA,IAAIJ,GAAG,CAACK,IAAJ,IAAY,IAAhB,EAAsB;AAC3Bb,UAAAA,IAAI,gBACF;AAAI,YAAA,SAAS,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG1B,UAAU,CAAC2B,GAAG,CAACO,GAAG,CAACG,KAAJ,IAAaH,GAAG,CAACd,IAAlB,CAAJ,CADb,CADF;AAKD,SANM,MAMA;AACLM,UAAAA,IAAI,gBACF;AAAI,YAAA,SAAS,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBC,GAAG,CAACO,GAAG,CAACG,KAAJ,IAAaH,GAAG,CAACd,IAAlB,CAAvB,CADF;AAGD;;AAED,eAAOM,IAAP;AACD,OA7BA,CAZH,EA0CG,KAAKpB,KAAL,CAAWgB,OAAX,IAAsB,KAAKhB,KAAL,CAAWgB,OAAX,CAAmBC,MAAnB,GAA4B,CAAlD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEG,KAAKjB,KAAL,CAAWgB,OAAX,CAAmBJ,GAAnB,CAAwBsB,MAAD,IAAY;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bf,GAA9B;AACAc,QAAAA,OAAO,CAACC,GAAR,CACE,uBADF,EAEEF,MAAM,CAACG,YAFT;AAIA,4BACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AACE,UAAA,SAAS,EAAG,WACVH,MAAM,CAACI,KAAP,IAAgB,SACjB,SAHH;AAIE,UAAA,QAAQ,EAAEjB,GAAG,CAACa,MAAM,CAACG,YAAR,CAJf;AAKE,UAAA,OAAO,EAAGd,CAAD,IAAO;AACd,iBAAKgB,UAAL,CAAgBhB,CAAhB,EAAmBW,MAAnB,EAA2Bb,GAA3B;AACD,WAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASGa,MAAM,CAACpB,IATV,EASgB,GAThB,CAFF,EAYY,GAZZ,UAaS,GAbT,CADF;AAiBD,OAvBA,CAFH,CADD,GA8BC,EAxEJ,EA0EI,KAAKd,KAAL,CAAWkB,iBAAX,gBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,oBAA0B;AAAQ,QAAA,OAAO,EAAGK,CAAD,IAAO;AAChF,eAAKE,cAAL,CAAoBF,CAApB,EAAsBF,GAAtB;AACAc,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,SAHyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA1B,CAA9B,GAGsB,GA7E1B,CADF;AAiFD,KAlFA,CADH,CADE,gBAyFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAE,KAAKpC,KAAL,CAAWW,OAAX,CAAmBM,MAAnB,GAA4B,CADvC;AAEE,MAAA,SAAS,EAAC,UAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CADF,CAxHJ,CADF,CAjCF,eAqKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKT,KAAL,CAAWkB,IAAX,IAAmB,CADjC;AAEE,MAAA,iBAAiB,EAAE,KAAKlB,KAAL,CAAWmB,QAAX,IAAuB,EAF5C;AAGE,MAAA,eAAe,EAAE,KAAKnB,KAAL,CAAWgC,IAH9B;AAIE,MAAA,kBAAkB,EAAE,CAJtB;AAKE,MAAA,SAAS,EAAC,iBALZ;AAME,MAAA,UAAU,EAAC,+CANb;AAOE,MAAA,QAAQ,EAAE,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CArKF,eAiLE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD,oBACM,KAAK1C,KADX;AAEE,MAAA,iBAAiB,EAAE,KAAKA,KAAL,CAAW2C,iBAFhC;AAGE,MAAA,OAAO,EAAE,KAAK3C,KAAL,CAAWW,OAHtB;AAIE,MAAA,aAAa,EAAE,KAAKX,KAAL,CAAW4C,aAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CAjLF,CADF;AA4LD;;AAvY2D","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Input, Row, Button, Container } from \"reactstrap\";\nimport \"./index.scss\";\nimport _ from \"lodash\";\nimport qs from \"query-string\";\nimport NumberField from \"../../components/Controls/NumberField\";\nimport { formatDate } from \"../../components/misc/functions\";\nimport InputGroup from \"reactstrap/lib/InputGroup\";\nimport Pagination from \"react-js-pagination\";\n\nimport ExcelExport from \"./ExcelExport\";\n\nexport default class ReactWillPaginateTable extends Component {\n  constructor(props) {}\n  state = {\n    data: [],\n    downloadData: [],\n    endpoint: this.props.endpoint,\n    per_page: this.props.per_page || 20,\n    page: this.props.page || 1,\n    search_string: \"\",\n    new_params: \"\",\n  };\n  // populateDownloadData = () => {\n  //   var params = qs.parse(this.props.location.search || {});\n  //   console.log(\"Populating download data\");\n  //   var new_params = this.props.location.search.replace(\"?\", \"\");\n  //   var search_string =\n  //     params.search_string != \"undefined\" && params.search_string != undefined\n  //       ? params.search_string\n  //       : \"\";\n  //   this.props.axiosInstance\n  //     .get(\n  //       this.props.endpoint +\n  //         `?search_string=${search_string}&all=true&${this.props.additional_params}&${new_params}`\n  //     )\n  //     .then((response) => {\n  //       console.log(\"THIS IS RESPONSE FON SERVER\", response);\n\n  //       if (response.status == 200) {\n  //         console.log(\"Populating and setting state download data\");\n  //         this.setState({\n  //           ...this.state,\n  //           downloadData: response.data.data,\n  //         });\n  //       }\n  //     });\n  // };\n  componentDidMount = () => {\n    console.log(\"THIS IS STATUS OF LINK\", this.props.disable_link);\n    // this.populateDownloadData();\n    this.populate();\n  };\n\n  populate = () => {\n    var params = qs.parse(this.props.location.search || {});\n    console.log(\"THESE ARE PARAMS\");\n    var new_params = this.props.location.search.replace(\"?\", \"\");\n    var search_string =\n      params.search_string != \"undefined\" && params.search_string != undefined\n        ? params.search_string\n        : \"\";\n    this.setState({\n      ...this.state,\n      new_params: { ...new_params },\n      search_string: search_string,\n    });\n\n    console.log(\"THIS IS SEARCH STRING\", search_string);\n\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    // this.props.axiosInstance.get(this.props.endpoint+ `?per_page=${qs.per_page || this.state.per_page}&page=${params.page || this.state.page ||  1}&search_string=${search_string || this.state.search_string!= \"undefined\" || this.state.search_string!= undefined ? this.state.search_string : \"\"}&${this.props.additional_params}&${new_params}`)\n    this.props.axiosInstance\n      .get(\n        this.props.endpoint +\n          `?per_page=${qs.per_page || this.state.per_page}&page=${\n            params.page || this.state.page || 1\n          }&search_string=${search_string}&${\n            this.props.additional_params\n          }&${new_params}`\n      )\n      .then(\n        (result) => {\n          console.log(\"RESULT IS \", result);\n          console.log(\"Populating Search string with\", params.search_string);\n          this.setState({\n            data: result.data.data,\n            size: result.data.size,\n            page: parseInt(result.data.page),\n            per_page: parseInt(result.data.per_page),\n            search_string:\n              params.search_string != \"undefined\" ||\n              params.search_string != undefined\n                ? params.search_string\n                : \"\" || \"\",\n            loading: false,\n          });\n          if (this.props.callback) {\n            this.props.callback(result.data.data);\n          }\n        },\n        (error) => {\n          console.log(error);\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n        }\n      );\n  };\n\n  sendAction = (e, action, obj) => {\n    e.preventDefault();\n    e.stopPropagation();\n    // alert(`Visting ${action.url}`);\n    var new_action = action.url.replace(\":uuid\", obj.uuid);\n\n    this.props.axiosInstance.post(new_action).then((response) => {\n      if (response.status == 202) {\n        var state_data = [...this.state.data];\n\n        var current_data_index = _.findIndex(state_data, (cur_obj) => {\n          return cur_obj.uuid == obj.uuid;\n        });\n        state_data[current_data_index] = response.data.data;\n        console.log(\"THIS IS THE CURRENT DATA\", current_data_index);\n        this.setState({\n          ...this.state,\n          data: [...state_data],\n        });\n      }\n    });\n  };\n\n  capitalizeFirstLetter(string) {\n    // return string\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  search = (e) => {\n    this.setState({\n      ...this.state,\n      page: 1,\n      loading: true,\n    });\n    this.props.history.push(\n      `${this.props.link_endpoint || this.props.endpoint}?page=1&per_page=${\n        this.state.per_page\n      }&search_string=${this.state.search_string}`\n    );\n  };\n  inputChanged = (e) => {\n    console.log(e.target.name);\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value,\n    });\n  };\n  navigateTo = (page) => {\n    var params = qs.parse(\n      this.props.location ? this.props.location.search : \" \"\n    );\n    console.log(\"THESE ARE QUERY\", params);\n    console.log(\"NAVIGATING>>>\");\n    if (this.props.disable_link == true) {\n      return true;\n    } else {\n      console.log(page);\n      this.setState({\n        ...this.state,\n        loading: true,\n      });\n      var search_string = \"\";\n      if (\n        this.state.search_string == \"undefined\" ||\n        this.state.search_string == null\n      ) {\n        search_string = \"\";\n      } else {\n        search_string = this.state.search_string;\n      }\n      var link = `${\n        this.props.link_endpoint || this.props.endpoint\n      }?page=${page}&per_page=${\n        this.state.per_page\n      }&search_string=${search_string}${\n        this.props.options ? this.props.options : \"\"\n      }`;\n      if (params) {\n        Object.keys(params).forEach((key) => {\n          if (key == \"type\") {\n            link += `&${key}=${params[key]}`;\n          }\n        });\n      }\n      this.props.history.push(link);\n    }\n  };\n  redirectToPage =(e,row) =>{\n    e.preventDefault();\n      \n        console.log(\"calling redirect function\")\n        this.props.history.push(\n          `${\n            this.props.link_endpoint ?? this.props.endpoint\n          }/${row.uuid}`\n        );\n      \n    \n    }\n  \n  render() {\n    return (\n      <React.Fragment>\n        <Col>\n          <Row>\n            <Col md={12}>\n              <form onSubmit={this.search}>\n                <InputGroup>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control searchTextBox\"\n                    name=\"search_string\"\n                    value={this.state.search_string}\n                    placeholder=\"Search for...\"\n                    aria-label=\"Search Terms\"\n                    aria-describedby=\"searchButton\"\n                    onChange={this.inputChanged}\n                  />\n                  <div class=\"input-group-append\">\n                    <Button\n                      className=\"  full-width\"\n                      color=\"primary\"\n                      type=\"button\"\n                      id=\"searchButton\"\n                      onClick={this.search}\n                    >\n                      Search\n                    </Button>\n                  </div>\n                </InputGroup>\n              </form>\n            </Col>\n            <Col md={1}></Col>\n          </Row>\n        </Col>\n        <Col md={12}>\n          <table className=\"table table-bordered table-striped table-hover\">\n            <thead className=\"thead-light\">\n              <tr>\n                <th>#</th>\n                {this.props.columns.map((d) => {\n                  var name = d.name.replace(/_/g, \" \");\n                  name = this.capitalizeFirstLetter(name);\n                  return <th>{name}</th>;\n                })}\n                {this.props.actions && this.props.actions.length > 0 ? (\n                  <th>Actions</th>\n                ) : (\n                  \"\"\n                )}\n                {this.props.show_edit_actions ? (\n                  <th>Actions</th>\n                ) : (\n                  \"\"\n                )}\n              </tr>\n             \n            </thead>\n            {this.state.loading ? (\n              <tr>\n                <td\n                  className=\"loadingTD\"\n                  colSpan={this.props.columns.length + 2}\n                >\n                  Loading\n                </td>\n              </tr>\n            ) : this.state.data.length > 0 ? (\n              <tbody>\n                {this.state.data.map((row, index) => {\n                  return (\n                    <tr\n                      onClick={(e) => {\n                        if (!this.props.disable_link || !this.props.show_edit_actions) {\n                        this.redirectToPage(e,row)\n                      }}\n                    }\n                    >\n                      <td>\n                        {(this.state.page - 1) * this.state.per_page +\n                          index +\n                          1}\n                      </td>\n                      {this.props.columns.map((col) => {\n                        var data;\n                        if (col.number == true) {\n                          data = data = (\n                            <td className={\"right\"}>\n                              <NumberField value={row[col.name]} />\n                            </td>\n                          );\n                        } else if (col.boolean == true) {\n                          data = (\n                            <td className={\"\"}>\n                              {row[col.field || col.name]\n                                ? col.options[0]\n                                : col.options[1]}\n                            </td>\n                          );\n                        } else if (col.date == true) {\n                          data = (\n                            <td className={\"\"}>\n                              {formatDate(row[col.field || col.name])}\n                            </td>\n                          );\n                        } else {\n                          data = (\n                            <td className={\"\"}>{row[col.field || col.name]}</td>\n                          );\n                        }\n\n                        return data;\n                      })}\n                      {this.props.actions && this.props.actions.length > 0 ? (\n                        <td>\n                          {\" \"}\n                          {this.props.actions.map((action) => {\n                            console.log(\"THIS IS ACTIVE\", row);\n                            console.log(\n                              \"THIS IS ACTIVE PARAMS\",\n                              action.active_param\n                            );\n                            return (\n                              <>\n                                <a></a>\n                                <button\n                                  className={`btn btn-${\n                                    action.color || \"primary\"\n                                  } btn-sm`}\n                                  disabled={row[action.active_param]}\n                                  onClick={(e) => {\n                                    this.sendAction(e, action, row);\n                                  }}\n                                >\n                                  {action.name}{\" \"}\n                                </button>{\" \"}\n                                &nbsp;{\" \"}\n                              </>\n                            );\n                          })}\n                        </td>\n\n                      ) : (\n                        \"\"\n                      )}\n                       {this.props.show_edit_actions? <td><button>Edit</button> <button onClick={(e) => {\n                        this.redirectToPage(e,row)\n                        console.log(\"clicking view button \")\n                      }}>view</button></td>:  \" \"}\n                    </tr>\n                  );\n                })}\n               \n                \n              </tbody>\n            ) : (\n              <tr>\n                <td\n                  colSpan={this.props.columns.length + 2}\n                  className=\"centered\"\n                >\n                  <b>No Data to Display</b>\n                </td>\n              </tr>\n            )}\n          </table>\n        </Col>\n        <Col>\n          <Pagination\n            activePage={this.state.page || 1}\n            itemsCountPerPage={this.state.per_page || 20}\n            totalItemsCount={this.state.size}\n            pageRangeDisplayed={6}\n            itemClass=\"btn btn-success\"\n            innerClass=\"btn-group btn-group-toggle special pagination\"\n            onChange={this.navigateTo.bind(this)}\n          />\n        </Col>\n\n        <Col>\n          <ExcelExport\n            {...this.props}\n            additional_params={this.props.additional_params}\n            columns={this.props.columns}\n            axiosInstance={this.props.axiosInstance}\n          />\n        </Col>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}