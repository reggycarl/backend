{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Dashboard/Dashboard.jsx\";\nimport React, { Component } from 'react';\nimport PartnerDashboard from './PartnerDashboard';\nimport AdminDashboard from './AdminDashboard';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../../actions';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    if (this.props.authentication.default_path == \"/partners/\") {\n      return /*#__PURE__*/React.createElement(PartnerDashboard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 23\n        }\n      });\n    } else if (this.props.authentication.default_path == \"/admins/\") {\n      return /*#__PURE__*/React.createElement(AdminDashboard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 23\n        }\n      });\n    } else {\n      return \"\";\n    }\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Dashboard));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Dashboard/Dashboard.jsx"],"names":["React","Component","PartnerDashboard","AdminDashboard","bindActionCreators","actions","connect","Link","withRouter","Dashboard","render","props","authentication","default_path","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AACC,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAC/BS,EAAAA,MAAM,GAAG;AAEF,QAAK,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,YAA1B,IAA0C,YAA/C,EAA4D;AACxD,0BAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAGK,IAAG,KAAKF,KAAL,CAAWC,cAAX,CAA0BC,YAA1B,IAA0C,UAA7C,EAAwD;AACzD,0BAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFI,MAGA;AACD,aAAO,EAAP;AACH;AAEP;;AAb8B;;AAkBnC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAAEH,EAAAA,cAAc,EAAEG,KAAK,CAACH;AAAxB,CAAL,CAA7B;;AACA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AAAEZ,EAAAA,OAAO,EAAED,kBAAkB,CAACC,OAAD,EAAUY,QAAV;AAA7B,CAAL,CAAnC;;AACA,eAAeT,UAAU,CAAEF,OAAO,CAChCQ,eADgC,EAEhCE,kBAFgC,CAAP,CAGzBP,SAHyB,CAAF,CAAzB","sourcesContent":["import React, { Component } from 'react'\nimport PartnerDashboard from './PartnerDashboard'\nimport AdminDashboard from './AdminDashboard'\nimport { bindActionCreators } from 'redux'\nimport * as actions from '../../actions'\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from \"react-router-dom\";\n class Dashboard extends Component {\n    render() {\n        \n           if ( this.props.authentication.default_path == \"/partners/\"){\n               return <PartnerDashboard />\n           }\n           else if(this.props.authentication.default_path == \"/admins/\"){\n               return <AdminDashboard />\n           }\n           else {\n               return \"\"\n           }\n        \n    }\n}\n\n\n\nconst mapStateToProps = state => ({ authentication: state.authentication })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) })\nexport default withRouter( connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Dashboard));"]},"metadata":{},"sourceType":"module"}