{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Controls/ProductTags.jsx\";\nimport React, { Component } from \"react\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nimport \"./product_tags.scss\";\nimport axiosInstance from \"../misc/Axios\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nconst KeyCodes = {\n  comma: 188,\n  enter: [10, 13]\n};\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\n\nclass ProductTags extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tags: [...this.props.tags],\n      suggestions: []\n    };\n\n    this.updateSuggestions = () => {\n      console.log(\"UPdating suggesstions\");\n    };\n\n    this.componentDidMount = () => {\n      axiosInstance.get(\"/product_tags/\").then(response => {\n        console.log(\"THIS IS RESPONSE\", response.data.data);\n        this.setState({ ...this.state,\n          suggestions: [...response.data.data]\n        });\n      });\n    };\n\n    this.handleFilterSuggestions = (textInputValue, possibleSuggestionsArray) => {\n      console.log(textInputValue);\n      console.log(possibleSuggestionsArray);\n      return this.state.suggestions;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReactTags, {\n      tags: this.props.tags,\n      suggestions: this.state.suggestions,\n      handleDelete: this.props.removeTag,\n      labelField: \"name\",\n      handleAddition: this.props.addTag,\n      handleDrag: this.handleDrag,\n      delimiters: delimiters // handleFilterSuggestions={this.handleFilterSuggestions}\n      ,\n      readOnly: this.props.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(ProductTags));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Controls/ProductTags.jsx"],"names":["React","Component","WithContext","ReactTags","axiosInstance","bindActionCreators","actions","connect","Link","withRouter","KeyCodes","comma","enter","delimiters","ProductTags","state","tags","props","suggestions","updateSuggestions","console","log","componentDidMount","get","then","response","data","setState","handleFilterSuggestions","textInputValue","possibleSuggestionsArray","render","removeTag","addTag","handleDrag","readOnly","mapStateToProps","authentication","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAW,IAAIC,SAAxB,QAAyC,iBAAzC;AACA,OAAO,qBAAP;AACA,OAAOC,aAAP,MAA0B,eAA1B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,GADQ;AAEfC,EAAAA,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL;AAFQ,CAAjB;AAKA,MAAMC,UAAU,GAAG,CAAC,GAAGH,QAAQ,CAACE,KAAb,EAAoBF,QAAQ,CAACC,KAA7B,CAAnB;;AACA,MAAMG,WAAN,SAA0Bb,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCc,KADkC,GAC1B;AACNC,MAAAA,IAAI,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,IAAf,CADA;AAENE,MAAAA,WAAW,EAAE;AAFP,KAD0B;;AAAA,SAMlCC,iBANkC,GAMd,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,KARiC;;AAAA,SAUlCC,iBAVkC,GAUd,MAAM;AACxBlB,MAAAA,aAAa,CAACmB,GAAd,CAAkB,gBAAlB,EAAoCC,IAApC,CAA0CC,QAAD,IAAc;AACrDL,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCI,QAAQ,CAACC,IAAT,CAAcA,IAA9C;AACA,aAAKC,QAAL,CAAc,EACZ,GAAG,KAAKZ,KADI;AAEZG,UAAAA,WAAW,EAAE,CAAC,GAAGO,QAAQ,CAACC,IAAT,CAAcA,IAAlB;AAFD,SAAd;AAID,OAND;AAOD,KAlBiC;;AAAA,SAmBlCE,uBAnBkC,GAmBR,CAACC,cAAD,EAAiBC,wBAAjB,KAA8C;AACtEV,MAAAA,OAAO,CAACC,GAAR,CAAYQ,cAAZ;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYS,wBAAZ;AACA,aAAO,KAAKf,KAAL,CAAWG,WAAlB;AACD,KAvBiC;AAAA;;AAyBlCa,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWD,IADnB;AAEE,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWG,WAF1B;AAGE,MAAA,YAAY,EAAE,KAAKD,KAAL,CAAWe,SAH3B;AAIE,MAAA,UAAU,EAAC,MAJb;AAKE,MAAA,cAAc,EAAE,KAAKf,KAAL,CAAWgB,MAL7B;AAME,MAAA,UAAU,EAAE,KAAKC,UANnB;AAOE,MAAA,UAAU,EAAErB,UAPd,CAQE;AARF;AASE,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWkB,QATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAaD;;AAvCiC;;AA0CpC,MAAMC,eAAe,GAAIrB,KAAD,KAAY;AAAEsB,EAAAA,cAAc,EAAEtB,KAAK,CAACsB;AAAxB,CAAZ,CAAxB;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCjC,EAAAA,OAAO,EAAED,kBAAkB,CAACC,OAAD,EAAUiC,QAAV;AADa,CAAf,CAA3B;;AAGA,eAAe9B,UAAU,CACvBF,OAAO,CAAC6B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CxB,WAA7C,CADuB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nimport \"./product_tags.scss\";\nimport axiosInstance from \"../misc/Axios\";\nimport { bindActionCreators } from \"redux\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nconst KeyCodes = {\n  comma: 188,\n  enter: [10, 13],\n};\n\nconst delimiters = [...KeyCodes.enter, KeyCodes.comma];\nclass ProductTags extends Component {\n  state = {\n    tags: [...this.props.tags],\n    suggestions: [],\n  };\n\n  updateSuggestions = () => {\n    console.log(\"UPdating suggesstions\");\n  };\n\n  componentDidMount = () => {\n    axiosInstance.get(\"/product_tags/\").then((response) => {\n      console.log(\"THIS IS RESPONSE\", response.data.data);\n      this.setState({\n        ...this.state,\n        suggestions: [...response.data.data],\n      });\n    });\n  };\n  handleFilterSuggestions = (textInputValue, possibleSuggestionsArray) => {\n    console.log(textInputValue);\n    console.log(possibleSuggestionsArray);\n    return this.state.suggestions;\n  };\n\n  render() {\n    return (\n      <ReactTags\n        tags={this.props.tags}\n        suggestions={this.state.suggestions}\n        handleDelete={this.props.removeTag}\n        labelField=\"name\"\n        handleAddition={this.props.addTag}\n        handleDrag={this.handleDrag}\n        delimiters={delimiters}\n        // handleFilterSuggestions={this.handleFilterSuggestions}\n        readOnly={this.props.readOnly}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ProductTags)\n);\n"]},"metadata":{},"sourceType":"module"}