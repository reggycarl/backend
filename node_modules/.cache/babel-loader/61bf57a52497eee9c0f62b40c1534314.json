{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Categories/Category.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from \"reactstrap\";\nimport Select from \"../Controls/Select\";\nimport moment from \"moment\";\nimport axiosInstance from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link } from \"react-router-dom\";\nimport { getIndirectCategories, getProductsTypes, getGenders, getMaritalStatuses } from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport CategoriesModal from \"../Modals/CategoriesModal\";\nimport \"react-toggle/style.css\";\nimport Toggle from \"react-toggle\";\nexport default class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category: {\n        base_price: 0,\n        insurance: 0,\n        maintenance: 0,\n        price_per_km: 0,\n        price_per_min: 0\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      category_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      showCategoriesModal: false\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        category: { ...this.state.category,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        category: { ...this.state.category,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.selectCategory = category => {\n      this.setState({ ...this.state,\n        category: { ...this.state.category,\n          parent_id: category.id,\n          parent: category\n        }\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          category: { ...this.state.category,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.category[attr_name]);\n        var date = new moment(this.state.category[attr_name]);\n        var new_state = { ...this.state,\n          category: { ...this.state.category,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setProducts = (state, category) => {\n      console.log(\"THIS IS STATE\", state);\n      var new_state = { ...state,\n        category: category // type_id: state.category_types.\n        // parent_id: state.categories.find(obj => obj.value == category.parent_id)\n\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        category: { ...this.state.category,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      var self = this; // Promise.all([getIndirectCategories()]).then(([categories,]) => {\n\n      console.log(\"ID\", this.props.match.params.id); // console.log(\"VEHICLE TYPES\", categories)\n\n      if (self.state.existing_record == true) {\n        console.log(\"FECHING EXISTING RECORD\");\n        axiosInstance.get(`/admins/categories/${this.state.category_uuid}`).then(response => {\n          var new_state = { ...this.state,\n            existing_record: true,\n            readOnly: true // categories: categories\n\n          };\n          new_state = self.setProducts(new_state, response.data.category);\n          self.setState({ ...new_state\n          });\n        });\n      } else {\n        self.setState({ ...this.state // categories: categories,\n\n        });\n      } // })\n\n    };\n\n    this.toggleStatus = e => {\n      e.preventDefault();\n      var self = this;\n      axiosInstance.get(`/admins/categories/${this.state.category.uuid}/toggle_status`).then(response => {\n        if (response.status == 200) {\n          var new_state = { ...this.state,\n            existing_record: true,\n            readOnly: true // categories: categories\n\n          };\n          new_state = self.setProducts(new_state, response.data.category);\n          self.setState({ ...new_state\n          });\n        }\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post(\"/admins/categories\", { ...this.state\n          });\n        } else {\n          console.log(\"UPDATING CATEGORY...\");\n          instance = axiosInstance.put(`/admins/categories/${this.state.category_id || this.state.category.uuid}`, {\n            category: this.state.category\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setProducts(this.state, response.data.category);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`/admins/categories/${response.data.category.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n\n    this.toggleCategoriesModal = () => {\n      this.setState({ ...this.state,\n        showCategoriesModal: !this.state.showCategoriesModal\n      });\n    };\n\n    this.handleChangeToggle = component => {\n      this.setState({ ...this.state,\n        category: { ...this.state.category,\n          [component.target.id]: component.target.checked\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CategoriesModal, {\n      isOpen: this.state.showCategoriesModal,\n      category_id: this.state.category.parent_id,\n      selectCategory: this.selectCategory.bind(this),\n      toggle: this.toggleCategoriesModal,\n      parentForm: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, \"Category\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/admins/categories/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, \"New Product\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 23\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.category.name,\n      placeholder: \"Category Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"sale-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 23\n      }\n    }, \"Featured\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      id: \"featured\",\n      defaultChecked: this.state.category.featured,\n      checked: this.state.category.featured,\n      disabled: this.state.readOnly,\n      onChange: this.handleChangeToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"sale-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 23\n      }\n    }, \"Disabled\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      id: \"disabled\",\n      defaultChecked: this.state.category.disabled,\n      checked: this.state.category.disabled,\n      disabled: this.state.readOnly,\n      onChange: this.handleChangeToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 23\n      }\n    }, \"Parent Category\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.category.parent ? this.state.category.parent.name : \"\",\n      placeholder: \"Category Name\",\n      onChange: this.onChange,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 23\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"form-control\",\n      onClick: this.toggleCategoriesModal,\n      disabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 23\n      }\n    }, \"Select Category\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 23\n      }\n    }, \"Full Path\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"full_path\",\n      value: this.state.category.full_path,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 23\n      }\n    }, \"Commission Rate\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      name: \"commission_rate\",\n      value: this.state.category.commission_rate,\n      placeholder: \"0.0\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 23\n      }\n    }, \"Featured Rank\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"number\",\n      name: \"rank\",\n      value: this.state.category.rank,\n      placeholder: \"Rank\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, \"\\xA0\")))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Categories/Category.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","moment","axiosInstance","SubmitButton","Link","getIndirectCategories","getProductsTypes","getGenders","getMaritalStatuses","history","NumberField","CategoriesModal","Toggle","Category","state","category","base_price","insurance","maintenance","price_per_km","price_per_min","editing","readOnly","props","match","params","id","category_uuid","existing_record","showCategoriesModal","onChange","e","console","log","target","name","setState","value","handleChangeSelect","selectedOption","val","selectCategory","parent_id","parent","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setProducts","onValueChange","floatValue","componentDidMount","self","get","then","response","data","toggleStatus","preventDefault","uuid","status","onSubmit","instance","post","put","category_id","push","toggleCategoriesModal","handleChangeToggle","component","checked","render","bind","featured","disabled","full_path","commission_rate","rank"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  FormText,\n  Button,\n} from \"reactstrap\";\nimport Select from \"../Controls/Select\";\n\nimport moment from \"moment\";\nimport axiosInstance from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getIndirectCategories,\n  getProductsTypes,\n  getGenders,\n  getMaritalStatuses,\n} from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport CategoriesModal from \"../Modals/CategoriesModal\";\nimport \"react-toggle/style.css\";\nimport Toggle from \"react-toggle\";\nexport default class Category extends Component {\n  state = {\n    category: {\n      base_price: 0,\n      insurance: 0,\n      maintenance: 0,\n      price_per_km: 0,\n      price_per_min: 0,\n    },\n    editing: false,\n    readOnly:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    category_uuid: this.props.match.params.id,\n    existing_record:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    showCategoriesModal: false,\n  };\n  onChange = (e) => {\n    console.log(e.target.name);\n    this.setState({\n      ...this.state,\n      category: {\n        ...this.state.category,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      category: {\n        ...this.state.category,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n  selectCategory = (category) => {\n    this.setState({\n      ...this.state,\n      category: {\n        ...this.state.category,\n        parent_id: category.id,\n        parent: category,\n      },\n    });\n  };\n  onDateChanged = (momentdate, attr_name) => {\n    // console.log(\"ClassName is\", momentdate.constructor.name)\n    var new_date = new moment();\n    if (momentdate.constructor.name == new_date.constructor.name) {\n      var new_state = {\n        ...this.state,\n        category: {\n          ...this.state.category,\n          [attr_name]: momentdate,\n        },\n      };\n      this.setState({ ...new_state });\n    } else {\n      console.log(this.state.category[attr_name]);\n      var date = new moment(this.state.category[attr_name]);\n      var new_state = {\n        ...this.state,\n        category: {\n          ...this.state.category,\n          [attr_name]: date,\n        },\n      };\n      this.setState({ ...new_state });\n    }\n  };\n\n  setProducts = (state, category) => {\n    console.log(\"THIS IS STATE\", state);\n    var new_state = {\n      ...state,\n      category: category,\n      // type_id: state.category_types.\n      // parent_id: state.categories.find(obj => obj.value == category.parent_id)\n    };\n    return new_state;\n  };\n  onValueChange = (e, val) => {\n    console.log(val);\n\n    this.setState({\n      ...this.state,\n      category: {\n        ...this.state.category,\n        [e]: val.floatValue,\n      },\n    });\n  };\n  componentDidMount = () => {\n    var self = this;\n\n    // Promise.all([getIndirectCategories()]).then(([categories,]) => {\n    console.log(\"ID\", this.props.match.params.id);\n    // console.log(\"VEHICLE TYPES\", categories)\n    if (self.state.existing_record == true) {\n      console.log(\"FECHING EXISTING RECORD\");\n      axiosInstance\n        .get(`/admins/categories/${this.state.category_uuid}`)\n        .then((response) => {\n          var new_state = {\n            ...this.state,\n            existing_record: true,\n            readOnly: true,\n            // categories: categories\n          };\n          new_state = self.setProducts(new_state, response.data.category);\n          self.setState({ ...new_state });\n        });\n    } else {\n      self.setState({\n        ...this.state,\n        // categories: categories,\n      });\n    }\n\n    // })\n  };\n  toggleStatus = (e) => {\n    e.preventDefault();\n    var self = this;\n    axiosInstance\n      .get(`/admins/categories/${this.state.category.uuid}/toggle_status`)\n      .then((response) => {\n        if (response.status == 200) {\n          var new_state = {\n            ...this.state,\n            existing_record: true,\n            readOnly: true,\n            // categories: categories\n          };\n          new_state = self.setProducts(new_state, response.data.category);\n          self.setState({ ...new_state });\n        }\n      });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    var self = this;\n    if (self.state.readOnly == true && self.state.existing_record == true) {\n      self.setState({\n        ...self.state,\n        readOnly: false,\n      });\n    } else {\n      var instance;\n      if (self.state.existing_record != true) {\n        instance = axiosInstance.post(\"/admins/categories\", { ...this.state });\n      } else {\n        console.log(\"UPDATING CATEGORY...\");\n        instance = axiosInstance.put(\n          `/admins/categories/${\n            this.state.category_id || this.state.category.uuid\n          }`,\n          { category: this.state.category }\n        );\n      }\n\n      instance.then((response) => {\n        console.log(\"RESPONSE\", response);\n\n        // console.log(\"Setting state\")\n        if (this.state.existing_record == true) {\n          var new_state = this.setProducts(this.state, response.data.category);\n          console.log(\"THIS IS NEW STATE\", new_state);\n          this.setState({ ...new_state, readOnly: true });\n        } else {\n          this.props.history.push(\n            `/admins/categories/${response.data.category.uuid}`\n          );\n          // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n        }\n      });\n    }\n  };\n\n  toggleCategoriesModal = () => {\n    this.setState({\n      ...this.state,\n      showCategoriesModal: !this.state.showCategoriesModal,\n    });\n  };\n  handleChangeToggle = (component) => {\n    this.setState({\n      ...this.state,\n      category: {\n        ...this.state.category,\n        [component.target.id]: component.target.checked,\n      },\n    });\n  };\n  render() {\n    return (\n      <Col md={12}>\n        <CategoriesModal\n          isOpen={this.state.showCategoriesModal}\n          category_id={this.state.category.parent_id}\n          selectCategory={this.selectCategory.bind(this)}\n          toggle={this.toggleCategoriesModal}\n          parentForm={this}\n        />\n        <Card>\n          <CardBody>\n            <CardTitle className=\"col-md-12\">\n              Category\n              <ul>\n                <li>\n                  <Link\n                    className=\"btn btn-success btn-sm\"\n                    to=\"/admins/categories/new\"\n                  >\n                    New Product\n                  </Link>\n                </li>\n              </ul>\n            </CardTitle>\n            <CardText className=\"col-md-12\">\n              <Form className=\"row\">\n                <Col md={12}>\n                  <Row>\n                    <FormGroup className=\"col-md-8\">\n                      <Label for=\"name\">Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.category.name}\n                        placeholder=\"Category Name\"\n                        onChange={this.onChange}\n                        readOnly={this.state.readOnly}\n                      />\n                    </FormGroup>\n\n                    <FormGroup className=\"col-md-2\">\n                      <Label for=\"sale-price\">Featured</Label>\n                      <Col md={12} className=\"block\">\n                        <Row>\n                          <Toggle\n                            id=\"featured\"\n                            defaultChecked={this.state.category.featured}\n                            checked={this.state.category.featured}\n                            disabled={this.state.readOnly}\n                            onChange={this.handleChangeToggle}\n                          />\n                        </Row>\n                      </Col>\n                    </FormGroup>\n                    <FormGroup className=\"col-md-2\">\n                      <Label for=\"sale-price\">Disabled</Label>\n                      <Col md={12} className=\"block\">\n                        <Row>\n                          <Toggle\n                            id=\"disabled\"\n                            defaultChecked={this.state.category.disabled}\n                            checked={this.state.category.disabled}\n                            disabled={this.state.readOnly}\n                            onChange={this.handleChangeToggle}\n                          />\n                        </Row>\n                      </Col>\n                    </FormGroup>\n\n                    <FormGroup className=\"col-md-8\">\n                      <Label for=\"exampleEmail\">Parent Category</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={\n                          this.state.category.parent\n                            ? this.state.category.parent.name\n                            : \"\"\n                        }\n                        placeholder=\"Category Name\"\n                        onChange={this.onChange}\n                        readOnly={true}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-2\">\n                      <Label for=\"exampleEmail\">&nbsp;</Label>\n                      <Button\n                        className=\"form-control\"\n                        onClick={this.toggleCategoriesModal}\n                        disabled={this.state.readOnly}\n                      >\n                        Select Category\n                      </Button>\n                    </FormGroup>\n                  </Row>\n                  <Row>\n                    <FormGroup className=\"col-md-6\">\n                      <Label for=\"name\">Full Path</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"full_path\"\n                        value={this.state.category.full_path}\n                        readOnly={true}\n                      />\n                    </FormGroup>\n                  </Row>\n                  <Row>\n                    <FormGroup className=\"col-md-2\">\n                      <Label for=\"name\">Commission Rate</Label>\n                      <Input\n                        type=\"number\"\n                        name=\"commission_rate\"\n                        value={this.state.category.commission_rate}\n                        placeholder=\"0.0\"\n                        onChange={this.onChange}\n                        readOnly={this.state.readOnly}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-2\">\n                      <Label for=\"name\">Featured Rank</Label>\n                      <Input\n                        type=\"number\"\n                        name=\"rank\"\n                        value={this.state.category.rank}\n                        placeholder=\"Rank\"\n                        onChange={this.onChange}\n                        readOnly={this.state.readOnly}\n                      />\n                    </FormGroup>\n                  </Row>\n                  <Row></Row>\n                </Col>\n\n                <Col md={12}>\n                  {/* <Row> */}\n                  <SubmitButton\n                    onClick={this.onSubmit}\n                    readOnly={this.state.readOnly}\n                    editing={this.state.editing}\n                    existing_record={this.state.existing_record}\n                  />\n                  <span>&nbsp;</span>\n                  {/* <Button\n                    onClick={this.toggleStatus}\n                    color={this.state.category.disabled ? \"success\" : \"warning\"}\n                  >\n                    {this.state.category.disabled ? \"Enable\" : \"Disabled\"}\n                  </Button> */}\n\n                  {/* </Row> */}\n                </Col>\n              </Form>\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}