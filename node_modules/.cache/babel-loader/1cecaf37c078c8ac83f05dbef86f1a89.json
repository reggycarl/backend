{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Users/User.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from \"reactstrap\";\nimport Select from \"../Controls/Select\";\nimport moment from \"moment\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { getCompanies } from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport \"./users.scss\";\nimport Dropzone from \"react-dropzone\";\nimport PhoneInput from \"react-phone-input-2\";\nimport * as actions from '../../actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass User extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {\n        photo_id: null,\n        description: \"\",\n        link: \"\"\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      user_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        user: { ...this.state.user,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        user: { ...this.state.user,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          user: { ...this.state.user,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.user[attr_name]);\n        var date = new moment(this.state.user[attr_name]);\n        var new_state = { ...this.state,\n          user: { ...this.state.user,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setUser = (state, user) => {\n      var new_state = { ...state,\n        user: user,\n        company_id: state.companies.find(obj => obj.value == user.company_id)\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        user: { ...this.state.user,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.onPhoneChange = phone => {\n      this.setState({ ...this.state,\n        user: { ...this.state.user,\n          phone: phone\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        user: { ...this.state.user,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDrop = (name, acceptedFiles) => {\n      console.log(name);\n      console.log(acceptedFiles);\n\n      if (this.state.readOnly != true) {\n        acceptedFiles.map((file, i) => {\n          var formData = new FormData();\n          formData.append(\"file\", file);\n          axiosInstance.post(\"/photos\", formData).then(response => {\n            this.setState({ ...this.state,\n              user: { ...this.state.user,\n                photo_id: response.data.photo.id,\n                photo: response.data.photo\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      var self = this;\n      var link = this.props.authentication.default_path == \"/partners/\" ? \"/partners/users/\" : \"/admins/partners/users/\";\n      Promise.all([getCompanies(this.props.authentication.default_path == \"/partners/\")]).then(([companies]) => {\n        console.log(\"ID\", this.props.match.params.id);\n\n        if (self.state.existing_record == true) {\n          console.log(\"FECHING EXISTING RECORD\");\n          axiosInstance.get(`${link}${this.state.user_uuid}`).then(response => {\n            var new_state = { ...this.state,\n              existing_record: true,\n              readOnly: true,\n              companies: companies\n            };\n            new_state = self.setUser(new_state, response.data.user);\n            self.setState({ ...new_state\n            });\n          });\n        } else {\n          self.setState({ ...this.state,\n            companies: companies\n          });\n        }\n      });\n    };\n\n    this.onSubmit = e => {\n      var link = this.props.authentication.default_path == \"/partners/\" ? \"/partners/users/\" : \"/admins/partners/users/\";\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post(`${link}`, {\n            user: this.state.user\n          });\n        } else {\n          instance = axiosInstance.put(`${link}${this.state.user_id || this.state.user.uuid}`, {\n            user: this.state.user\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setUser(this.state, response.data.user);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`${this.props.authentication == '/partners/' ? \"/partners/settings/users/\" : \"/admins/partners/users/\"}${response.data.user.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, \"User\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/partners/settings/users/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 19\n      }\n    }, \"New User\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, this.props.authentication.default_path == \"/admins/\" ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"company_id\",\n      value: this.state.company_id,\n      onChange: this.handleChangeSelect.bind(this, \"company_id\"),\n      options: this.state.companies,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }))) : \"\", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 27\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"first_name\",\n      value: this.state.user.first_name,\n      placeholder: \"First Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 27\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"last_name\",\n      value: this.state.user.last_name,\n      placeholder: \"Last Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 27\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.user.email,\n      placeholder: \"user@email.com\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 27\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(PhoneInput, {\n      country: 'gh',\n      value: this.state.user.phone,\n      disabled: this.state.readOnly,\n      readOnly: this.state.readOnly,\n      countryCodeEditable: false,\n      disableDropdown: true,\n      className: \"test-class\",\n      onChange: phone => this.onPhoneChange(phone),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(User));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Users/User.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","moment","axiosInstance","baseurl","SubmitButton","Link","withRouter","getCompanies","history","NumberField","Dropzone","PhoneInput","actions","connect","bindActionCreators","User","state","user","photo_id","description","link","editing","readOnly","props","match","params","id","user_uuid","existing_record","onChange","e","console","log","target","name","setState","value","handleChangeSelect","selectedOption","val","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setUser","company_id","companies","find","obj","onValueChange","floatValue","onPhoneChange","phone","onDrop","acceptedFiles","map","file","i","formData","FormData","append","post","then","response","data","photo","componentDidMount","self","authentication","default_path","Promise","all","get","onSubmit","preventDefault","instance","put","user_id","uuid","push","render","bind","first_name","last_name","email","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  FormText,\n  Button,\n} from \"reactstrap\";\nimport Select from \"../Controls/Select\";\n\nimport moment from \"moment\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link , withRouter} from \"react-router-dom\";\nimport {\n  getCompanies,\n  \n} from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport \"./users.scss\";\nimport Dropzone from \"react-dropzone\";\nimport PhoneInput from \"react-phone-input-2\";\nimport * as actions from '../../actions'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nclass User extends Component {\n  state = {\n    user: {\n      photo_id: null,\n      description: \"\",\n      link: \"\",\n    },\n    editing: false,\n    readOnly:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    user_uuid: this.props.match.params.id,\n    existing_record:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n  };\n  onChange = (e) => {\n    console.log(e.target.name);\n    this.setState({\n      ...this.state,\n      user: {\n        ...this.state.user,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      user: {\n        ...this.state.user,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n  onDateChanged = (momentdate, attr_name) => {\n    // console.log(\"ClassName is\", momentdate.constructor.name)\n    var new_date = new moment();\n    if (momentdate.constructor.name == new_date.constructor.name) {\n      var new_state = {\n        ...this.state,\n        user: {\n          ...this.state.user,\n          [attr_name]: momentdate,\n        },\n      };\n      this.setState({ ...new_state });\n    } else {\n      console.log(this.state.user[attr_name]);\n      var date = new moment(this.state.user[attr_name]);\n      var new_state = {\n        ...this.state,\n        user: {\n          ...this.state.user,\n          [attr_name]: date,\n        },\n      };\n      this.setState({ ...new_state });\n    }\n  };\n\n  setUser = (state, user) => {\n    var new_state = {\n      ...state,\n      user: user,\n      company_id: state.companies.find(\n        (obj) => obj.value == user.company_id\n      ),\n    };\n    return new_state;\n  };\n  onValueChange = (e, val) => {\n    console.log(val);\n\n    this.setState({\n      ...this.state,\n      user: {\n        ...this.state.user,\n        [e]: val.floatValue,\n      },\n    });\n  };\n  onPhoneChange = phone => {\n    this.setState({\n        ...this.state,\n        user: {\n            ...this.state.user,\n            phone: phone\n        }\n        \n    })\n}\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      user: {\n        ...this.state.user,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n  onDrop = (name, acceptedFiles) => {\n    console.log(name);\n    console.log(acceptedFiles);\n    if (this.state.readOnly != true) {\n      acceptedFiles.map((file, i) => {\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        axiosInstance.post(\"/photos\", formData).then((response) => {\n          this.setState({\n            ...this.state,\n            user: {\n              ...this.state.user,\n              photo_id: response.data.photo.id,\n              photo: response.data.photo,\n            },\n          });\n        });\n      });\n    }\n  };\n  componentDidMount = () => {\n    var self = this;\n    var link = this.props.authentication.default_path == \"/partners/\" ? \"/partners/users/\" : \"/admins/partners/users/\"\n    Promise.all([getCompanies(this.props.authentication.default_path == \"/partners/\")]).then(([companies]) => {\n    console.log(\"ID\", this.props.match.params.id);\n    if (self.state.existing_record == true) {\n      console.log(\"FECHING EXISTING RECORD\");\n      axiosInstance\n        .get(`${link}${this.state.user_uuid}`)\n        .then((response) => {\n          var new_state = {\n            ...this.state,\n            existing_record: true,\n            readOnly: true,\n            companies: companies\n          };\n          new_state = self.setUser(new_state, response.data.user);\n          self.setState({ ...new_state });\n        });\n    } else {\n      self.setState({\n        ...this.state,\n        companies: companies\n      });\n    }\n\n    })\n  };\n\n  onSubmit = (e) => {\n    var link = this.props.authentication.default_path == \"/partners/\" ? \"/partners/users/\" : \"/admins/partners/users/\"\n    e.preventDefault();\n    var self = this;\n    if (self.state.readOnly == true && self.state.existing_record == true) {\n      self.setState({\n        ...self.state,\n        readOnly: false,\n      });\n    } else {\n      var instance;\n      if (self.state.existing_record != true) {\n        instance = axiosInstance.post(`${link}`, {\n          user: this.state.user,\n        });\n      } else {\n        instance = axiosInstance.put(\n          `${link}${this.state.user_id || this.state.user.uuid}`,\n          { user: this.state.user }\n        );\n      }\n\n      instance.then((response) => {\n        console.log(\"RESPONSE\", response);\n\n        // console.log(\"Setting state\")\n        if (this.state.existing_record == true) {\n          var new_state = this.setUser(this.state, response.data.user);\n          console.log(\"THIS IS NEW STATE\", new_state);\n          this.setState({ ...new_state, readOnly: true });\n        } else {\n          this.props.history.push(\n            `${this.props.authentication == '/partners/' ? \"/partners/settings/users/\" : \"/admins/partners/users/\"}${response.data.user.uuid}`\n          );\n          // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Col md={12}>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"col-md-12\">\n              User\n              <ul>\n                <li>\n                  <Link\n                    className=\"btn btn-success btn-sm\"\n                    to=\"/partners/settings/users/new\"\n                  >\n                    New User\n                  </Link>\n                </li>\n              </ul>\n            </CardTitle>\n            <CardText className=\"col-md-12\">\n              <Form className=\"row\">\n                <Col md={12}>\n                {this.props.authentication.default_path == \"/admins/\" ?<Row>\n                       <FormGroup className=\"col-md-6\">\n                        <Label for=\"exampleEmail\">Company</Label>\n                                            <Select\n                                                name=\"company_id\"\n                                                value={this.state.company_id}\n                                                onChange={this.handleChangeSelect.bind(this, \"company_id\")}\n                                                options={this.state.companies}\n                                                isDisabled={this.state.readOnly}\n                                            />\n                        </FormGroup> \n                      </Row>: \"\" }\n                  <Row>\n                    <Col md={12}>\n                      <Row>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">First Name</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"first_name\"\n                            value={this.state.user.first_name}\n                            placeholder=\"First Name\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">Last Name</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"last_name\"\n                            value={this.state.user.last_name}\n                            placeholder=\"Last Name\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                      </Row>\n                      <Row>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">Email</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"email\"\n                            value={this.state.user.email}\n                            placeholder=\"user@email.com\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">Phone</Label>\n                          <PhoneInput\n                                    country={'gh'}\n                                    value={this.state.user.phone}\n                                    disabled={this.state.readOnly}\n                                    readOnly={this.state.readOnly}\n                                    countryCodeEditable={false}\n                                    disableDropdown={true}\n                                    className='test-class'\n                                    onChange={(phone) => this.onPhoneChange(phone)}\n                                    />\n                        </FormGroup>\n                      </Row>\n                      \n                    </Col>\n                  </Row>\n\n                  <Row></Row>\n                </Col>\n\n                <Col md={12}>\n                  {/* <Row> */}\n                  <SubmitButton\n                    onClick={this.onSubmit}\n                    readOnly={this.state.readOnly}\n                    editing={this.state.editing}\n                    existing_record={this.state.existing_record}\n                  />\n                  {/* </Row> */}\n                </Col>\n              </Form>\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = state => ({ authentication: state.authentication })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) })\n\nexport default withRouter( connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(User));\n"]},"metadata":{},"sourceType":"module"}