{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/DeliveryConfigurations/PickupLocation.jsx\";\nimport React, { Component } from 'react';\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap';\nimport Select from '../Controls/Select';\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios';\nimport SubmitButton from '../Controls/SubmitButton';\nimport { Link } from 'react-router-dom';\nimport { getIndirectPickupLocations, getPickupLocationsTypes, getGenders, getMaritalStatuses, getCities, getCountries, getRegions } from '../misc/functions';\nimport { history } from '../../index';\nimport NumberField from '../Controls/NumberField'; // import './sizegroups.scss'\n\nimport Dropzone from 'react-dropzone';\nexport default class PickupLocation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pickup_location: {\n        photo_id: null,\n        description: '',\n        link: ''\n      },\n      regions: [],\n      cities: [],\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      pickup_location_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        pickup_location: { ...this.state.pickup_location,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          pickup_location: { ...this.state.pickup_location,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.pickup_location[attr_name]);\n        var date = new moment(this.state.pickup_location[attr_name]);\n        var new_state = { ...this.state,\n          pickup_location: { ...this.state.pickup_location,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setPickupLocations = (state, pickup_location) => {\n      console.log(\"THIS IS STATE\", state);\n      var new_state = { ...state,\n        pickup_location: pickup_location,\n        country_id: state.countries.find(obj => obj.value == pickup_location.country_id),\n        region_id: state.regions.find(obj => obj.value == pickup_location.region_id),\n        city_id: state.cities.find(obj => obj.value == pickup_location.city_id)\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        pickup_location: { ...this.state.pickup_location,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      var self = this;\n      Promise.all([getCountries()]).then(([countries]) => {\n        console.log(\"ID\", this.props.match.params.id);\n\n        if (self.state.existing_record == true) {\n          console.log(\"FECHING EXISTING RECORD\");\n          axiosInstance.get(`/admins/pickup_locations/${this.state.pickup_location_uuid}?&with_country_and_region=true`).then(response => {\n            var new_state = { ...this.state,\n              existing_record: true,\n              readOnly: true,\n              countries: countries,\n              pickup_location: response.data.pickup_location\n            };\n            getRegions(new_state.pickup_location.country_uuid).then(regionsData => {\n              console.log(\"THIS IS NEW STATE BEFORE\", new_state);\n              new_state = { ...new_state,\n                regions: regionsData\n              };\n              getCities(new_state.pickup_location.region_uuid).then(citiesData => {\n                new_state = { ...new_state,\n                  cities: citiesData\n                };\n                new_state = self.setPickupLocations(new_state, response.data.pickup_location);\n                self.setState({ ...new_state\n                });\n              });\n            });\n          });\n        } else {\n          self.setState({ ...this.state,\n            countries: countries\n          });\n        }\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post('/admins/pickup_locations', {\n            pickup_location: this.state.pickup_location\n          });\n        } else {\n          instance = axiosInstance.put(`/admins/pickup_locations/${this.state.pickup_location_id || this.state.pickup_location.uuid}`, {\n            pickup_location: this.state.pickup_location\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setPickupLocations(this.state, response.data.pickup_location);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`/delivery_configurations/pickup_locations/${response.data.pickup_location.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      if (selectedOption == 'country_id') {\n        getRegions(val.uuid).then(response => {\n          this.setState({ ...this.state,\n            region_id: null,\n            regions: response\n          });\n        });\n      }\n\n      if (selectedOption == 'region_id') {\n        getCities(val.uuid).then(response => {\n          this.setState({ ...this.state,\n            city_id: null,\n            cities: response\n          });\n        });\n      }\n\n      var state = { ...this.state,\n        pickup_location: { ...this.state.pickup_location,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \"PickupLocation\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/delivery_configurations/pickup_locations/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, \"New PickupLocation\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 45\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.pickup_location.name,\n      placeholder: \"Pickup Location Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 45\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      rows: 5,\n      name: \"address\",\n      value: this.state.pickup_location.address,\n      placeholder: \"Pickup Location Address\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 45\n      }\n    }, \"GPS Code\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"gps_code\",\n      value: this.state.pickup_location.gps_code,\n      placeholder: \"PickupLocation GPS Code\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 45\n      }\n    }, \"Contact Information\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"contact_information\",\n      value: this.state.pickup_location.contact_information,\n      placeholder: \"Contact Name - Contact Phone Number\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 45\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"country_id\",\n      value: this.state.country_id,\n      onChange: this.handleChangeSelect.bind(this, \"country_id\"),\n      options: this.state.countries,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 45\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"region_id\",\n      value: this.state.region_id,\n      onChange: this.handleChangeSelect.bind(this, \"region_id\"),\n      options: this.state.regions,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 45\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"city_id\",\n      value: this.state.city_id,\n      onChange: this.handleChangeSelect.bind(this, \"city_id\"),\n      options: this.state.cities,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 41\n      }\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/DeliveryConfigurations/PickupLocation.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","moment","axiosInstance","baseurl","SubmitButton","Link","getIndirectPickupLocations","getPickupLocationsTypes","getGenders","getMaritalStatuses","getCities","getCountries","getRegions","history","NumberField","Dropzone","PickupLocation","state","pickup_location","photo_id","description","link","regions","cities","editing","readOnly","props","match","params","id","pickup_location_uuid","existing_record","onChange","e","console","log","target","name","setState","value","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setPickupLocations","country_id","countries","find","obj","region_id","city_id","onValueChange","val","floatValue","componentDidMount","self","Promise","all","then","get","response","data","country_uuid","regionsData","region_uuid","citiesData","onSubmit","preventDefault","instance","post","put","pickup_location_id","uuid","push","handleChangeSelect","selectedOption","render","address","gps_code","contact_information","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from 'reactstrap'\nimport Select from '../Controls/Select'\n\n\nimport moment from 'moment';\nimport axiosInstance, { baseurl } from '../misc/Axios'\nimport SubmitButton from '../Controls/SubmitButton'\nimport {Link} from 'react-router-dom'\nimport { getIndirectPickupLocations, getPickupLocationsTypes, getGenders, getMaritalStatuses, getCities, getCountries, getRegions } from '../misc/functions'\nimport { history } from '../../index'\nimport NumberField from '../Controls/NumberField';\n// import './sizegroups.scss'\nimport Dropzone from 'react-dropzone';\nexport default class PickupLocation extends Component {\n    state = {\n        pickup_location: {\n            photo_id: null,\n            description: '',\n            link: ''\n        },\n        regions: [],\n        cities: [],\n        editing: false,\n        readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n        pickup_location_uuid: this.props.match.params.id,\n        existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    }\n    onChange = e => {\n        console.log(e.target.name)\n        this.setState({\n            ...this.state,\n            pickup_location: {\n                ...this.state.pickup_location,\n                [e.target.name]: e.target.value\n            }\n        }\n        )\n    }\n    // handleChangeSelect = (selectedOption, val) => {\n    //     var state = {\n    //         ...this.state,\n    //         pickup_location: {\n    //             ...this.state.pickup_location,\n    //             [selectedOption]: val.value\n    //         },\n    //         [selectedOption]: val\n    //     }\n    //     this.setState({ ...state })\n    // }\n    onDateChanged = (momentdate, attr_name) => {\n        // console.log(\"ClassName is\", momentdate.constructor.name)\n        var new_date = new moment();\n        if (momentdate.constructor.name == new_date.constructor.name) {\n            var new_state = {\n                ...this.state,\n                pickup_location: {\n                    ...this.state.pickup_location,\n                    [attr_name]: momentdate,\n                }\n            };\n            this.setState({ ...new_state });\n        }\n        else {\n            console.log(this.state.pickup_location[attr_name])\n            var date = new moment(this.state.pickup_location[attr_name])\n            var new_state = {\n                ...this.state,\n                pickup_location: {\n                    ...this.state.pickup_location,\n                    [attr_name]: date,\n\n                }\n            };\n            this.setState({ ...new_state });\n        }\n    }\n\n    setPickupLocations = (state, pickup_location) => {\n        console.log(\"THIS IS STATE\", state);\n        var new_state = {\n            ...state,\n            pickup_location: pickup_location,\n            country_id: state.countries.find(\n                (obj) => obj.value == pickup_location.country_id\n              ),\n              region_id: state.regions.find(\n                (obj) => obj.value == pickup_location.region_id\n              ),   \n              city_id: state.cities.find(\n                (obj) => obj.value == pickup_location.city_id\n              ),   \n        }\n        return new_state;\n    }\n    onValueChange = (e, val)=>{\n        console.log(val);\n        \n        this.setState({\n            ...this.state,\n            pickup_location: {\n                ...this.state.pickup_location,\n                [e]: val.floatValue\n            }\n        })\n    }\n   \n   \n    componentDidMount = () => {\n        var self = this\n        \n        Promise.all([getCountries()]).then(([countries]) => {\n            console.log(\"ID\", this.props.match.params.id)\n            if (self.state.existing_record == true) {\n                console.log(\"FECHING EXISTING RECORD\")\n                axiosInstance.get(`/admins/pickup_locations/${this.state.pickup_location_uuid}?&with_country_and_region=true`).then((response) => {\n                    var new_state = {\n                        ...this.state,\n                        existing_record: true,\n                        readOnly: true,\n                        countries: countries,\n                        pickup_location: response.data.pickup_location\n                        \n                    }\n                    getRegions(new_state.pickup_location.country_uuid).then((regionsData)=> {\n                        console.log(\"THIS IS NEW STATE BEFORE\", new_state)\n                        new_state = {\n                            ...new_state,\n                            regions: regionsData\n                        }\n                        getCities(new_state.pickup_location.region_uuid).then( citiesData => {\n                            new_state = {\n                                ...new_state,\n                                cities: citiesData\n                            }\n                        new_state = self.setPickupLocations(new_state, response.data.pickup_location)\n                        self.setState({ ...new_state });\n                        })\n                    });\n                    \n                    \n                })\n            }\n            else {\n                self.setState({\n                    ...this.state,\n                    countries: countries\n                })\n            }\n\n        })\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        var self = this;\n        if (self.state.readOnly == true && self.state.existing_record == true) {\n            self.setState({\n                ...self.state,\n                readOnly: false\n            })\n        }\n\n        else {\n            var instance;\n            if (self.state.existing_record != true) {\n                instance = axiosInstance.post('/admins/pickup_locations', { pickup_location: this.state.pickup_location })\n            }\n            else {\n                \n                instance = axiosInstance.put(`/admins/pickup_locations/${this.state.pickup_location_id || this.state.pickup_location.uuid}`, { pickup_location: this.state.pickup_location })\n            }\n\n            instance.then((response) => {\n                console.log(\"RESPONSE\", response)\n\n                // console.log(\"Setting state\")\n                if (this.state.existing_record == true) {\n                    var new_state = this.setPickupLocations(this.state, response.data.pickup_location)\n                    console.log(\"THIS IS NEW STATE\", new_state)\n                    this.setState({ ...new_state, readOnly: true })\n                }\n                else {\n                    this.props.history.push(`/delivery_configurations/pickup_locations/${response.data.pickup_location.uuid}`)\n                    // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n                }\n\n\n            })\n        }\n    }\n\n    handleChangeSelect = (selectedOption, val) => {\n        if (selectedOption ==  'country_id'){\n            getRegions(val.uuid).then(response=> {\n                this.setState({\n                    ...this.state,\n                    region_id: null,\n                    regions: response\n                })\n            })\n        }\n        if (selectedOption ==  'region_id'){\n            getCities(val.uuid).then(response=> {\n                this.setState({\n                    ...this.state,\n                    city_id: null,\n                    cities: response\n                })\n            })\n        }\n        var state = {\n          ...this.state,\n          pickup_location: {\n            ...this.state.pickup_location,\n            [selectedOption]: val.value,\n          },\n          [selectedOption]: val,\n        };\n        this.setState({ ...state });\n      };\n\n\n    render() {\n        return (\n            <Col md={12}>\n                <Card>\n\n                    <CardBody>\n                        <CardTitle className='col-md-12'>PickupLocation\n                        <ul>\n                            <li><Link className='btn btn-success btn-sm' to='/delivery_configurations/pickup_locations/new'>New PickupLocation</Link></li>\n                        </ul></CardTitle>\n                        <CardText className='col-md-12'>\n                            <Form className='row'>\n                                <Col md={12}>\n                                    \n                                <Row>\n                                                    <Col md={12}>\n                                                    <Row>\n                                        <FormGroup className='col-md-9'>\n                                            <Label for=\"name\">Name</Label>\n                                            <Input type=\"text\" name=\"name\" value={this.state.pickup_location.name} placeholder=\"Pickup Location Name\" onChange={this.onChange} readOnly={this.state.readOnly} /> \n                                        </FormGroup>\n\n                                        </Row>\n                                        <Row>\n                                        <FormGroup className='col-md-9'>\n                                            <Label for=\"name\">Address</Label>\n                                            <Input type=\"textarea\" rows={5} name=\"address\" value={this.state.pickup_location.address} placeholder=\"Pickup Location Address\" onChange={this.onChange} readOnly={this.state.readOnly} /> \n                                        </FormGroup>\n\n                                        </Row>\n\n                                        <Row>\n                                        <FormGroup className='col-md-4'>\n                                            <Label for=\"name\">GPS Code</Label>\n                                            <Input type=\"text\" name=\"gps_code\" value={this.state.pickup_location.gps_code} placeholder=\"PickupLocation GPS Code\" onChange={this.onChange} readOnly={this.state.readOnly} /> \n                                        </FormGroup>\n                                        <FormGroup className='col-md-8'>\n                                            <Label for=\"name\">Contact Information</Label>\n                                            <Input type=\"text\" name=\"contact_information\" value={this.state.pickup_location.contact_information} placeholder=\"Contact Name - Contact Phone Number\" onChange={this.onChange} readOnly={this.state.readOnly} /> \n                                        </FormGroup>\n\n                                        </Row>\n                                        <Row>\n                                        <FormGroup className='col-md-4'>\n                                            <Label for=\"exampleEmail\">Country</Label>\n                                            <Select\n                                                name=\"country_id\"\n                                                value={this.state.country_id}\n                                                onChange={this.handleChangeSelect.bind(this, \"country_id\")}\n                                                options={this.state.countries}\n                                                isDisabled={this.state.readOnly}\n                                            /> \n                                        </FormGroup>\n                                        <FormGroup className='col-md-4'>\n                                            <Label for=\"exampleEmail\">Region</Label>\n                                            <Select\n                                                name=\"region_id\"\n                                                value={this.state.region_id}\n                                                onChange={this.handleChangeSelect.bind(this, \"region_id\")}\n                                                options={this.state.regions}\n                                                isDisabled={this.state.readOnly}\n                                            /> \n                                        </FormGroup>\n                                        <FormGroup className='col-md-4'>\n                                            <Label for=\"exampleEmail\">City</Label>\n                                            <Select\n                                                name=\"city_id\"\n                                                value={this.state.city_id}\n                                                onChange={this.handleChangeSelect.bind(this, \"city_id\")}\n                                                options={this.state.cities}\n                                                isDisabled={this.state.readOnly}\n                                            /> \n                                        </FormGroup>\n                                        </Row>\n                                                    </Col>\n                \n                  </Row>\n                                \n                                    <Row>\n                                        \n                                        \n                                    </Row>\n                                </Col>\n\n                                <Col md={12}>\n                                    {/* <Row> */}\n                                        <SubmitButton onClick={this.onSubmit} readOnly={this.state.readOnly} editing={this.state.editing} existing_record={this.state.existing_record} />\n                                    {/* </Row> */}\n                                </Col>\n                            </Form>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}