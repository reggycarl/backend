{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/App.js\";\nimport React, { Component } from 'react'; // import logo from './logo.svg';\n\nimport './App.scss';\nimport { toast, ToastContainer } from 'react-toastify';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AdminLogin from './Login/AdminLogin';\nimport PartnerLogin from './Login/PartnerLogin';\nimport UserLogin from './Login/UserLogin';\nimport MainLogin from './MainLogin/MainLogin';\nimport ConfirmingSpinner from '../components/ConfirmingSpinner/ConfirmingSpinner';\nimport axios from '../components/misc/Axios';\nimport confidentSfx from '../sfx/confident.mp3'; // import Signup from '../components/Signup'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport * as actions from '.././actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Layout from '../components/Layout/Layout';\nimport UserSignup from './Signup/UserSignup';\nimport ForgotPassword from './ForgotPassword/ForgotPassword';\nimport ConfirmEmail from './ConfirmEmail/ConfirmEmail';\nimport PasswordEdit from './PasswordEdit/PasswordEdit';\nimport PartnerSignup from './Signup/PartnerSignup';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmingLoggedIn: false\n    };\n\n    this.componentDidMount = () => {\n      if (this.isLoggedIn == false) {\n        axios.get(\"/\").then(response => {\n          console.log(response);\n        }).catch(errors => {\n          console.log(errors);\n        });\n      } else {\n        this.setState({ ...this.state,\n          confirmingLoggedIn: false\n        });\n      }\n    };\n\n    this.notification_received = msg => {\n      var audio = new Audio(confidentSfx);\n      audio.play();\n      console.log(\"SOMETHING RECEIVED\", msg);\n      toast.success( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }\n      }, msg.msg, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 32\n        }\n      }), /*#__PURE__*/React.createElement(\"a\", {\n        href: msg.link,\n        className: \"btn btn-xs btn-primary form-control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      }, \"View\")), {\n        autoClose: false\n      });\n    };\n\n    this.getLayoutOrRedirect = () => {\n      console.log(this.props.authentication);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.authentication.default_path == \"/admins/\" ? /*#__PURE__*/React.createElement(ActionCableConsumer, {\n        channel: {\n          channel: 'AdminNotificationsChannel',\n          id: this.props.authentication.user.uuid\n        },\n        onReceived: this.notification_received,\n        onConnected: () => {\n          console.log(\"WEBCONNECTED TO WEBSOCKET\");\n        },\n        onRejected: () => {\n          console.log(\"WEBCONNECTION DISCONNECTED\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 61\n        }\n      }) : \"\", \" \", /*#__PURE__*/React.createElement(Layout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }), \" \");\n    };\n\n    this.isLoggedIn = () => {\n      console.log(\"IS LOGGED IN\", this.props.authentication.loggedIn);\n\n      if (this.props.authentication.loggedIn == \"true\" || this.props.authentication.loggedIn == true) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.isAdmin = () => {\n      if (window.location.pathname == \"/admins\") {\n        return true;\n      } else {\n        return false;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App container-fluid h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ToastContainer, {\n      autoClose: 2000,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/partners/sign_up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PartnerSignup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/partners/forgot_password\",\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ForgotPassword, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/partners/confirm_email\",\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ConfirmEmail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/partners/password_edit\",\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PasswordEdit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    })), this.isLoggedIn() == false ? this.isAdmin() == true ? /*#__PURE__*/React.createElement(AdminLogin, {\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 72\n      }\n    }) : /*#__PURE__*/React.createElement(PartnerLogin, {\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 120\n      }\n    }) : this.state.confirmingLoggedIn == true ? /*#__PURE__*/React.createElement(ConfirmingSpinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 211\n      }\n    }) : this.getLayoutOrRedirect(), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/admins/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AdminLogin, {\n      location: this.props.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/App.js"],"names":["React","Component","toast","ToastContainer","AdminLogin","PartnerLogin","UserLogin","MainLogin","ConfirmingSpinner","axios","confidentSfx","BrowserRouter","Router","Switch","Route","actions","connect","bindActionCreators","Layout","UserSignup","ForgotPassword","ConfirmEmail","PasswordEdit","PartnerSignup","ActionCableConsumer","App","state","confirmingLoggedIn","componentDidMount","isLoggedIn","get","then","response","console","log","catch","errors","setState","notification_received","msg","audio","Audio","play","success","link","autoClose","getLayoutOrRedirect","props","authentication","default_path","channel","id","user","uuid","loggedIn","isAdmin","window","location","pathname","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.scss';\nimport { toast, ToastContainer } from 'react-toastify'\nimport \"react-toastify/dist/ReactToastify.css\";\nimport AdminLogin from './Login/AdminLogin'\nimport PartnerLogin from './Login/PartnerLogin'\nimport UserLogin from './Login/UserLogin'\nimport MainLogin from'./MainLogin/MainLogin'\n\nimport ConfirmingSpinner from '../components/ConfirmingSpinner/ConfirmingSpinner'\nimport axios from '../components/misc/Axios'\nimport confidentSfx from '../sfx/confident.mp3'\n// import Signup from '../components/Signup'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport * as actions from '.././actions'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Layout from '../components/Layout/Layout'\nimport UserSignup from './Signup/UserSignup';\nimport ForgotPassword from './ForgotPassword/ForgotPassword'\nimport ConfirmEmail from './ConfirmEmail/ConfirmEmail';\nimport PasswordEdit from './PasswordEdit/PasswordEdit'\nimport PartnerSignup from './Signup/PartnerSignup';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\nclass App extends Component {\n  \n  state = {\n    confirmingLoggedIn: false\n  }\n  componentDidMount = () => {\n\n    if (this.isLoggedIn == false) {\n      axios.get(\"/\").then(response => {\n        console.log(response)\n      }).catch(errors => {\n        console.log(errors)\n      })\n    }\n    else {\n      this.setState({\n        ...this.state,\n        confirmingLoggedIn: false,\n      })\n    }\n  }\n  notification_received = (msg) => {\n    var audio = new Audio(confidentSfx);\n    audio.play();\n    console.log(\"SOMETHING RECEIVED\", msg)\n    toast.success(<p>{msg.msg} <br />\n    <a href={msg.link} className='btn btn-xs btn-primary form-control'>View</a></p>, {autoClose: false})\n  }\n  getLayoutOrRedirect = () => {\n    console.log(this.props.authentication)\n    return <>\n    {this.props.authentication.default_path == \"/admins/\" ? <ActionCableConsumer\n            channel={{ channel: 'AdminNotificationsChannel', id: this.props.authentication.user.uuid }}\n            onReceived={this.notification_received}\n            onConnected={()=>{\n                console.log(\"WEBCONNECTED TO WEBSOCKET\")\n            }}\n            onRejected = {()=> {\n                console.log(\"WEBCONNECTION DISCONNECTED\");\n            }}\n        />: \"\"} <Layout /> </>\n  }\n  isLoggedIn = () => {\n    console.log(\"IS LOGGED IN\", this.props.authentication.loggedIn)\n    if (this.props.authentication.loggedIn == \"true\" || this.props.authentication.loggedIn == true) {\n      return true\n    }\n    return false\n  }\n  isAdmin = () => {\n    if (window.location.pathname == \"/admins\"){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  render() {\n    \n    return (\n      <Router>\n        <div className=\"App container-fluid h-100\">\n          <div className='row h-100'>\n            <div className='col-md-12'>\n              <ToastContainer autoClose={2000}/>\n              <Switch>\n                \n                <Route exact path=\"/partners/sign_up\">\n                  <PartnerSignup />\n                </Route>\n                \n                <Route exact path=\"/partners/forgot_password\" location={this.props.location}>\n                  <ForgotPassword />\n                </Route>\n                <Route exact path=\"/partners/confirm_email\" location={this.props.location}>\n                  <ConfirmEmail />\n                </Route>\n                <Route exact path=\"/partners/password_edit\" location={this.props.location}>\n                  <PasswordEdit />\n                </Route>\n                \n               \n                \n                \n                {this.isLoggedIn() == false ? this.isAdmin() == true ? <AdminLogin location={this.props.location} /> : <PartnerLogin location={this.props.location} /> : (this.state.confirmingLoggedIn == true ? <ConfirmingSpinner /> :\n                  this.getLayoutOrRedirect())\n                }\n                <Route exact path=\"/admins/\">\n                  <AdminLogin location={this.props.location} />\n                </Route>\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = state => ({ authentication: state.authentication })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) })\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}