{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Categories/CategoryGroup.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from \"reactstrap\";\nimport Select from \"../Controls/Select\";\nimport moment from \"moment\";\nimport axiosInstance from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link } from \"react-router-dom\";\nimport { getIndirectCategoryGroups, getProductsTypes, getGenders, getMaritalStatuses } from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport CategoryModal from \"../Modals/CategoriesModal\";\nimport \"react-toggle/style.css\";\nimport Toggle from \"react-toggle\";\nimport Table from \"reactstrap/lib/Table\";\nimport Dropzone from \"react-dropzone\";\nimport \"./category_group.scss\";\nexport default class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      category_group: {\n        name: \"\",\n        categories: [],\n        category_ids: []\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      category_group_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      showCategoryModal: false\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        category_group: { ...this.state.category_group,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        category_group: { ...this.state.category_group,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.selectCategory = category => {\n      console.log(\"SELECTING CATEGORY\", category);\n      var category_ids = this.state.category_group.category_ids;\n      var categories = [...this.state.category_group.categories];\n      var current_category = categories[this.state.current_index];\n      console.log(\"THIS IS CURRENT CATEGORY\", current_category);\n      current_category = category; // current_category.category_id = category.id;\n\n      categories[this.state.current_index] = category;\n      var arr_index = category_ids.indexOf(category.id);\n\n      if (arr_index < 0) {\n        category_ids.push(category.id);\n      } else {\n        category_ids[this.state.current_index] = category.id;\n      }\n\n      this.setState({ ...this.state,\n        category_group: { ...this.state.category_group,\n          categories: [...categories],\n          category_ids: category_ids\n        }\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          category_group: { ...this.state.category_group,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.category_group[attr_name]);\n        var date = new moment(this.state.category_group[attr_name]);\n        var new_state = { ...this.state,\n          category_group: { ...this.state.category_group,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setProducts = (state, category_group) => {\n      console.log(\"THIS IS STATE\", state);\n      var new_state = { ...state,\n        category_group: category_group // type_id: state.category_group_types.\n        // parent_id: state.category_group_groups.find(obj => obj.value == category_group.parent_id)\n\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        category_group: { ...this.state.category_group,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      var self = this; // Promise.all([getIndirectCategoryGroups()]).then(([category_group_groups,]) => {\n\n      console.log(\"ID\", this.props.match.params.id); // console.log(\"VEHICLE TYPES\", category_group_groups)\n\n      if (self.state.existing_record == true) {\n        console.log(\"FECHING EXISTING RECORD\");\n        axiosInstance.get(`/admins/category_groups/${this.state.category_group_uuid}`).then(response => {\n          var new_state = { ...this.state,\n            existing_record: true,\n            readOnly: true // category_group_groups: category_group_groups\n\n          };\n          new_state = self.setProducts(new_state, response.data.category_group);\n          self.setState({ ...new_state\n          });\n        });\n      } else {\n        self.setState({ ...this.state // category_group_groups: category_group_groups,\n\n        });\n      } // })\n\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post(\"/admins/category_groups\", { ...this.state\n          });\n        } else {\n          console.log(\"UPDATING CATEGORY...\");\n          instance = axiosInstance.put(`/admins/category_groups/${this.state.category_group_id || this.state.category_group.uuid}`, {\n            category_group: this.state.category_group\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setProducts(this.state, response.data.category_group);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`/admins/category_groups/${response.data.category_group.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n\n    this.addCategory = () => {\n      this.setState({ ...this.state,\n        category_group: { ...this.state.category_group,\n          categories: [...this.state.category_group.categories, {\n            category_id: null\n          }]\n        }\n      });\n    };\n\n    this.removeCategory = (index, e) => {\n      console.log(\"THIS IS INDEX\", index);\n      console.log(\"THIS IS element\", e);\n      var categories_list = this.state.category_group.categories;\n      categories_list.splice(index, 1);\n      var category_ids = categories_list.map(cat => {\n        return cat.id;\n      });\n      this.setState({ ...this.state,\n        category_group: { ...this.state.category_group,\n          categories: [...categories_list],\n          category_ids: category_ids\n        }\n      });\n    };\n\n    this.toggleCategoryModal = () => {\n      this.setState({ ...this.state,\n        showCategoryModal: !this.state.showCategoryModal\n      });\n    };\n\n    this.setAndShowCategoryModal = e => {\n      // this.toggleCategoryModal();\n      this.setState({ ...this.state,\n        current_index: parseInt(e.target.name),\n        showCategoryModal: true\n      });\n    };\n\n    this.onDrop = (name, acceptedFiles) => {\n      console.log(name);\n      console.log(acceptedFiles);\n\n      if (this.state.readOnly != true) {\n        acceptedFiles.map((file, i) => {\n          var formData = new FormData();\n          formData.append(\"file\", file);\n          axiosInstance.post(\"/photos\", formData).then(response => {\n            this.setState({ ...this.state,\n              category_group: { ...this.state.category_group,\n                [`${name}_id`]: response.data.photo.id,\n                [`${name}`]: response.data.photo\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.handleChangeToggle = component => {\n      this.setState({ ...this.state,\n        category_group: { ...this.state.category_group,\n          [component.target.id]: component.target.checked\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CategoryModal, {\n      isOpen: this.state.showCategoryModal,\n      category_group_id: this.state.category_group.parent_id,\n      selectCategory: this.selectCategory.bind(this),\n      toggle: this.toggleCategoryModal,\n      parentForm: this,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }\n    }, \"Category Group\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/admins/category_groups/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, \"New Product\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      readOnly: this.state.readOnly,\n      onDrop: this.readOnly ? null : this.onDrop.bind(null, \"photo\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(Col, Object.assign({\n      id: \"photoBox\"\n    }, getRootProps(), {\n      className: `${this.state.readOnly ? \"\" : \"dropZone\"}  col-md-12`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    })), this.state.category_group.photo ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.category_group.photo.image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 27\n      }\n    }) : null)), /*#__PURE__*/React.createElement(Dropzone, {\n      readOnly: this.state.readOnly,\n      onDrop: this.readOnly ? null : this.onDrop.bind(null, \"icon\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 19\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(Col, Object.assign({\n      id: \"photoBox\"\n    }, getRootProps(), {\n      className: `${this.state.readOnly ? \"\" : \"dropZone\"}  col-md-12`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    })), this.state.category_group.icon ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.category_group.icon.image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 27\n      }\n    }) : null))), /*#__PURE__*/React.createElement(Col, {\n      md: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 23\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.category_group.name,\n      placeholder: \"Category Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Table, {\n      bordered: true,\n      striped: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      width: \"90%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 25\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }\n    }, this.state.category_group.categories.map((cat, index) => {\n      console.log(\"THIS IS CURRENT CAT\", this.state.category_group);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"col-md-10\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.category_group.categories[index] ? this.state.category_group.categories[index].name : \"\",\n        placeholder: \"Category Name\",\n        onChange: this.onChange,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        className: \"col-md-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"form-control\",\n        name: index,\n        onClick: this.setAndShowCategoryModal,\n        disabled: this.state.readOnly,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 37\n        }\n      }, \"Select Category\")))), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        className: \"form-control\",\n        color: \"danger\",\n        onClick: this.removeCategory.bind(this, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 33\n        }\n      }, \"Remove\")));\n    })), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 25\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      className: \"form-control\",\n      color: \"success\",\n      onClick: this.addCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 27\n      }\n    }, \"Add\", \" \")))))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 19\n      }\n    })))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Categories/CategoryGroup.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","moment","axiosInstance","SubmitButton","Link","getIndirectCategoryGroups","getProductsTypes","getGenders","getMaritalStatuses","history","NumberField","CategoryModal","Toggle","Table","Dropzone","Category","state","category_group","name","categories","category_ids","editing","readOnly","props","match","params","id","category_group_uuid","existing_record","showCategoryModal","onChange","e","console","log","target","setState","value","handleChangeSelect","selectedOption","val","selectCategory","category","current_category","current_index","arr_index","indexOf","push","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setProducts","onValueChange","floatValue","componentDidMount","self","get","then","response","data","onSubmit","preventDefault","instance","post","put","category_group_id","uuid","addCategory","category_id","removeCategory","index","categories_list","splice","map","cat","toggleCategoryModal","setAndShowCategoryModal","parseInt","onDrop","acceptedFiles","file","i","formData","FormData","append","photo","handleChangeToggle","component","checked","render","parent_id","bind","getRootProps","getInputProps","image_url","icon"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  FormText,\n  Button,\n} from \"reactstrap\";\nimport Select from \"../Controls/Select\";\n\nimport moment from \"moment\";\nimport axiosInstance from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getIndirectCategoryGroups,\n  getProductsTypes,\n  getGenders,\n  getMaritalStatuses,\n} from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport CategoryModal from \"../Modals/CategoriesModal\";\nimport \"react-toggle/style.css\";\nimport Toggle from \"react-toggle\";\nimport Table from \"reactstrap/lib/Table\";\nimport Dropzone from \"react-dropzone\";\nimport \"./category_group.scss\";\nexport default class Category extends Component {\n  state = {\n    category_group: {\n      name: \"\",\n      categories: [],\n      category_ids: [],\n    },\n    editing: false,\n    readOnly:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    category_group_uuid: this.props.match.params.id,\n    existing_record:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    showCategoryModal: false,\n  };\n  onChange = (e) => {\n    console.log(e.target.name);\n    this.setState({\n      ...this.state,\n      category_group: {\n        ...this.state.category_group,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      category_group: {\n        ...this.state.category_group,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n  selectCategory = (category) => {\n    console.log(\"SELECTING CATEGORY\", category);\n    var category_ids = this.state.category_group.category_ids;\n    var categories = [...this.state.category_group.categories];\n    var current_category = categories[this.state.current_index];\n    console.log(\"THIS IS CURRENT CATEGORY\", current_category);\n    current_category = category;\n    // current_category.category_id = category.id;\n    categories[this.state.current_index] = category;\n    var arr_index = category_ids.indexOf(category.id);\n    if (arr_index < 0) {\n      category_ids.push(category.id);\n    } else {\n      category_ids[this.state.current_index] = category.id;\n    }\n    this.setState({\n      ...this.state,\n      category_group: {\n        ...this.state.category_group,\n        categories: [...categories],\n        category_ids: category_ids,\n      },\n    });\n  };\n  onDateChanged = (momentdate, attr_name) => {\n    // console.log(\"ClassName is\", momentdate.constructor.name)\n    var new_date = new moment();\n    if (momentdate.constructor.name == new_date.constructor.name) {\n      var new_state = {\n        ...this.state,\n        category_group: {\n          ...this.state.category_group,\n          [attr_name]: momentdate,\n        },\n      };\n      this.setState({ ...new_state });\n    } else {\n      console.log(this.state.category_group[attr_name]);\n      var date = new moment(this.state.category_group[attr_name]);\n      var new_state = {\n        ...this.state,\n        category_group: {\n          ...this.state.category_group,\n          [attr_name]: date,\n        },\n      };\n      this.setState({ ...new_state });\n    }\n  };\n\n  setProducts = (state, category_group) => {\n    console.log(\"THIS IS STATE\", state);\n    var new_state = {\n      ...state,\n      category_group: category_group,\n      // type_id: state.category_group_types.\n      // parent_id: state.category_group_groups.find(obj => obj.value == category_group.parent_id)\n    };\n    return new_state;\n  };\n  onValueChange = (e, val) => {\n    console.log(val);\n\n    this.setState({\n      ...this.state,\n      category_group: {\n        ...this.state.category_group,\n        [e]: val.floatValue,\n      },\n    });\n  };\n  componentDidMount = () => {\n    var self = this;\n\n    // Promise.all([getIndirectCategoryGroups()]).then(([category_group_groups,]) => {\n    console.log(\"ID\", this.props.match.params.id);\n    // console.log(\"VEHICLE TYPES\", category_group_groups)\n    if (self.state.existing_record == true) {\n      console.log(\"FECHING EXISTING RECORD\");\n      axiosInstance\n        .get(`/admins/category_groups/${this.state.category_group_uuid}`)\n        .then((response) => {\n          var new_state = {\n            ...this.state,\n            existing_record: true,\n            readOnly: true,\n            // category_group_groups: category_group_groups\n          };\n          new_state = self.setProducts(new_state, response.data.category_group);\n          self.setState({ ...new_state });\n        });\n    } else {\n      self.setState({\n        ...this.state,\n        // category_group_groups: category_group_groups,\n      });\n    }\n\n    // })\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    var self = this;\n    if (self.state.readOnly == true && self.state.existing_record == true) {\n      self.setState({\n        ...self.state,\n        readOnly: false,\n      });\n    } else {\n      var instance;\n      if (self.state.existing_record != true) {\n        instance = axiosInstance.post(\"/admins/category_groups\", {\n          ...this.state,\n        });\n      } else {\n        console.log(\"UPDATING CATEGORY...\");\n        instance = axiosInstance.put(\n          `/admins/category_groups/${\n            this.state.category_group_id || this.state.category_group.uuid\n          }`,\n          { category_group: this.state.category_group }\n        );\n      }\n      instance.then((response) => {\n        console.log(\"RESPONSE\", response);\n\n        // console.log(\"Setting state\")\n        if (this.state.existing_record == true) {\n          var new_state = this.setProducts(\n            this.state,\n            response.data.category_group\n          );\n          console.log(\"THIS IS NEW STATE\", new_state);\n          this.setState({ ...new_state, readOnly: true });\n        } else {\n          this.props.history.push(\n            `/admins/category_groups/${response.data.category_group.uuid}`\n          );\n          // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n        }\n      });\n    }\n  };\n  addCategory = () => {\n    this.setState({\n      ...this.state,\n      category_group: {\n        ...this.state.category_group,\n        categories: [\n          ...this.state.category_group.categories,\n          { category_id: null },\n        ],\n      },\n    });\n  };\n  removeCategory = (index, e) => {\n    console.log(\"THIS IS INDEX\", index);\n    console.log(\"THIS IS element\", e);\n    var categories_list = this.state.category_group.categories;\n    categories_list.splice(index, 1);\n    var category_ids = categories_list.map((cat) => {\n      return cat.id;\n    });\n    this.setState({\n      ...this.state,\n      category_group: {\n        ...this.state.category_group,\n        categories: [...categories_list],\n        category_ids: category_ids,\n      },\n    });\n  };\n\n  toggleCategoryModal = () => {\n    this.setState({\n      ...this.state,\n      showCategoryModal: !this.state.showCategoryModal,\n    });\n  };\n  setAndShowCategoryModal = (e) => {\n    // this.toggleCategoryModal();\n    this.setState({\n      ...this.state,\n      current_index: parseInt(e.target.name),\n      showCategoryModal: true,\n    });\n  };\n  onDrop = (name, acceptedFiles) => {\n    console.log(name);\n    console.log(acceptedFiles);\n    if (this.state.readOnly != true) {\n      acceptedFiles.map((file, i) => {\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        axiosInstance.post(\"/photos\", formData).then((response) => {\n          this.setState({\n            ...this.state,\n            category_group: {\n              ...this.state.category_group,\n              [`${name}_id`]: response.data.photo.id,\n              [`${name}`]: response.data.photo,\n            },\n          });\n        });\n      });\n    }\n  };\n  handleChangeToggle = (component) => {\n    this.setState({\n      ...this.state,\n      category_group: {\n        ...this.state.category_group,\n        [component.target.id]: component.target.checked,\n      },\n    });\n  };\n  render() {\n    return (\n      <Col md={12}>\n        <CategoryModal\n          isOpen={this.state.showCategoryModal}\n          category_group_id={this.state.category_group.parent_id}\n          selectCategory={this.selectCategory.bind(this)}\n          toggle={this.toggleCategoryModal}\n          parentForm={this}\n        />\n        <Card>\n          <CardBody>\n            <CardTitle className=\"col-md-12\">\n              Category Group\n              <ul>\n                <li>\n                  <Link\n                    className=\"btn btn-success btn-sm\"\n                    to=\"/admins/category_groups/new\"\n                  >\n                    New Product\n                  </Link>\n                </li>\n              </ul>\n            </CardTitle>\n            <CardText className=\"col-md-12\">\n              <Form className=\"row\">\n                <Col md={3}>\n                  <Dropzone\n                    readOnly={this.state.readOnly}\n                    onDrop={\n                      this.readOnly ? null : this.onDrop.bind(null, \"photo\")\n                    }\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <Col\n                        id=\"photoBox\"\n                        {...getRootProps()}\n                        className={`${\n                          this.state.readOnly ? \"\" : \"dropZone\"\n                        }  col-md-12`}\n                      >\n                        <input {...getInputProps()} />\n\n                        {this.state.category_group.photo ? (\n                          <img\n                            src={this.state.category_group.photo.image_url}\n                          />\n                        ) : null}\n                      </Col>\n                    )}\n                  </Dropzone>\n\n                  <Dropzone\n                    readOnly={this.state.readOnly}\n                    onDrop={\n                      this.readOnly ? null : this.onDrop.bind(null, \"icon\")\n                    }\n                  >\n                    {({ getRootProps, getInputProps }) => (\n                      <Col\n                        id=\"photoBox\"\n                        {...getRootProps()}\n                        className={`${\n                          this.state.readOnly ? \"\" : \"dropZone\"\n                        }  col-md-12`}\n                      >\n                        <input {...getInputProps()} />\n\n                        {this.state.category_group.icon ? (\n                          <img src={this.state.category_group.icon.image_url} />\n                        ) : null}\n                      </Col>\n                    )}\n                  </Dropzone>\n                </Col>\n                <Col md={9}>\n                  <Row>\n                    <FormGroup className=\"col-md-8\">\n                      <Label for=\"name\">Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.category_group.name}\n                        placeholder=\"Category Name\"\n                        onChange={this.onChange}\n                        readOnly={this.state.readOnly}\n                      />\n                    </FormGroup>\n                  </Row>\n\n                  <Table bordered={true} striped={true}>\n                    <thead>\n                      <tr>\n                        <th width={\"90%\"}>Category</th>\n                        <th width={\"10%\"}>Actions</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.category_group.categories.map(\n                        (cat, index) => {\n                          console.log(\n                            \"THIS IS CURRENT CAT\",\n                            this.state.category_group\n                          );\n                          return (\n                            <tr>\n                              <td>\n                                <Row>\n                                  <FormGroup className=\"col-md-10\">\n                                    <Input\n                                      type=\"text\"\n                                      name=\"name\"\n                                      value={\n                                        this.state.category_group.categories[\n                                          index\n                                        ]\n                                          ? this.state.category_group\n                                              .categories[index].name\n                                          : \"\"\n                                      }\n                                      placeholder=\"Category Name\"\n                                      onChange={this.onChange}\n                                      readOnly={true}\n                                    />\n                                  </FormGroup>\n                                  <FormGroup className=\"col-md-2\">\n                                    <Button\n                                      className=\"form-control\"\n                                      name={index}\n                                      onClick={this.setAndShowCategoryModal}\n                                      disabled={this.state.readOnly}\n                                    >\n                                      Select Category\n                                    </Button>\n                                  </FormGroup>\n                                </Row>\n                              </td>\n                              <td>\n                                <Button\n                                  size={\"sm\"}\n                                  className=\"form-control\"\n                                  color={\"danger\"}\n                                  onClick={this.removeCategory.bind(\n                                    this,\n                                    index\n                                  )}\n                                >\n                                  Remove\n                                </Button>\n                              </td>\n                            </tr>\n                          );\n                        }\n                      )}\n                    </tbody>\n                    <tfoot>\n                      <tr>\n                        <td>&nbsp;</td>\n                        <td>\n                          <Button\n                            size={\"sm\"}\n                            className=\"form-control\"\n                            color={\"success\"}\n                            onClick={this.addCategory}\n                          >\n                            Add{\" \"}\n                          </Button>\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </Table>\n                </Col>\n\n                <Col md={12}>\n                  {/* <Row> */}\n                  <SubmitButton\n                    onClick={this.onSubmit}\n                    readOnly={this.state.readOnly}\n                    editing={this.state.editing}\n                    existing_record={this.state.existing_record}\n                  />\n                  {/* </Row> */}\n                </Col>\n              </Form>\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}