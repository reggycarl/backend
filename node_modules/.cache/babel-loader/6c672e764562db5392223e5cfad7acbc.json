{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/misc/functions.js\";\nimport moment from 'moment';\nimport axiosInstance from './Axios';\nimport _ from 'lodash';\nimport React from 'react';\nvar partner_types = [];\nvar id_types = [];\nvar customer_types = [];\nvar marital_statuses = [];\nvar genders = [];\nvar branches = [];\nvar products = [];\nvar product_categories = [];\nvar invoices = [];\nvar bills = [];\nvar accounts = [];\nvar payment_modes = [];\nvar bank_cash_accounts = [];\nvar mobile_networks = [];\nvar countries = [];\nvar ledgers = [];\nvar vehicle_types = [];\nvar payment_methods = [];\nvar categories = [];\nvar brands = [];\nvar size_groups = [];\nvar delivery_types = [];\nvar product_taxes = [];\nvar company_types = [];\nvar banks = [];\nvar regions = [];\nvar cities = [];\nvar order_statuses = [];\nexport async function getPatnerTypes() {\n  await axiosInstance.get('/partner_types').then(response => {\n    console.log(response);\n\n    if (response.status == \"UNAUTHENTICATED\") {\n      partner_types = [];\n    } else {\n      partner_types = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return partner_types;\n}\nexport async function getOrderStatuses() {\n  await axiosInstance.get('/order_statuses').then(response => {\n    console.log(response);\n\n    if (response.status == \"UNAUTHENTICATED\") {\n      order_statuses = [];\n    } else {\n      order_statuses = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.code + \" - \" + row.name\n        };\n      });\n    }\n  }).catch(error => {});\n  return order_statuses;\n}\nexport async function getCompanies(partner) {\n  await axiosInstance.get(partner == true ? '/partners/companies' : '/admins/partners/companies?full=true').then(response => {\n    console.log(response);\n\n    if (response.status == \"UNAUTHENTICATED\") {\n      partner_types = [];\n    } else {\n      partner_types = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return partner_types;\n}\nexport async function getVehicleTypes() {\n  await axiosInstance.get('/vehicle_types').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      vehicle_types = [];\n    } else {\n      vehicle_types = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return vehicle_types;\n}\nexport async function getDeliveryTypes() {\n  await axiosInstance.get('/delivery_types').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      delivery_types = [];\n    } else {\n      delivery_types = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return delivery_types;\n}\nexport async function getBanks() {\n  await axiosInstance.get('/banks').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      banks = [];\n    } else {\n      banks = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return banks;\n}\nexport function flatten(arr) {\n  var arr_collection = []; //     const newArr = arr.reduce((acc, item) => {\n  //       if (Array.isArray(item.chilren)) {\n  //         acc = acc.concat(flatten(item.children));\n  //       } else {\n  //        acc.push(item.children);\n  //       }\n  //       return acc;\n  //     }, []);\n  //     return newArr;\n\n  for (var cat in arr) {\n    console.log(\"THIS IS CATEGORY\", arr[cat]);\n    arr_collection.push(arr[cat]);\n\n    if (!_.isEmpty(arr[cat].children)) {\n      arr_collection.concat(flatten(arr[cat].children));\n    }\n  }\n\n  return arr_collection;\n}\nexport async function getProductTaxes() {\n  await axiosInstance.get('/product_taxes').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      product_taxes = [];\n    } else {\n      product_taxes = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.name} - ${row.rate}%`\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return product_taxes;\n}\nexport async function getCategories() {\n  await axiosInstance.get(`/categories?with_parent=true`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      categories = [];\n    } else {\n      categories = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return categories;\n}\nexport async function getBrands() {\n  await axiosInstance.get(`/brands?with_parent=true`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      brands = [];\n    } else {\n      brands = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return brands;\n}\nexport async function getSizeGroups() {\n  await axiosInstance.get(`/size_groups?with_parent=true`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      size_groups = [];\n    } else {\n      size_groups = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return size_groups;\n}\nexport async function getIndirectCategories() {\n  await axiosInstance.get(`/categories?type=indirects&with_parent=false`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      categories = [];\n    } else {\n      categories = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {// partner_types = [];\n  });\n  return categories;\n}\nexport async function getGenders() {\n  await axiosInstance.get('/genders').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      genders = response.data.genders.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {});\n  console.log(\"THESE ARE GENDERS\", genders);\n  return genders;\n}\nexport async function getCustomerTypes() {\n  await axiosInstance.get('/customer_types').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      customer_types = response.data.customer_types.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {});\n  return customer_types;\n}\nexport async function getIDTypes() {\n  await axiosInstance.get('/id_types').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      id_types = response.data.id_types.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {});\n  return id_types;\n}\nexport async function getMaritalStatuses() {\n  await axiosInstance.get('/marital_statuses').then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      marital_statuses = response.data.marital_statuses.map((row, i) => {\n        return {\n          value: row.id,\n          label: row.name\n        };\n      });\n    }\n  }).catch(error => {});\n  return marital_statuses;\n}\nexport async function getAccounts() {\n  await axiosInstance.get(`/accounts`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      accounts = response.data.map((row, i) => {\n        return {\n          value: row.uuid,\n          label: `${row.code} - ${row.name} ${row.number ? \" - \" + row.number : \"\"}`,\n          id: row.id\n        };\n      });\n      console.log(\"THIS IS RESPONSE \", accounts);\n    }\n  }).catch(error => {});\n  return accounts;\n}\nexport async function getMobileNetworks() {\n  await axiosInstance.get(`/mobile_networks`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      mobile_networks = response.data.mobile_networks.map((row, i) => {\n        console.log(\"THIS IS NETWORK\", row);\n        return {\n          value: row.id,\n          label: `${row.name}`\n        };\n      });\n    }\n  }).catch(error => {});\n  return mobile_networks;\n}\nexport async function getPaymentModes() {\n  await axiosInstance.get(`/payment_modes?savable=true`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      console.log(\"LP\", response.data.data);\n      payment_modes = response.data.payment_modes.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.name}`,\n          code: row.code\n        };\n      });\n      console.log(\"THIS IS RESPONSE \", payment_modes);\n    }\n  }).catch(error => {});\n  return payment_modes;\n}\nexport async function getPaymentMethods() {\n  await axiosInstance.get(`/users/payment_methods`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      console.log(\"LP\", response.data.data);\n      payment_methods = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: ` ${row.mobile_network} - ${row.number}`\n        };\n      });\n      console.log(\"THIS IS RESPONSE \", payment_methods);\n    }\n  }).catch(error => {});\n  return payment_methods;\n}\nexport async function getBankCashAccounts() {\n  await axiosInstance.get(`/accounts/?type=bank_cash_accounts`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      console.log(\"LP\", response.data);\n      bank_cash_accounts = response.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.name}`,\n          code: row.code\n        };\n      });\n      console.log(\"THIS IS RESPONSE \", bank_cash_accounts);\n    }\n  }).catch(error => {});\n  return bank_cash_accounts;\n}\nexport async function getCountries() {\n  await axiosInstance.get(`/countries/`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      countries = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.name}`,\n          phone_code: row.phone_code,\n          uuid: row.uuid\n        };\n      });\n      console.log(\"THIS IS RESPONSE FOR COUNTRIES \", countries);\n    }\n  }).catch(error => {});\n  return countries;\n}\nexport async function getRegions(country_id) {\n  await axiosInstance.get(`/regions/?country_id=${country_id}`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      regions = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.name}`,\n          uuid: row.uuid\n        };\n      });\n      console.log(\"THIS IS RESPONSE FOR COUNTRIES \", countries);\n    }\n  }).catch(error => {});\n  return regions;\n}\nexport async function getCities(region_id) {\n  await axiosInstance.get(`/cities/?region_id=${region_id}`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {\n      cities = [];\n    } else {\n      cities = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.name}`,\n          phone_code: row.phone_code\n        };\n      });\n      console.log(\"THIS IS RESPONSE FOR COUNTRIES \", countries);\n    }\n  }).catch(error => {});\n  return cities;\n}\nexport async function getCompanyTypes() {\n  await axiosInstance.get(`/company_types/`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      company_types = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.name}`,\n          phone_code: row.phone_code\n        };\n      });\n    }\n  }).catch(error => {});\n  return company_types;\n}\nexport async function getLedgers() {\n  await axiosInstance.get(`/ledgers/`).then(response => {\n    if (response.status == \"UNAUTHENTICATED\") {} else {\n      ledgers = response.data.data.map((row, i) => {\n        return {\n          value: row.id,\n          label: `${row.code} - ${row.name}`\n        };\n      });\n      console.log(\"THIS IS RESPONSE FOR LEDGERS \", ledgers);\n    }\n  }).catch(error => {});\n  return ledgers;\n}\nexport function renderErrorsAsList(errors) {\n  var errors = errors;\n  var new_errors = errors.map((err, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 16\n      }\n    }, err);\n  });\n  return new_errors;\n}\nexport function formatDate(date) {\n  var date = new moment(date);\n  return date.format(\"dddd, MMMM Do YYYY\");\n}\nexport function formatDateTime(date) {\n  var date = new moment(date);\n  return date.format(\"dddd, MMMM Do YYYY @ h:mm:ss a\");\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/misc/functions.js"],"names":["moment","axiosInstance","_","React","partner_types","id_types","customer_types","marital_statuses","genders","branches","products","product_categories","invoices","bills","accounts","payment_modes","bank_cash_accounts","mobile_networks","countries","ledgers","vehicle_types","payment_methods","categories","brands","size_groups","delivery_types","product_taxes","company_types","banks","regions","cities","order_statuses","getPatnerTypes","get","then","response","console","log","status","data","map","row","i","value","id","label","name","catch","error","getOrderStatuses","code","getCompanies","partner","getVehicleTypes","getDeliveryTypes","getBanks","flatten","arr","arr_collection","cat","push","isEmpty","children","concat","getProductTaxes","rate","getCategories","getBrands","getSizeGroups","getIndirectCategories","getGenders","getCustomerTypes","getIDTypes","getMaritalStatuses","getAccounts","uuid","number","getMobileNetworks","getPaymentModes","getPaymentMethods","mobile_network","getBankCashAccounts","getCountries","phone_code","getRegions","country_id","getCities","region_id","getCompanyTypes","getLedgers","renderErrorsAsList","errors","new_errors","err","formatDate","date","format","formatDateTime"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport axiosInstance from './Axios'\nimport _ from 'lodash'\nimport React from 'react'\nvar partner_types = [];\nvar id_types = [];\nvar customer_types = [];\nvar marital_statuses = [];\nvar genders = [];\nvar branches = [];\nvar products = [];\nvar product_categories = [];\nvar invoices = [];\nvar bills = [];\nvar accounts = [];\nvar payment_modes = [];\nvar bank_cash_accounts = []\nvar mobile_networks = []\nvar countries = []\nvar ledgers = []\nvar vehicle_types = []\nvar payment_methods = []\nvar categories = []\nvar brands = [];\nvar size_groups = [];\nvar delivery_types = [];\nvar product_taxes = [];\nvar company_types = [];\nvar banks = [];\nvar regions = [];\nvar cities = [];\nvar order_statuses = [];\n\nexport async function getPatnerTypes() {\n    await axiosInstance.get('/partner_types').then((response) => {\n        console.log(response);\n        if (response.status == \"UNAUTHENTICATED\") {\n            partner_types = [];\n        }\n        else {\n\n            partner_types = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return partner_types\n}\nexport async function getOrderStatuses() {\n    await axiosInstance.get('/order_statuses').then((response) => {\n        console.log(response);\n        if (response.status == \"UNAUTHENTICATED\") {\n            order_statuses = [];\n        }\n        else {\n            order_statuses = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.code + \" - \" + row.name }\n            });\n        }\n\n    }).catch(error => {\n        \n    })\n    return order_statuses\n}\n\nexport async function getCompanies(partner) {\n    await axiosInstance.get( partner == true ? '/partners/companies' : '/admins/partners/companies?full=true').then((response) => {\n        console.log(response);\n        if (response.status == \"UNAUTHENTICATED\") {\n            partner_types = [];\n        }\n        else {\n            partner_types = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return partner_types\n}\nexport async function getVehicleTypes() {\n    await axiosInstance.get('/vehicle_types').then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            vehicle_types = [];\n        }\n        else {\n            vehicle_types = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return vehicle_types\n}\nexport async function getDeliveryTypes() {\n    await axiosInstance.get('/delivery_types').then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            delivery_types = [];\n        }\n        else {\n            delivery_types = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return delivery_types\n}\nexport async function getBanks() {\n    await axiosInstance.get('/banks').then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            banks = [];\n        }\n        else {\n            banks = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return banks\n}\nexport function flatten(arr) {\n    var arr_collection = []\n//     const newArr = arr.reduce((acc, item) => {\n//       if (Array.isArray(item.chilren)) {\n//         acc = acc.concat(flatten(item.children));\n//       } else {\n//        acc.push(item.children);\n//       }\n  \n//       return acc;\n//     }, []);\n  \n//     return newArr;\n    for (var cat in arr){\n        console.log(\"THIS IS CATEGORY\", arr[cat])\n        arr_collection.push(arr[cat])\n        if(!_.isEmpty(arr[cat].children)){\n            arr_collection.concat(flatten(arr[cat].children))\n        }\n        \n    }\n\n    return arr_collection\n    \n  }\nexport async function getProductTaxes() {\n    await axiosInstance.get('/product_taxes').then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            product_taxes = [];\n        }\n        else {\n            product_taxes = response.data.data.map((row, i) => {\n                return { value: row.id, label: `${row.name} - ${row.rate}%` }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return product_taxes\n}\n\nexport async function getCategories() {\n    await axiosInstance.get(`/categories?with_parent=true`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            categories = [];\n        }\n        else {\n            categories = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return categories\n}\nexport async function getBrands() {\n    await axiosInstance.get(`/brands?with_parent=true`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            brands = [];\n        }\n        else {\n            brands = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return brands\n}\nexport async function getSizeGroups() {\n    await axiosInstance.get(`/size_groups?with_parent=true`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            size_groups = [];\n        }\n        else {\n            size_groups = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return size_groups\n}\nexport async function getIndirectCategories() {\n    await axiosInstance.get(`/categories?type=indirects&with_parent=false`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            categories = [];\n        }\n        else {\n            categories = response.data.data.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n        // partner_types = [];\n    })\n    return categories\n}\n\n\nexport async function getGenders() {\n    await axiosInstance.get('/genders').then((response) => {\n\n        if (response.status == \"UNAUTHENTICATED\") {\n\n        }\n        else {\n\n            genders = response.data.genders.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n    }).catch(error => {\n\n\n    })\n    console.log(\"THESE ARE GENDERS\", genders)\n    return genders\n}\nexport async function getCustomerTypes() {\n    await axiosInstance.get('/customer_types').then((response) => {\n\n        if (response.status == \"UNAUTHENTICATED\") {\n\n        }\n        else {\n\n            customer_types = response.data.customer_types.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n\n\n    })\n\n    return customer_types\n}\n\nexport async function getIDTypes() {\n    await axiosInstance.get('/id_types').then((response) => {\n\n        if (response.status == \"UNAUTHENTICATED\") {\n\n        }\n        else {\n\n            id_types = response.data.id_types.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n\n\n    })\n\n    return id_types\n}\nexport async function getMaritalStatuses() {\n    await axiosInstance.get('/marital_statuses').then((response) => {\n\n        if (response.status == \"UNAUTHENTICATED\") {\n\n        }\n        else {\n\n            marital_statuses = response.data.marital_statuses.map((row, i) => {\n                return { value: row.id, label: row.name }\n            });\n        }\n\n    }).catch(error => {\n\n\n    })\n\n    return marital_statuses\n}\n\nexport async function getAccounts() {\n    \n    await axiosInstance.get(`/accounts`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            \n            accounts = response.data.map((row, i) => {\n                return { value: row.uuid, label: `${row.code} - ${row.name} ${row.number ? \" - \" + row.number :  \"\" }`, id: row.id }\n            });\n            console.log(\"THIS IS RESPONSE \", accounts)\n        }\n    }).catch(error => {\n\n    })\n    return accounts\n}\n\nexport async function getMobileNetworks() {\n    await axiosInstance.get(`/mobile_networks`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            mobile_networks = response.data.mobile_networks.map((row, i) => {\n                console.log(\"THIS IS NETWORK\", row);\n                return { value: row.id, label: `${row.name}`}\n            });\n        }\n    }).catch(error => {\n    })\n    return mobile_networks\n}\nexport async function getPaymentModes() {\n    await axiosInstance.get(`/payment_modes?savable=true`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            console.log(\"LP\", response.data.data)\n            payment_modes = response.data.payment_modes.map((row, i) => {\n                return { value: row.id, label: `${row.name}`, code: row.code }\n            });\n            console.log(\"THIS IS RESPONSE \", payment_modes)\n        }\n    }).catch(error => {\n\n    })\n    return payment_modes\n}\nexport async function getPaymentMethods() {\n    await axiosInstance.get(`/users/payment_methods`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            console.log(\"LP\", response.data.data)\n            payment_methods = response.data.data.map((row, i) => {\n                return { value: row.id, label: ` ${row.mobile_network} - ${row.number}` }\n            });\n            console.log(\"THIS IS RESPONSE \", payment_methods)\n        }\n    }).catch(error => {\n    })\n    return payment_methods\n}\n\nexport async function getBankCashAccounts() {\n    await axiosInstance.get(`/accounts/?type=bank_cash_accounts`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            console.log(\"LP\", response.data)\n            bank_cash_accounts = response.data.map((row, i) => {\n                return { value: row.id, label: `${row.name}`, code: row.code }\n            });\n            console.log(\"THIS IS RESPONSE \", bank_cash_accounts)\n        }\n    }).catch(error => {\n\n    })\n    return bank_cash_accounts;\n}\n\nexport async function getCountries() {\n    await axiosInstance.get(`/countries/`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            \n            countries = response.data.data.map((row, i) => {\n                return { value: row.id, label: `${row.name}`, phone_code: row.phone_code, uuid: row.uuid}\n            });\n            console.log(\"THIS IS RESPONSE FOR COUNTRIES \", countries)\n        }\n    }).catch(error => {\n\n    })\n    return countries;\n}\nexport async function getRegions(country_id) {\n    await axiosInstance.get(`/regions/?country_id=${country_id}`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            \n            regions = response.data.data.map((row, i) => {\n                return { value: row.id, label: `${row.name}`, uuid: row.uuid}\n            });\n            console.log(\"THIS IS RESPONSE FOR COUNTRIES \", countries)\n        }\n    }).catch(error => {\n\n    })\n    return regions;\n}\n\n\nexport async function getCities(region_id) {\n    await axiosInstance.get(`/cities/?region_id=${region_id}`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n            cities = [];\n        }\n        else {\n            \n            cities = response.data.data.map((row, i) => {\n                return { value: row.id, label: `${row.name}`, phone_code: row.phone_code}\n            });\n            console.log(\"THIS IS RESPONSE FOR COUNTRIES \", countries)\n        }\n    }).catch(error => {\n\n    })\n    return cities;\n}\nexport async function getCompanyTypes() {\n    await axiosInstance.get(`/company_types/`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            \n            company_types = response.data.data.map((row, i) => {\n                return { value: row.id, label: `${row.name}`, phone_code: row.phone_code}\n            });\n            \n        }\n    }).catch(error => {\n\n    })\n    return company_types;\n}\nexport async function getLedgers() {\n    await axiosInstance.get(`/ledgers/`).then((response) => {\n        if (response.status == \"UNAUTHENTICATED\") {\n        }\n        else {\n            \n            ledgers = response.data.data.map((row, i) => {\n                return { value: row.id, label: `${row.code} - ${row.name}`}\n            });\n            console.log(\"THIS IS RESPONSE FOR LEDGERS \", ledgers)\n        }\n    }).catch(error => {\n\n    })\n    return ledgers;\n}\n\nexport function renderErrorsAsList(errors){\n    var errors = errors;\n    var new_errors = errors.map ((err, i) => {\n        return <li>\n            {err}\n        </li>\n    })\n    return new_errors;\n}\n\n\nexport function formatDate(date){\n    var date = new moment(date)\n    return date.format(\"dddd, MMMM Do YYYY\");\n}\nexport function formatDateTime(date){\n    var date = new moment(date)\n    return date.format(\"dddd, MMMM Do YYYY @ h:mm:ss a\");\n}\n"]},"metadata":{},"sourceType":"module"}