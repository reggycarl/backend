{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Admins/Admin.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, FormText, Button } from \"reactstrap\";\nimport Select from \"../Controls/Select\";\nimport moment from \"moment\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { getCompanies } from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\"; // import \"./admins.scss\";\n\nimport Dropzone from \"react-dropzone\";\nimport PhoneInput from \"react-phone-input-2\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\n\nclass Admin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      admin: {\n        first_name: null,\n        last_name: \"\",\n        email: \"\",\n        phone: \"\"\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      admin_uuid: this.props.match.params.id,\n      existing_record: this.props.match.params.id != \"\" && this.props.match.params.id != null\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        admin: { ...this.state.admin,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        admin: { ...this.state.admin,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          admin: { ...this.state.admin,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.admin[attr_name]);\n        var date = new moment(this.state.admin[attr_name]);\n        var new_state = { ...this.state,\n          admin: { ...this.state.admin,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setAdmin = (state, admin) => {\n      var new_state = { ...state,\n        admin: admin\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        admin: { ...this.state.admin,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.onPhoneChange = phone => {\n      this.setState({ ...this.state,\n        admin: { ...this.state.admin,\n          phone: phone\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        admin: { ...this.state.admin,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDrop = (name, acceptedFiles) => {\n      console.log(name);\n      console.log(acceptedFiles);\n\n      if (this.state.readOnly != true) {\n        acceptedFiles.map((file, i) => {\n          var formData = new FormData();\n          formData.append(\"file\", file);\n          axiosInstance.post(\"/photos\", formData).then(response => {\n            this.setState({ ...this.state,\n              admin: { ...this.state.admin,\n                photo_id: response.data.photo.id,\n                photo: response.data.photo\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.componentDidMount = () => {\n      var self = this;\n      var link = \"/admins/admins/\"; // Promise.all([getCompanies()]).then(([companies]) => {\n\n      console.log(\"ID\", this.props.match.params.id);\n\n      if (self.state.existing_record == true) {\n        console.log(\"FECHING EXISTING RECORD\");\n        axiosInstance.get(`${link}${this.state.admin_uuid}`).then(response => {\n          var new_state = { ...this.state,\n            existing_record: true,\n            readOnly: true\n          };\n          new_state = self.setAdmin(new_state, response.data.admin);\n          self.setState({ ...new_state\n          });\n        });\n      } else {\n        self.setState({ ...this.state\n        });\n      } // })\n\n    };\n\n    this.reset_password = e => {\n      e.preventDefault();\n      var link = `/admins/admins/${this.state.admin_uuid}/reset_password`;\n      axiosInstance.post(link).then(response => {\n        console.log(response);\n      });\n    };\n\n    this.onSubmit = e => {\n      var link = \"/admins/admins/\";\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post(`${link}`, {\n            admin: this.state.admin\n          });\n        } else {\n          instance = axiosInstance.put(`${link}${this.state.admin_id || this.state.admin_uuid || this.state.admin.uuid}`, {\n            admin: this.state.admin\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setAdmin(this.state, response.data.admin);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`/admins/settings/admins/${response.data.admin.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n\n    this.handleChangeToggle = component => {\n      this.setState({ ...this.state,\n        admin: { ...this.state.category,\n          [component.target.id]: component.target.checked\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, \"Admins\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: \"/admins/settings/admins/new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, \"New Admin\")))), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 27\n      }\n    }, \"First Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"first_name\",\n      value: this.state.admin.first_name,\n      placeholder: \"First Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }\n    }, \"Last Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"last_name\",\n      value: this.state.admin.last_name,\n      placeholder: \"Last Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 27\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.admin.email,\n      placeholder: \"admin@email.com\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly || this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 27\n      }\n    }, \"Phone\"), /*#__PURE__*/React.createElement(PhoneInput, {\n      country: \"gh\",\n      value: this.state.admin.phone,\n      disabled: this.state.readOnly,\n      readOnly: this.state.readOnly,\n      countryCodeEditable: false,\n      disableDropdown: true,\n      className: \"test-class\",\n      onChange: phone => this.onPhoneChange(phone),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"sale-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 23\n      }\n    }, \"Full Access\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      id: \"full_access\",\n      defaultChecked: this.state.admin.full_access,\n      checked: this.state.admin.full_access,\n      disabled: this.state.readOnly,\n      onChange: this.handleChangeToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 27\n      }\n    })))))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    }), \"\\xA0\", this.state.readOnly && this.state.existing_record ? /*#__PURE__*/React.createElement(Button, {\n      onClick: this.reset_password,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }, \"Reset Password\", \" \") : \" \"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Admin));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Admins/Admin.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","FormText","Button","Select","moment","axiosInstance","baseurl","SubmitButton","Link","withRouter","getCompanies","history","NumberField","Dropzone","PhoneInput","actions","connect","bindActionCreators","Toggle","Admin","state","admin","first_name","last_name","email","phone","editing","readOnly","props","match","params","id","admin_uuid","existing_record","onChange","e","console","log","target","name","setState","value","handleChangeSelect","selectedOption","val","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setAdmin","onValueChange","floatValue","onPhoneChange","onDrop","acceptedFiles","map","file","i","formData","FormData","append","post","then","response","photo_id","data","photo","componentDidMount","self","link","get","reset_password","preventDefault","onSubmit","instance","put","admin_id","uuid","push","handleChangeToggle","component","category","checked","render","full_access","mapStateToProps","authentication","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,GAJF,EAKEC,GALF,EAMEC,QANF,EAOEC,IAPF,EAQEC,SARF,EASEC,KATF,EAUEC,KAVF,EAWEC,QAXF,EAYEC,MAZF,QAaO,YAbP;AAcA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,IAAwBC,OAAxB,QAAuC,eAAvC;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,wBAAP;;AACA,MAAMC,KAAN,SAAoB7B,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5B8B,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,IADP;AAELC,QAAAA,SAAS,EAAE,EAFN;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,KAAK,EAAE;AAJF,OADD;AAONC,MAAAA,OAAO,EAAE,KAPH;AAQNC,MAAAA,QAAQ,EACN,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,IAA8B,EAA9B,IAAoC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,IAA8B,IAT9D;AAUNC,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAV9B;AAWNE,MAAAA,eAAe,EACb,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,IAA8B,EAA9B,IAAoC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,IAA8B;AAZ9D,KADoB;;AAAA,SAe5BG,QAf4B,GAehBC,CAAD,IAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,IAArB;AACA,WAAKC,QAAL,CAAc,EACZ,GAAG,KAAKpB,KADI;AAEZC,QAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAEL,WAACc,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASG;AAFrB;AAFK,OAAd;AAOD,KAxB2B;;AAAA,SAyB5BC,kBAzB4B,GAyBP,CAACC,cAAD,EAAiBC,GAAjB,KAAyB;AAC5C,UAAIxB,KAAK,GAAG,EACV,GAAG,KAAKA,KADE;AAEVC,QAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAEL,WAACsB,cAAD,GAAkBC,GAAG,CAACH;AAFjB,SAFG;AAMV,SAACE,cAAD,GAAkBC;AANR,OAAZ;AAQA,WAAKJ,QAAL,CAAc,EAAE,GAAGpB;AAAL,OAAd;AACD,KAnC2B;;AAAA,SAoC5ByB,aApC4B,GAoCZ,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACzC;AACA,UAAIC,QAAQ,GAAG,IAAI5C,MAAJ,EAAf;;AACA,UAAI0C,UAAU,CAACG,WAAX,CAAuBV,IAAvB,IAA+BS,QAAQ,CAACC,WAAT,CAAqBV,IAAxD,EAA8D;AAC5D,YAAIW,SAAS,GAAG,EACd,GAAG,KAAK9B,KADM;AAEdC,UAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAEL,aAAC0B,SAAD,GAAaD;AAFR;AAFO,SAAhB;AAOA,aAAKN,QAAL,CAAc,EAAE,GAAGU;AAAL,SAAd;AACD,OATD,MASO;AACLd,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,KAAX,CAAiB0B,SAAjB,CAAZ;AACA,YAAII,IAAI,GAAG,IAAI/C,MAAJ,CAAW,KAAKgB,KAAL,CAAWC,KAAX,CAAiB0B,SAAjB,CAAX,CAAX;AACA,YAAIG,SAAS,GAAG,EACd,GAAG,KAAK9B,KADM;AAEdC,UAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAEL,aAAC0B,SAAD,GAAaI;AAFR;AAFO,SAAhB;AAOA,aAAKX,QAAL,CAAc,EAAE,GAAGU;AAAL,SAAd;AACD;AACF,KA5D2B;;AAAA,SA8D5BE,QA9D4B,GA8DjB,CAAChC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,UAAI6B,SAAS,GAAG,EACd,GAAG9B,KADW;AAEdC,QAAAA,KAAK,EAAEA;AAFO,OAAhB;AAIA,aAAO6B,SAAP;AACD,KApE2B;;AAAA,SAqE5BG,aArE4B,GAqEZ,CAAClB,CAAD,EAAIS,GAAJ,KAAY;AAC1BR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AAEA,WAAKJ,QAAL,CAAc,EACZ,GAAG,KAAKpB,KADI;AAEZC,QAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAEL,WAACc,CAAD,GAAKS,GAAG,CAACU;AAFJ;AAFK,OAAd;AAOD,KA/E2B;;AAAA,SAgF5BC,aAhF4B,GAgFX9B,KAAD,IAAW;AACzB,WAAKe,QAAL,CAAc,EACZ,GAAG,KAAKpB,KADI;AAEZC,QAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAELI,UAAAA,KAAK,EAAEA;AAFF;AAFK,OAAd;AAOD,KAxF2B;;AAAA,SAyF5BiB,kBAzF4B,GAyFP,CAACC,cAAD,EAAiBC,GAAjB,KAAyB;AAC5C,UAAIxB,KAAK,GAAG,EACV,GAAG,KAAKA,KADE;AAEVC,QAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAEL,WAACsB,cAAD,GAAkBC,GAAG,CAACH;AAFjB,SAFG;AAMV,SAACE,cAAD,GAAkBC;AANR,OAAZ;AAQA,WAAKJ,QAAL,CAAc,EAAE,GAAGpB;AAAL,OAAd;AACD,KAnG2B;;AAAA,SAoG5BoC,MApG4B,GAoGnB,CAACjB,IAAD,EAAOkB,aAAP,KAAyB;AAChCrB,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYoB,aAAZ;;AACA,UAAI,KAAKrC,KAAL,CAAWO,QAAX,IAAuB,IAA3B,EAAiC;AAC/B8B,QAAAA,aAAa,CAACC,GAAd,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC7B,cAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,UAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACAtD,UAAAA,aAAa,CAAC2D,IAAd,CAAmB,SAAnB,EAA8BH,QAA9B,EAAwCI,IAAxC,CAA8CC,QAAD,IAAc;AACzD,iBAAK1B,QAAL,CAAc,EACZ,GAAG,KAAKpB,KADI;AAEZC,cAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWC,KADT;AAEL8C,gBAAAA,QAAQ,EAAED,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBtC,EAFzB;AAGLsC,gBAAAA,KAAK,EAAEH,QAAQ,CAACE,IAAT,CAAcC;AAHhB;AAFK,aAAd;AAQD,WATD;AAUD,SAbD;AAcD;AACF,KAvH2B;;AAAA,SAwH5BC,iBAxH4B,GAwHR,MAAM;AACxB,UAAIC,IAAI,GAAG,IAAX;AACA,UAAIC,IAAI,GAAG,iBAAX,CAFwB,CAIxB;;AACApC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA1C;;AACA,UAAIwC,IAAI,CAACnD,KAAL,CAAWa,eAAX,IAA8B,IAAlC,EAAwC;AACtCG,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAhC,QAAAA,aAAa,CAACoE,GAAd,CAAmB,GAAED,IAAK,GAAE,KAAKpD,KAAL,CAAWY,UAAW,EAAlD,EAAqDiC,IAArD,CAA2DC,QAAD,IAAc;AACtE,cAAIhB,SAAS,GAAG,EACd,GAAG,KAAK9B,KADM;AAEda,YAAAA,eAAe,EAAE,IAFH;AAGdN,YAAAA,QAAQ,EAAE;AAHI,WAAhB;AAKAuB,UAAAA,SAAS,GAAGqB,IAAI,CAACnB,QAAL,CAAcF,SAAd,EAAyBgB,QAAQ,CAACE,IAAT,CAAc/C,KAAvC,CAAZ;AACAkD,UAAAA,IAAI,CAAC/B,QAAL,CAAc,EAAE,GAAGU;AAAL,WAAd;AACD,SARD;AASD,OAXD,MAWO;AACLqB,QAAAA,IAAI,CAAC/B,QAAL,CAAc,EACZ,GAAG,KAAKpB;AADI,SAAd;AAGD,OArBuB,CAuBxB;;AACD,KAhJ2B;;AAAA,SAiJ5BsD,cAjJ4B,GAiJVvC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACwC,cAAF;AACA,UAAIH,IAAI,GAAI,kBAAiB,KAAKpD,KAAL,CAAWY,UAAW,iBAAnD;AACA3B,MAAAA,aAAa,CAAC2D,IAAd,CAAmBQ,IAAnB,EAAyBP,IAAzB,CAA+BC,QAAD,IAAc;AAC1C9B,QAAAA,OAAO,CAACC,GAAR,CAAY6B,QAAZ;AACD,OAFD;AAGD,KAvJ2B;;AAAA,SAyJ5BU,QAzJ4B,GAyJhBzC,CAAD,IAAO;AAChB,UAAIqC,IAAI,GAAG,iBAAX;AACArC,MAAAA,CAAC,CAACwC,cAAF;AACA,UAAIJ,IAAI,GAAG,IAAX;;AACA,UAAIA,IAAI,CAACnD,KAAL,CAAWO,QAAX,IAAuB,IAAvB,IAA+B4C,IAAI,CAACnD,KAAL,CAAWa,eAAX,IAA8B,IAAjE,EAAuE;AACrEsC,QAAAA,IAAI,CAAC/B,QAAL,CAAc,EACZ,GAAG+B,IAAI,CAACnD,KADI;AAEZO,UAAAA,QAAQ,EAAE;AAFE,SAAd;AAID,OALD,MAKO;AACL,YAAIkD,QAAJ;;AACA,YAAIN,IAAI,CAACnD,KAAL,CAAWa,eAAX,IAA8B,IAAlC,EAAwC;AACtC4C,UAAAA,QAAQ,GAAGxE,aAAa,CAAC2D,IAAd,CAAoB,GAAEQ,IAAK,EAA3B,EAA8B;AACvCnD,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AADqB,WAA9B,CAAX;AAGD,SAJD,MAIO;AACLwD,UAAAA,QAAQ,GAAGxE,aAAa,CAACyE,GAAd,CACR,GAAEN,IAAK,GACN,KAAKpD,KAAL,CAAW2D,QAAX,IACA,KAAK3D,KAAL,CAAWY,UADX,IAEA,KAAKZ,KAAL,CAAWC,KAAX,CAAiB2D,IAClB,EALQ,EAMT;AAAE3D,YAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AAApB,WANS,CAAX;AAQD;;AAEDwD,QAAAA,QAAQ,CAACZ,IAAT,CAAeC,QAAD,IAAc;AAC1B9B,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB6B,QAAxB,EAD0B,CAG1B;;AACA,cAAI,KAAK9C,KAAL,CAAWa,eAAX,IAA8B,IAAlC,EAAwC;AACtC,gBAAIiB,SAAS,GAAG,KAAKE,QAAL,CAAc,KAAKhC,KAAnB,EAA0B8C,QAAQ,CAACE,IAAT,CAAc/C,KAAxC,CAAhB;AACAe,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,SAAjC;AACA,iBAAKV,QAAL,CAAc,EAAE,GAAGU,SAAL;AAAgBvB,cAAAA,QAAQ,EAAE;AAA1B,aAAd;AACD,WAJD,MAIO;AACL,iBAAKC,KAAL,CAAWjB,OAAX,CAAmBsE,IAAnB,CACG,2BAA0Bf,QAAQ,CAACE,IAAT,CAAc/C,KAAd,CAAoB2D,IAAK,EADtD,EADK,CAIL;AACD;AACF,SAdD;AAeD;AACF,KAnM2B;;AAAA,SAoM5BE,kBApM4B,GAoMNC,SAAD,IAAe;AAClC,WAAK3C,QAAL,CAAc,EACZ,GAAG,KAAKpB,KADI;AAEZC,QAAAA,KAAK,EAAE,EACL,GAAG,KAAKD,KAAL,CAAWgE,QADT;AAEL,WAACD,SAAS,CAAC7C,MAAV,CAAiBP,EAAlB,GAAuBoD,SAAS,CAAC7C,MAAV,CAAiB+C;AAFnC;AAFK,OAAd;AAOD,KA5M2B;AAAA;;AA8M5BC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,EAAE,EAAC,6BAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CAFF,CADF,eAcE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAE,KAAKlE,KAAL,CAAWC,KAAX,CAAiBC,UAH1B;AAIE,MAAA,WAAW,EAAC,YAJd;AAKE,MAAA,QAAQ,EAAE,KAAKY,QALjB;AAME,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWO,QANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAYE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAAX,CAAiBE,SAH1B;AAIE,MAAA,WAAW,EAAC,WAJd;AAKE,MAAA,QAAQ,EAAE,KAAKW,QALjB;AAME,MAAA,QAAQ,EAAE,KAAKd,KAAL,CAAWO,QANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAZF,CADF,eAyBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAAX,CAAiBG,KAH1B;AAIE,MAAA,WAAW,EAAC,iBAJd;AAKE,MAAA,QAAQ,EAAE,KAAKU,QALjB;AAME,MAAA,QAAQ,EACN,KAAKd,KAAL,CAAWO,QAAX,IAAuB,KAAKP,KAAL,CAAWa,eAPtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAcE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,IADX;AAEE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,KAAX,CAAiBI,KAF1B;AAGE,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWO,QAHvB;AAIE,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QAJvB;AAKE,MAAA,mBAAmB,EAAE,KALvB;AAME,MAAA,eAAe,EAAE,IANnB;AAOE,MAAA,SAAS,EAAC,YAPZ;AAQE,MAAA,QAAQ,EAAGF,KAAD,IAAW,KAAK8B,aAAL,CAAmB9B,KAAnB,CARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,CAzBF,eAqDE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArDF,CADF,CADF,eA2DE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,cAAc,EAAE,KAAKL,KAAL,CAAWC,KAAX,CAAiBkE,WAFnC;AAGE,MAAA,OAAO,EAAE,KAAKnE,KAAL,CAAWC,KAAX,CAAiBkE,WAH5B;AAIE,MAAA,QAAQ,EAAE,KAAKnE,KAAL,CAAWO,QAJvB;AAKE,MAAA,QAAQ,EAAE,KAAKuD,kBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFF,CADF,CA3DF,CADF,eA8EE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,KAAKN,QADhB;AAEE,MAAA,QAAQ,EAAE,KAAKxD,KAAL,CAAWO,QAFvB;AAGE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWM,OAHtB;AAIE,MAAA,eAAe,EAAE,KAAKN,KAAL,CAAWa,eAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,UASG,KAAKb,KAAL,CAAWO,QAAX,IAAuB,KAAKP,KAAL,CAAWa,eAAlC,gBACC,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAKyC,cADhB;AAEE,MAAA,QAAQ,EAAE,KAAKtD,KAAL,CAAWO,QAFvB;AAGE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWM,OAHtB;AAIE,MAAA,eAAe,EAAE,KAAKN,KAAL,CAAWa,eAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAMiB,GANjB,CADD,GAUC,GAnBJ,CA9EF,CADF,CAdF,CADF,CADF,CADF;AA4HD;;AA3U2B;;AA8U9B,MAAMuD,eAAe,GAAIpE,KAAD,KAAY;AAAEqE,EAAAA,cAAc,EAAErE,KAAK,CAACqE;AAAxB,CAAZ,CAAxB;;AACA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxC5E,EAAAA,OAAO,EAAEE,kBAAkB,CAACF,OAAD,EAAU4E,QAAV;AADa,CAAf,CAA3B;;AAIA,eAAelF,UAAU,CAACO,OAAO,CAACwE,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvE,KAA7C,CAAD,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  FormText,\n  Button,\n} from \"reactstrap\";\nimport Select from \"../Controls/Select\";\n\nimport moment from \"moment\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { getCompanies } from \"../misc/functions\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\n// import \"./admins.scss\";\nimport Dropzone from \"react-dropzone\";\nimport PhoneInput from \"react-phone-input-2\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\nclass Admin extends Component {\n  state = {\n    admin: {\n      first_name: null,\n      last_name: \"\",\n      email: \"\",\n      phone: \"\",\n    },\n    editing: false,\n    readOnly:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    admin_uuid: this.props.match.params.id,\n    existing_record:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n  };\n  onChange = (e) => {\n    console.log(e.target.name);\n    this.setState({\n      ...this.state,\n      admin: {\n        ...this.state.admin,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      admin: {\n        ...this.state.admin,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n  onDateChanged = (momentdate, attr_name) => {\n    // console.log(\"ClassName is\", momentdate.constructor.name)\n    var new_date = new moment();\n    if (momentdate.constructor.name == new_date.constructor.name) {\n      var new_state = {\n        ...this.state,\n        admin: {\n          ...this.state.admin,\n          [attr_name]: momentdate,\n        },\n      };\n      this.setState({ ...new_state });\n    } else {\n      console.log(this.state.admin[attr_name]);\n      var date = new moment(this.state.admin[attr_name]);\n      var new_state = {\n        ...this.state,\n        admin: {\n          ...this.state.admin,\n          [attr_name]: date,\n        },\n      };\n      this.setState({ ...new_state });\n    }\n  };\n\n  setAdmin = (state, admin) => {\n    var new_state = {\n      ...state,\n      admin: admin,\n    };\n    return new_state;\n  };\n  onValueChange = (e, val) => {\n    console.log(val);\n\n    this.setState({\n      ...this.state,\n      admin: {\n        ...this.state.admin,\n        [e]: val.floatValue,\n      },\n    });\n  };\n  onPhoneChange = (phone) => {\n    this.setState({\n      ...this.state,\n      admin: {\n        ...this.state.admin,\n        phone: phone,\n      },\n    });\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      admin: {\n        ...this.state.admin,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n  onDrop = (name, acceptedFiles) => {\n    console.log(name);\n    console.log(acceptedFiles);\n    if (this.state.readOnly != true) {\n      acceptedFiles.map((file, i) => {\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        axiosInstance.post(\"/photos\", formData).then((response) => {\n          this.setState({\n            ...this.state,\n            admin: {\n              ...this.state.admin,\n              photo_id: response.data.photo.id,\n              photo: response.data.photo,\n            },\n          });\n        });\n      });\n    }\n  };\n  componentDidMount = () => {\n    var self = this;\n    var link = \"/admins/admins/\";\n\n    // Promise.all([getCompanies()]).then(([companies]) => {\n    console.log(\"ID\", this.props.match.params.id);\n    if (self.state.existing_record == true) {\n      console.log(\"FECHING EXISTING RECORD\");\n      axiosInstance.get(`${link}${this.state.admin_uuid}`).then((response) => {\n        var new_state = {\n          ...this.state,\n          existing_record: true,\n          readOnly: true,\n        };\n        new_state = self.setAdmin(new_state, response.data.admin);\n        self.setState({ ...new_state });\n      });\n    } else {\n      self.setState({\n        ...this.state,\n      });\n    }\n\n    // })\n  };\n  reset_password = (e) => {\n    e.preventDefault();\n    var link = `/admins/admins/${this.state.admin_uuid}/reset_password`;\n    axiosInstance.post(link).then((response) => {\n      console.log(response);\n    });\n  };\n\n  onSubmit = (e) => {\n    var link = \"/admins/admins/\";\n    e.preventDefault();\n    var self = this;\n    if (self.state.readOnly == true && self.state.existing_record == true) {\n      self.setState({\n        ...self.state,\n        readOnly: false,\n      });\n    } else {\n      var instance;\n      if (self.state.existing_record != true) {\n        instance = axiosInstance.post(`${link}`, {\n          admin: this.state.admin,\n        });\n      } else {\n        instance = axiosInstance.put(\n          `${link}${\n            this.state.admin_id ||\n            this.state.admin_uuid ||\n            this.state.admin.uuid\n          }`,\n          { admin: this.state.admin }\n        );\n      }\n\n      instance.then((response) => {\n        console.log(\"RESPONSE\", response);\n\n        // console.log(\"Setting state\")\n        if (this.state.existing_record == true) {\n          var new_state = this.setAdmin(this.state, response.data.admin);\n          console.log(\"THIS IS NEW STATE\", new_state);\n          this.setState({ ...new_state, readOnly: true });\n        } else {\n          this.props.history.push(\n            `/admins/settings/admins/${response.data.admin.uuid}`\n          );\n          // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n        }\n      });\n    }\n  };\n  handleChangeToggle = (component) => {\n    this.setState({\n      ...this.state,\n      admin: {\n        ...this.state.category,\n        [component.target.id]: component.target.checked,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <Col md={12}>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"col-md-12\">\n              Admins\n              <ul>\n                <li>\n                  <Link\n                    className=\"btn btn-success btn-sm\"\n                    to=\"/admins/settings/admins/new\"\n                  >\n                    New Admin\n                  </Link>\n                </li>\n              </ul>\n            </CardTitle>\n            <CardText className=\"col-md-12\">\n              <Form className=\"row\">\n                <Col md={12}>\n                  <Row>\n                    <Col md={12}>\n                      <Row>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">First Name</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"first_name\"\n                            value={this.state.admin.first_name}\n                            placeholder=\"First Name\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">Last Name</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"last_name\"\n                            value={this.state.admin.last_name}\n                            placeholder=\"Last Name\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                      </Row>\n                      <Row>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">Email</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"email\"\n                            value={this.state.admin.email}\n                            placeholder=\"admin@email.com\"\n                            onChange={this.onChange}\n                            readOnly={\n                              this.state.readOnly || this.state.existing_record\n                            }\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-6\">\n                          <Label for=\"name\">Phone</Label>\n                          <PhoneInput\n                            country={\"gh\"}\n                            value={this.state.admin.phone}\n                            disabled={this.state.readOnly}\n                            readOnly={this.state.readOnly}\n                            countryCodeEditable={false}\n                            disableDropdown={true}\n                            className=\"test-class\"\n                            onChange={(phone) => this.onPhoneChange(phone)}\n                          />\n                        </FormGroup>\n                      </Row>\n                      <Row></Row>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <FormGroup className=\"col-md-2\">\n                      <Label for=\"sale-price\">Full Access</Label>\n                      <Col md={12} className=\"block\">\n                        <Row>\n                          <Toggle\n                            id=\"full_access\"\n                            defaultChecked={this.state.admin.full_access}\n                            checked={this.state.admin.full_access}\n                            disabled={this.state.readOnly}\n                            onChange={this.handleChangeToggle}\n                          />\n                        </Row>\n                      </Col>\n                    </FormGroup>\n                  </Row>\n                </Col>\n\n                <Col md={12}>\n                  {/* <Row> */}\n                  <SubmitButton\n                    onClick={this.onSubmit}\n                    readOnly={this.state.readOnly}\n                    editing={this.state.editing}\n                    existing_record={this.state.existing_record}\n                  />\n                  &nbsp;\n                  {this.state.readOnly && this.state.existing_record ? (\n                    <Button\n                      onClick={this.reset_password}\n                      readOnly={this.state.readOnly}\n                      editing={this.state.editing}\n                      existing_record={this.state.existing_record}\n                    >\n                      Reset Password{\" \"}\n                    </Button>\n                  ) : (\n                    \" \"\n                  )}\n                </Col>\n              </Form>\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Admin));\n"]},"metadata":{},"sourceType":"module"}