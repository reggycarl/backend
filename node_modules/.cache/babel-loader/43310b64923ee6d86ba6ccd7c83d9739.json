{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Settings/CompanyProfile.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, CardTitle, CardBody, Row, Col, CardText, Form, FormGroup, Input, Label, Nav, NavItem, NavLink, TabPane, TabContent } from \"reactstrap\";\nimport Select from \"../Controls/Select\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\nimport moment from \"moment\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport \"./company_profile.scss\";\nimport Dropzone from \"react-dropzone\";\nimport PhoneInput from \"react-phone-input-2\";\nimport { getBanks, getCompanyTypes, getCountries } from \"../misc/functions\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Button from \"reactstrap/lib/Button\";\nimport Table from \"reactstrap/lib/Table\";\n\nclass CompanyProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: \"1\",\n      company: {\n        photo_id: null,\n        description: \"\",\n        link: \"\",\n        phone: \"\",\n        users: []\n      },\n      editing: false,\n      readOnly: this.props.match.params.id != \"\" && this.props.match.params.id != null,\n      company_uuid: this.props.match.params.id,\n      existing_record: this.props.authentication.user.company_id != \"\" && this.props.authentication.user.company_id != null || this.props.match.params.id && this.props.match.params.id != null\n    };\n\n    this.onChange = e => {\n      console.log(e.target.name);\n      this.setState({ ...this.state,\n        company: { ...this.state.company,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        company: { ...this.state.company,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onDateChanged = (momentdate, attr_name) => {\n      // console.log(\"ClassName is\", momentdate.constructor.name)\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          company: { ...this.state.company,\n            [attr_name]: momentdate\n          }\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state.company[attr_name]);\n        var date = new moment(this.state.company[attr_name]);\n        var new_state = { ...this.state,\n          company: { ...this.state.company,\n            [attr_name]: date\n          }\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n\n    this.setCompanyProfile = (state, company) => {\n      var new_state = { ...state,\n        company: company,\n        type_id: state.types.find(obj => obj.value == company.type_id),\n        country_id: state.countries.find(obj => obj.value == company.country_id),\n        bank_id: state.banks.find(obj => obj.value == company.bank_id)\n      };\n      return new_state;\n    };\n\n    this.onValueChange = (e, val) => {\n      console.log(val);\n      this.setState({ ...this.state,\n        company: { ...this.state.company,\n          [e]: val.floatValue\n        }\n      });\n    };\n\n    this.toggleTab = val => {\n      this.setState({ ...this.state,\n        activeTab: val\n      });\n    };\n\n    this.onPhoneChange = phone => {\n      this.setState({ ...this.state,\n        company: { ...this.state.company,\n          phone: phone\n        }\n      });\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        company: { ...this.state.company,\n          [selectedOption]: val.value\n        },\n        [selectedOption]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.componentDidMount = () => {\n      var self = this;\n      Promise.all([getCompanyTypes(), getCountries(), getBanks()]).then(([types, countries, banks]) => {\n        if (self.state.existing_record == true) {\n          console.log(\"ID\", this.props.match.params.id);\n          console.log(\"FECHING EXISTING RECORD\");\n          axiosInstance.get(this.props.authentication.default_path == \"/partners/\" ? `/partners/companies` : `/admins/partners/companies/${this.state.company_uuid}`).then(response => {\n            var new_state = { ...this.state,\n              existing_record: true,\n              types: types,\n              countries: countries,\n              banks: banks,\n              readOnly: true\n            };\n            new_state = self.setCompanyProfile(new_state, response.data.company);\n            self.setState({ ...new_state\n            });\n          });\n        } else {\n          self.setState({ ...this.state,\n            types: types,\n            countries: countries,\n            banks: banks\n          });\n        }\n      });\n    };\n\n    this.onDrop = (name, acceptedFiles) => {\n      console.log(name);\n      console.log(acceptedFiles);\n\n      if (this.state.readOnly != true) {\n        acceptedFiles.map((file, i) => {\n          var formData = new FormData();\n          formData.append(\"file\", file);\n          axiosInstance.post(\"/photos\", formData).then(response => {\n            this.setState({ ...this.state,\n              company: { ...this.state.brand,\n                logo_id: response.data.photo.id,\n                logo: response.data.photo\n              }\n            });\n          });\n        });\n      }\n    };\n\n    this.approveCompany = e => {\n      e.preventDefault();\n      axiosInstance.post(`admins/partners/companies/${this.state.company_uuid}/approve`).then(response => {\n        if (response.status == 200) {\n          this.setState({ ...this.state,\n            company: response.data.company\n          });\n        }\n      });\n    };\n\n    this.onSubmit = e => {\n      var link = this.props.authentication.default_path == \"/partners/\" ? \"/partners/companies\" : \"/admins/partners/companies\";\n      e.preventDefault();\n      var self = this;\n\n      if (self.state.readOnly == true && self.state.existing_record == true) {\n        self.setState({ ...self.state,\n          readOnly: false\n        });\n      } else {\n        var instance;\n\n        if (self.state.existing_record != true) {\n          instance = axiosInstance.post(link, { ...this.state\n          });\n        } else {\n          instance = axiosInstance.put(`${link}/${this.state.company_uuid}`, {\n            company: this.state.company\n          });\n        }\n\n        instance.then(response => {\n          console.log(\"RESPONSE\", response); // console.log(\"Setting state\")\n\n          if (this.state.existing_record == true) {\n            var new_state = this.setCompanyProfile(this.state, response.data.company);\n            console.log(\"THIS IS NEW STATE\", new_state);\n            this.setState({ ...new_state,\n              readOnly: true\n            });\n          } else {\n            this.props.history.push(`${link}${response.data.company.uuid}`); // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n          }\n        });\n      }\n    };\n\n    this.handleChangeToggle = component => {\n      this.setState({ ...this.state,\n        company: { ...this.state.company,\n          [component.target.id]: component.target.checked\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }\n    }, \"Company Profile\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    }, this.props.authentication.default_path == \"/admins/\" ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: `${this.props.authentication.default_path}partners/companies/new`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, \"New Business\")) : \"\")), /*#__PURE__*/React.createElement(CardText, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      tabs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: this.state.activeTab == \"1\" ? \"active\" : \"\",\n      onClick: () => {\n        this.toggleTab(\"1\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 21\n      }\n    }, \"Basic Information\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: this.state.activeTab == \"2\" ? \"active\" : \"\",\n      onClick: () => {\n        this.toggleTab(\"2\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, \"Payment Information\")), /*#__PURE__*/React.createElement(NavItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: this.state.activeTab == \"3\" ? \"active\" : \"\",\n      onClick: () => {\n        this.toggleTab(\"3\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }, \"Users\"))), /*#__PURE__*/React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, {\n      disabled: this.state.readOnly,\n      onDrop: this.readOnly ? null : this.onDrop.bind(null, \"logo\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 25\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(Col, Object.assign({\n      id: \"companyPhotoBox\"\n    }, getRootProps(), {\n      className: `${this.state.readOnly ? \"\" : \"dropZone\"}  col-md-12`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 31\n      }\n    })), this.state.company.logo ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.company.logo.image_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 33\n      }\n    }) : null))), /*#__PURE__*/React.createElement(Col, {\n      md: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 29\n      }\n    }, \"Business Number\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.company.number,\n      placeholder: \"Business Number\",\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    }, \"Business Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      value: this.state.company.name,\n      placeholder: \"Business Name Name\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }, \"Business Type\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"type_id\",\n      value: this.state.type_id,\n      onChange: this.handleChangeSelect.bind(this, \"type_id\"),\n      options: this.state.types,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"disabled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 29\n      }\n    }, \"Disabled\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      id: \"disabled\",\n      defaultChecked: this.state.company.disabled,\n      checked: this.state.company.disabled,\n      disabled: this.state.readOnly,\n      onChange: this.handleChangeToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 33\n      }\n    }))))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 27\n      }\n    }, \"Contact Phone\"), /*#__PURE__*/React.createElement(PhoneInput, {\n      country: \"gh\",\n      value: this.state.company.phone,\n      disabled: this.state.readOnly,\n      readOnly: this.state.readOnly,\n      placeholder: \"233 241 234 567\" // countryCodeEditable={false}\n      // disableDropdown={true}\n      ,\n      className: \"\",\n      onChange: phone => this.onPhoneChange(phone),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 27\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"email\",\n      value: this.state.company.email,\n      placeholder: \"company@email.com\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 27\n      }\n    }, \"Address Line 1\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"address_line_1\",\n      value: this.state.company.address_line_1,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 27\n      }\n    }, \"Address Line 2\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"address_line_2\",\n      value: this.state.company.address_line_2,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 27\n      }\n    }, \"City / Town\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"city\",\n      value: this.state.company.city,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 27\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"type_id\",\n      value: this.state.country_id,\n      onChange: this.handleChangeSelect.bind(this, \"country_id\"),\n      options: this.state.countries,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 27\n      }\n    }, \"Postal / Zip Code\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"postal_code\",\n      value: this.state.company.postal_code,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 27\n      }\n    }, \"Business Reg. No. \"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"registration_number\",\n      value: this.state.company.registration_number,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 27\n      }\n    }, \"Tax Identification No. (TIN)\", \" \"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"tax_identification_number\",\n      value: this.state.company.tax_identification_number,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 23\n      }\n    }, \"Bank / Mobile Network\"), /*#__PURE__*/React.createElement(Select, {\n      name: \"bank_id\",\n      value: this.state.bank_id,\n      onChange: this.handleChangeSelect.bind(this, \"bank_id\"),\n      options: this.state.banks,\n      isDisabled: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 23\n      }\n    }, \"Account Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"account_name\",\n      value: this.state.company.account_name,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 23\n      }\n    }, \"Account / Wallet Number\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"account_number\",\n      value: this.state.company.account_number,\n      placeholder: \"\",\n      onChange: this.onChange,\n      readOnly: this.state.readOnly,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(TabPane, {\n      tabId: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      bordered: \"true\",\n      striped: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 27\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 27\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 27\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 27\n      }\n    }, \"Phone\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 23\n      }\n    }, this.state.company.users.map((user, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 31\n        }\n      }, i + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 31\n        }\n      }, user.full_name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 31\n        }\n      }, user.email), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 31\n        }\n      }, user.phone));\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SubmitButton, {\n      onClick: this.onSubmit,\n      readOnly: this.state.readOnly,\n      editing: this.state.editing,\n      existing_record: this.state.existing_record,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 19\n      }\n    }), \"\\xA0\", this.props.authentication.default_path == \"/admins/\" ? /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      disabled: this.state.company.approved,\n      onClick: this.approveCompany,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 21\n      }\n    }, this.state.company.approved ? \"Approved\" : \"Approve\") : \"\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CompanyProfile));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Settings/CompanyProfile.jsx"],"names":["React","Component","Card","CardTitle","CardBody","Row","Col","CardText","Form","FormGroup","Input","Label","Nav","NavItem","NavLink","TabPane","TabContent","Select","Toggle","moment","axiosInstance","baseurl","SubmitButton","Link","withRouter","history","NumberField","Dropzone","PhoneInput","getBanks","getCompanyTypes","getCountries","actions","connect","bindActionCreators","Button","Table","CompanyProfile","state","activeTab","company","photo_id","description","link","phone","users","editing","readOnly","props","match","params","id","company_uuid","existing_record","authentication","user","company_id","onChange","e","console","log","target","name","setState","value","handleChangeSelect","selectedOption","val","onDateChanged","momentdate","attr_name","new_date","constructor","new_state","date","setCompanyProfile","type_id","types","find","obj","country_id","countries","bank_id","banks","onValueChange","floatValue","toggleTab","onPhoneChange","componentDidMount","self","Promise","all","then","get","default_path","response","data","onDrop","acceptedFiles","map","file","i","formData","FormData","append","post","brand","logo_id","photo","logo","approveCompany","preventDefault","status","onSubmit","instance","put","push","uuid","handleChangeToggle","component","checked","render","bind","getRootProps","getInputProps","image_url","number","disabled","email","address_line_1","address_line_2","city","postal_code","registration_number","tax_identification_number","account_name","account_number","full_name","approved","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  Row,\n  Col,\n  CardText,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Nav,\n  NavItem,\n  NavLink,\n  TabPane,\n  TabContent,\n} from \"reactstrap\";\nimport Select from \"../Controls/Select\";\nimport Toggle from \"react-toggle\";\nimport \"react-toggle/style.css\";\nimport moment from \"moment\";\nimport axiosInstance, { baseurl } from \"../misc/Axios\";\nimport SubmitButton from \"../Controls/SubmitButton\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport { history } from \"../../index\";\nimport NumberField from \"../Controls/NumberField\";\nimport \"./company_profile.scss\";\nimport Dropzone from \"react-dropzone\";\nimport PhoneInput from \"react-phone-input-2\";\nimport { getBanks, getCompanyTypes, getCountries } from \"../misc/functions\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Button from \"reactstrap/lib/Button\";\nimport Table from \"reactstrap/lib/Table\";\nclass CompanyProfile extends Component {\n  state = {\n    activeTab: \"1\",\n    company: {\n      photo_id: null,\n      description: \"\",\n      link: \"\",\n      phone: \"\",\n      users: [],\n    },\n\n    editing: false,\n    readOnly:\n      this.props.match.params.id != \"\" && this.props.match.params.id != null,\n    company_uuid: this.props.match.params.id,\n    existing_record:\n      (this.props.authentication.user.company_id != \"\" &&\n        this.props.authentication.user.company_id != null) ||\n      (this.props.match.params.id && this.props.match.params.id != null),\n  };\n  onChange = (e) => {\n    console.log(e.target.name);\n    this.setState({\n      ...this.state,\n      company: {\n        ...this.state.company,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      company: {\n        ...this.state.company,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n  onDateChanged = (momentdate, attr_name) => {\n    // console.log(\"ClassName is\", momentdate.constructor.name)\n    var new_date = new moment();\n    if (momentdate.constructor.name == new_date.constructor.name) {\n      var new_state = {\n        ...this.state,\n        company: {\n          ...this.state.company,\n          [attr_name]: momentdate,\n        },\n      };\n      this.setState({ ...new_state });\n    } else {\n      console.log(this.state.company[attr_name]);\n      var date = new moment(this.state.company[attr_name]);\n      var new_state = {\n        ...this.state,\n        company: {\n          ...this.state.company,\n          [attr_name]: date,\n        },\n      };\n      this.setState({ ...new_state });\n    }\n  };\n\n  setCompanyProfile = (state, company) => {\n    var new_state = {\n      ...state,\n      company: company,\n      type_id: state.types.find((obj) => obj.value == company.type_id),\n      country_id: state.countries.find(\n        (obj) => obj.value == company.country_id\n      ),\n      bank_id: state.banks.find((obj) => obj.value == company.bank_id),\n    };\n    return new_state;\n  };\n  onValueChange = (e, val) => {\n    console.log(val);\n\n    this.setState({\n      ...this.state,\n      company: {\n        ...this.state.company,\n        [e]: val.floatValue,\n      },\n    });\n  };\n  toggleTab = (val) => {\n    this.setState({\n      ...this.state,\n      activeTab: val,\n    });\n  };\n  onPhoneChange = (phone) => {\n    this.setState({\n      ...this.state,\n      company: {\n        ...this.state.company,\n        phone: phone,\n      },\n    });\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      company: {\n        ...this.state.company,\n        [selectedOption]: val.value,\n      },\n      [selectedOption]: val,\n    };\n    this.setState({ ...state });\n  };\n\n  componentDidMount = () => {\n    var self = this;\n\n    Promise.all([getCompanyTypes(), getCountries(), getBanks()]).then(\n      ([types, countries, banks]) => {\n        if (self.state.existing_record == true) {\n          console.log(\"ID\", this.props.match.params.id);\n          console.log(\"FECHING EXISTING RECORD\");\n          axiosInstance\n            .get(\n              this.props.authentication.default_path == \"/partners/\"\n                ? `/partners/companies`\n                : `/admins/partners/companies/${this.state.company_uuid}`\n            )\n            .then((response) => {\n              var new_state = {\n                ...this.state,\n                existing_record: true,\n                types: types,\n                countries: countries,\n                banks: banks,\n                readOnly: true,\n              };\n              new_state = self.setCompanyProfile(\n                new_state,\n                response.data.company\n              );\n              self.setState({ ...new_state });\n            });\n        } else {\n          self.setState({\n            ...this.state,\n            types: types,\n            countries: countries,\n            banks: banks,\n          });\n        }\n      }\n    );\n  };\n  onDrop = (name, acceptedFiles) => {\n    console.log(name);\n    console.log(acceptedFiles);\n    if (this.state.readOnly != true) {\n      acceptedFiles.map((file, i) => {\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        axiosInstance.post(\"/photos\", formData).then((response) => {\n          this.setState({\n            ...this.state,\n            company: {\n              ...this.state.brand,\n              logo_id: response.data.photo.id,\n              logo: response.data.photo,\n            },\n          });\n        });\n      });\n    }\n  };\n  approveCompany = (e) => {\n    e.preventDefault();\n    axiosInstance\n      .post(`admins/partners/companies/${this.state.company_uuid}/approve`)\n      .then((response) => {\n        if (response.status == 200) {\n          this.setState({\n            ...this.state,\n            company: response.data.company,\n          });\n        }\n      });\n  };\n  onSubmit = (e) => {\n    var link =\n      this.props.authentication.default_path == \"/partners/\"\n        ? \"/partners/companies\"\n        : \"/admins/partners/companies\";\n    e.preventDefault();\n    var self = this;\n    if (self.state.readOnly == true && self.state.existing_record == true) {\n      self.setState({\n        ...self.state,\n        readOnly: false,\n      });\n    } else {\n      var instance;\n      if (self.state.existing_record != true) {\n        instance = axiosInstance.post(link, { ...this.state });\n      } else {\n        instance = axiosInstance.put(`${link}/${this.state.company_uuid}`, {\n          company: this.state.company,\n        });\n      }\n\n      instance.then((response) => {\n        console.log(\"RESPONSE\", response);\n\n        // console.log(\"Setting state\")\n        if (this.state.existing_record == true) {\n          var new_state = this.setCompanyProfile(\n            this.state,\n            response.data.company\n          );\n          console.log(\"THIS IS NEW STATE\", new_state);\n          this.setState({ ...new_state, readOnly: true });\n        } else {\n          this.props.history.push(`${link}${response.data.company.uuid}`);\n          // this.setState({ ...this.state, readOnly: true, existing_record: true, editing: false })\n        }\n      });\n    }\n  };\n  handleChangeToggle = (component) => {\n    this.setState({\n      ...this.state,\n      company: {\n        ...this.state.company,\n        [component.target.id]: component.target.checked,\n      },\n    });\n  };\n\n  render() {\n    return (\n      <Col md={12}>\n        <Card>\n          <CardBody>\n            <CardTitle className=\"col-md-12\">\n              Company Profile\n              <ul>\n                {this.props.authentication.default_path == \"/admins/\" ? (\n                  <li>\n                    <Link\n                      className=\"btn btn-success btn-sm\"\n                      to={`${this.props.authentication.default_path}partners/companies/new`}\n                    >\n                      New Business\n                    </Link>\n                  </li>\n                ) : (\n                  \"\"\n                )}\n              </ul>\n            </CardTitle>\n            <CardText className=\"col-md-12\">\n              <Form className=\"\">\n                <Nav tabs>\n                  <NavItem>\n                    <NavLink\n                      className={this.state.activeTab == \"1\" ? \"active\" : \"\"}\n                      onClick={() => {\n                        this.toggleTab(\"1\");\n                      }}\n                    >\n                      Basic Information\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className={this.state.activeTab == \"2\" ? \"active\" : \"\"}\n                      onClick={() => {\n                        this.toggleTab(\"2\");\n                      }}\n                    >\n                      Payment Information\n                    </NavLink>\n                  </NavItem>\n                  <NavItem>\n                    <NavLink\n                      className={this.state.activeTab == \"3\" ? \"active\" : \"\"}\n                      onClick={() => {\n                        this.toggleTab(\"3\");\n                      }}\n                    >\n                      Users\n                    </NavLink>\n                  </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                  <TabPane tabId=\"1\">\n                    <Row>\n                      <Col md={3}>\n                        <Dropzone\n                          disabled={this.state.readOnly}\n                          onDrop={\n                            this.readOnly\n                              ? null\n                              : this.onDrop.bind(null, \"logo\")\n                          }\n                        >\n                          {({ getRootProps, getInputProps }) => (\n                            <Col\n                              id=\"companyPhotoBox\"\n                              {...getRootProps()}\n                              className={`${\n                                this.state.readOnly ? \"\" : \"dropZone\"\n                              }  col-md-12`}\n                            >\n                              <input {...getInputProps()} />\n\n                              {this.state.company.logo ? (\n                                <img src={this.state.company.logo.image_url} />\n                              ) : null}\n                            </Col>\n                          )}\n                        </Dropzone>\n                      </Col>\n                      <Col md={9}>\n                        <Row>\n                          <FormGroup className=\"col-md-4\">\n                            <Label for=\"name\">Business Number</Label>\n                            <Input\n                              type=\"text\"\n                              name=\"name\"\n                              value={this.state.company.number}\n                              placeholder=\"Business Number\"\n                              readOnly={true}\n                            />\n                          </FormGroup>\n                        </Row>\n                        <Row>\n                          <FormGroup className=\"col-md-8\">\n                            <Label for=\"name\">Business Name</Label>\n                            <Input\n                              type=\"text\"\n                              name=\"name\"\n                              value={this.state.company.name}\n                              placeholder=\"Business Name Name\"\n                              onChange={this.onChange}\n                              readOnly={this.state.readOnly}\n                            />\n                          </FormGroup>\n                        </Row>\n                        <Row>\n                          <FormGroup className=\"col-md-4\">\n                            <Label for=\"exampleEmail\">Business Type</Label>\n                            <Select\n                              name=\"type_id\"\n                              value={this.state.type_id}\n                              onChange={this.handleChangeSelect.bind(\n                                this,\n                                \"type_id\"\n                              )}\n                              options={this.state.types}\n                              isDisabled={this.state.readOnly}\n                            />\n                          </FormGroup>\n                          <FormGroup className=\"col-md-3\">\n                            <Label for=\"disabled\">Disabled</Label>\n                            <Col md={12} className=\"block\">\n                              <Row>\n                                <Toggle\n                                  id=\"disabled\"\n                                  defaultChecked={this.state.company.disabled}\n                                  checked={this.state.company.disabled}\n                                  disabled={this.state.readOnly}\n                                  onChange={this.handleChangeToggle}\n                                />\n                              </Row>\n                            </Col>\n                          </FormGroup>\n                        </Row>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col md={6}>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">Contact Phone</Label>\n                          <PhoneInput\n                            country={\"gh\"}\n                            value={this.state.company.phone}\n                            disabled={this.state.readOnly}\n                            readOnly={this.state.readOnly}\n                            placeholder=\"233 241 234 567\"\n                            // countryCodeEditable={false}\n                            // disableDropdown={true}\n                            className=\"\"\n                            onChange={(phone) => this.onPhoneChange(phone)}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">Email</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"email\"\n                            value={this.state.company.email}\n                            placeholder=\"company@email.com\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">Address Line 1</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"address_line_1\"\n                            value={this.state.company.address_line_1}\n                            placeholder=\"\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">Address Line 2</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"address_line_2\"\n                            value={this.state.company.address_line_2}\n                            placeholder=\"\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">City / Town</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"city\"\n                            value={this.state.company.city}\n                            placeholder=\"\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"exampleEmail\">Country</Label>\n                          <Select\n                            name=\"type_id\"\n                            value={this.state.country_id}\n                            onChange={this.handleChangeSelect.bind(\n                              this,\n                              \"country_id\"\n                            )}\n                            options={this.state.countries}\n                            isDisabled={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">Postal / Zip Code</Label>\n                          <Input\n                            type=\"text\"\n                            name=\"postal_code\"\n                            value={this.state.company.postal_code}\n                            placeholder=\"\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                      </Col>\n                      <Col md={6}>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">Business Reg. No. </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"registration_number\"\n                            value={this.state.company.registration_number}\n                            placeholder=\"\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                        <FormGroup className=\"col-md-12\">\n                          <Label for=\"name\">\n                            Tax Identification No. (TIN){\" \"}\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"tax_identification_number\"\n                            value={this.state.company.tax_identification_number}\n                            placeholder=\"\"\n                            onChange={this.onChange}\n                            readOnly={this.state.readOnly}\n                          />\n                        </FormGroup>\n                      </Col>\n                    </Row>\n                  </TabPane>\n                  <TabPane tabId=\"2\">\n                    <FormGroup className=\"col-md-4\">\n                      <Label for=\"exampleEmail\">Bank / Mobile Network</Label>\n                      <Select\n                        name=\"bank_id\"\n                        value={this.state.bank_id}\n                        onChange={this.handleChangeSelect.bind(this, \"bank_id\")}\n                        options={this.state.banks}\n                        isDisabled={this.state.readOnly}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-6\">\n                      <Label for=\"name\">Account Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"account_name\"\n                        value={this.state.company.account_name}\n                        placeholder=\"\"\n                        onChange={this.onChange}\n                        readOnly={this.state.readOnly}\n                      />\n                    </FormGroup>\n                    <FormGroup className=\"col-md-4\">\n                      <Label for=\"name\">Account / Wallet Number</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"account_number\"\n                        value={this.state.company.account_number}\n                        placeholder=\"\"\n                        onChange={this.onChange}\n                        readOnly={this.state.readOnly}\n                      />\n                    </FormGroup>\n                  </TabPane>\n                  <TabPane tabId=\"3\">\n                    <Table bordered=\"true\" striped=\"true\">\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Name</th>\n                          <th>Email</th>\n                          <th>Phone</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.company.users.map((user, i) => {\n                          return (\n                            <tr>\n                              <td>{i + 1}</td>\n                              <td>{user.full_name}</td>\n                              <td>{user.email}</td>\n                              <td>{user.phone}</td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </Table>\n                  </TabPane>\n                </TabContent>\n\n                <Col md={12}>\n                  {/* <Row> */}\n                  <SubmitButton\n                    onClick={this.onSubmit}\n                    readOnly={this.state.readOnly}\n                    editing={this.state.editing}\n                    existing_record={this.state.existing_record}\n                  />\n                  &nbsp;\n                  {this.props.authentication.default_path == \"/admins/\" ? (\n                    <Button\n                      color=\"success\"\n                      disabled={this.state.company.approved}\n                      onClick={this.approveCompany}\n                    >\n                      {this.state.company.approved ? \"Approved\" : \"Approve\"}\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                </Col>\n              </Form>\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CompanyProfile)\n);\n"]},"metadata":{},"sourceType":"module"}