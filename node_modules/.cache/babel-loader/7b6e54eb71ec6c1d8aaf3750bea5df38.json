{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Products/Products.jsx\";\nimport React, { Component } from 'react';\nimport { Col, Card, CardBody, CardTitle, CardText } from 'reactstrap';\nimport ReactWillPaginateTable from '../../lib/ReactWillPaginateTable';\nimport { Link, withRouter } from 'react-router-dom';\nimport axiosInstance from '../misc/Axios';\nimport * as actions from '../../actions';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { bindActionCreators } from 'redux';\n\nclass Products extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.componentDidMount = () => {};\n  }\n\n  render() {\n    var columns = [{\n      name: \"sku\"\n    }, {\n      name: 'name'\n    }, {\n      name: \"regular_price\"\n    }, {\n      name: \"sale_price\"\n    }, {\n      name: \"Category\",\n      field: \"quantity\"\n    }, {\n      name: \"date\",\n      field: \"created_at\",\n      date: true\n    }, {\n      name: \"status\",\n      field: \"active\",\n      boolean: true,\n      options: [\"Active\", \"Inactive\"]\n    }];\n\n    if (this.props.authentication.default_path == \"/admins/\") {\n      columns = [...columns, {\n        name: \"company_name\"\n      }];\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \"Products\", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, this.props.authentication.default_path == \"/partners/\" ? /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 88\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"btn btn-success btn-sm\",\n      to: `${this.props.authentication.default_path}products/new`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 92\n      }\n    }, \"New Product\")) : \"\")), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Products));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Products/Products.jsx"],"names":["React","Component","Col","Card","CardBody","CardTitle","CardText","ReactWillPaginateTable","Link","withRouter","axiosInstance","actions","connect","_","bindActionCreators","Products","componentDidMount","render","columns","name","field","date","boolean","options","props","authentication","default_path","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Col, Card, CardBody, CardTitle, CardText} from 'reactstrap'\nimport ReactWillPaginateTable from '../../lib/ReactWillPaginateTable'\nimport {Link, withRouter} from 'react-router-dom'\nimport axiosInstance from '../misc/Axios'\nimport * as actions from '../../actions'\nimport { connect } from 'react-redux'\n\nimport _ from 'lodash'\n\nimport { bindActionCreators } from 'redux'\n class Products extends Component {\n    componentDidMount = () => {\n        \n    }\n    render() {\n        var columns= [{name: \"sku\"},{name: 'name'},{name: \"regular_price\"}, {name: \"sale_price\"}, {name: \"Category\", field: \"quantity\"},{name: \"date\", field: \"created_at\", date: true}, { name: \"status\", field: \"active\", boolean: true, options: [\"Active\", \"Inactive\"]}] \n        if(this.props.authentication.default_path == \"/admins/\"){\n            columns = [ ...columns, { name: \"company_name\"}]\n        }\n        return (\n            <Col md={12}>\n                <Card >\n                    <CardBody>\n                        <CardTitle>Products\n                        <ul>\n                            { this.props.authentication.default_path == \"/partners/\" ? <li><Link className='btn btn-success btn-sm' to={`${this.props.authentication.default_path}products/new`}>New Product</Link></li> : \"\"}\n                        </ul>\n                        </CardTitle>\n                        <CardText>\n                        </CardText>\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({ authentication: state.authentication })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) })\nexport default withRouter( connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Products));"]},"metadata":{},"sourceType":"module"}