{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/lib/ReactWillPaginateTable/ExcelExport.jsx\";\nimport React, { Component } from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport { FaFileExcel } from \"react-icons/fa\";\nimport Button from \"reactstrap/lib/Button\";\nimport qs from \"query-string\";\nexport default class ExcelExport extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      downloadData: []\n    };\n\n    this.componentDidMount = () => {\n      var params = qs.parse(this.props.location.search || {});\n      console.log(\"Populating download data\");\n      var new_params = this.props.location.search.replace(\"?\", \"\");\n      var search_string = params.search_string != \"undefined\" && params.search_string != undefined ? params.search_string : \"\";\n      this.props.axiosInstance.get(this.props.endpoint + `?search_string=${search_string}&all=true&${this.props.additional_params}&${new_params}`).then(response => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n\n        if (response.status == 200) {\n          console.log(\"Populating and setting state download data\");\n          this.setState({ ...this.state,\n            downloadData: response.data.data\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    return /*#__PURE__*/React.createElement(ExcelFile, {\n      element: /*#__PURE__*/React.createElement(Button, {\n        disabled: !(this.state.downloadData.length > 0),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FaFileExcel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }), \" Export Data\"),\n      className: \"btn btn-seconday\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExcelSheet, {\n      data: this.state.downloadData,\n      name: \"Data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, this.props.columns.map(d => {\n      return /*#__PURE__*/React.createElement(ExcelColumn, {\n        label: d.name,\n        value: d.field || d.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/lib/ReactWillPaginateTable/ExcelExport.jsx"],"names":["React","Component","ReactExport","FaFileExcel","Button","qs","ExcelExport","state","downloadData","componentDidMount","params","parse","props","location","search","console","log","new_params","replace","search_string","undefined","axiosInstance","get","endpoint","additional_params","then","response","status","setState","data","render","ExcelFile","ExcelSheet","ExcelColumn","length","columns","map","d","name","field"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,EAAP,MAAe,cAAf;AACA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SACjDM,KADiD,GACzC;AACNC,MAAAA,YAAY,EAAE;AADR,KADyC;;AAAA,SAIjDC,iBAJiD,GAI7B,MAAM;AACxB,UAAIC,MAAM,GAAGL,EAAE,CAACM,KAAH,CAAS,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,IAA8B,EAAvC,CAAb;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,UAAIC,UAAU,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2BI,OAA3B,CAAmC,GAAnC,EAAwC,EAAxC,CAAjB;AACA,UAAIC,aAAa,GACfT,MAAM,CAACS,aAAP,IAAwB,WAAxB,IAAuCT,MAAM,CAACS,aAAP,IAAwBC,SAA/D,GACIV,MAAM,CAACS,aADX,GAEI,EAHN;AAIA,WAAKP,KAAL,CAAWS,aAAX,CACGC,GADH,CAEI,KAAKV,KAAL,CAAWW,QAAX,GACG,kBAAiBJ,aAAc,aAAY,KAAKP,KAAL,CAAWY,iBAAkB,IAAGP,UAAW,EAH7F,EAKGQ,IALH,CAKSC,QAAD,IAAc;AAClBX,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CU,QAA3C;;AAEA,YAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1BZ,UAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;AACA,eAAKY,QAAL,CAAc,EACZ,GAAG,KAAKrB,KADI;AAEZC,YAAAA,YAAY,EAAEkB,QAAQ,CAACG,IAAT,CAAcA;AAFhB,WAAd;AAID;AACF,OAfH;AAgBD,KA5BgD;AAAA;;AA6BjDC,EAAAA,MAAM,GAAG;AACP,UAAMC,SAAS,GAAG7B,WAAW,CAAC6B,SAA9B;AACA,UAAMC,UAAU,GAAG9B,WAAW,CAAC6B,SAAZ,CAAsBC,UAAzC;AACA,UAAMC,WAAW,GAAG/B,WAAW,CAAC6B,SAAZ,CAAsBE,WAA1C;AACA,wBACE,oBAAC,SAAD;AACE,MAAA,OAAO,eACL,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,EAAE,KAAK1B,KAAL,CAAWC,YAAX,CAAwB0B,MAAxB,GAAiC,CAAnC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,iBAFJ;AAME,MAAA,SAAS,EAAC,kBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWC,YAA7B;AAA2C,MAAA,IAAI,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,KAAL,CAAWuB,OAAX,CAAmBC,GAAnB,CAAwBC,CAAD,IAAO;AAC7B,0BAAO,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAEA,CAAC,CAACC,IAAtB;AAA4B,QAAA,KAAK,EAAED,CAAC,CAACE,KAAF,IAAWF,CAAC,CAACC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFA,CADH,CARF,CADF;AAgBD;;AAjDgD","sourcesContent":["import React, { Component } from \"react\";\nimport ReactExport from \"react-export-excel\";\nimport { FaFileExcel } from \"react-icons/fa\";\nimport Button from \"reactstrap/lib/Button\";\nimport qs from \"query-string\";\nexport default class ExcelExport extends Component {\n  state = {\n    downloadData: [],\n  };\n  componentDidMount = () => {\n    var params = qs.parse(this.props.location.search || {});\n    console.log(\"Populating download data\");\n    var new_params = this.props.location.search.replace(\"?\", \"\");\n    var search_string =\n      params.search_string != \"undefined\" && params.search_string != undefined\n        ? params.search_string\n        : \"\";\n    this.props.axiosInstance\n      .get(\n        this.props.endpoint +\n          `?search_string=${search_string}&all=true&${this.props.additional_params}&${new_params}`\n      )\n      .then((response) => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n\n        if (response.status == 200) {\n          console.log(\"Populating and setting state download data\");\n          this.setState({\n            ...this.state,\n            downloadData: response.data.data,\n          });\n        }\n      });\n  };\n  render() {\n    const ExcelFile = ReactExport.ExcelFile;\n    const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\n    const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n    return (\n      <ExcelFile\n        element={\n          <Button disabled={!(this.state.downloadData.length > 0)}>\n            <FaFileExcel /> Export Data\n          </Button>\n        }\n        className=\"btn btn-seconday\"\n      >\n        <ExcelSheet data={this.state.downloadData} name=\"Data\">\n          {this.props.columns.map((d) => {\n            return <ExcelColumn label={d.name} value={d.field || d.name} />;\n          })}\n        </ExcelSheet>\n      </ExcelFile>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}