{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Signup/PartnerSignup.jsx\";\nimport React, { Component } from \"react\";\nimport AuthLayout from \"../Layout/AuthLayout\";\nimport _ from \"lodash\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport PartnerSignupForm from \"./PartnerSignupForm\";\nimport { Col } from \"reactstrap\";\nimport { renderErrorsAsList, getPatnerTypes } from \"../misc/functions\";\n\nclass ForgotPassword extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = e => {\n      this.setState({ ...this.state,\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onPhoneChange = phone => {\n      this.setState({ ...this.state,\n        phone: phone\n      });\n    };\n\n    this.handleChangeToggle = component => {\n      console.log(\"TOGGLEING\", component.target.name);\n      this.setState({ ...this.state,\n        [component.target.name]: component.target.checked\n      });\n    };\n\n    this.selected_country_id = \"selected_country_id\";\n    this.state = {\n      username: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      company_name: \"\",\n      company_country_id: \"\",\n      phone: \"\",\n      partner_type_id: 2,\n      selected_partner_type_id: \"\",\n      steaman_commerce_partner_terms: false\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        [selectedOption]: val.value,\n        [`selected_${selectedOption}`]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.componentDidMount = () => {\n      getPatnerTypes().then(response => {\n        console.log(\"THIS IS THE DATA FOR PARTNER TYPES\", response);\n        this.setState({ ...this.state,\n          partner_types: response\n        });\n      });\n    };\n\n    this.signup = e => {\n      e.preventDefault();\n      this.props.actions.partner_signup(this.state.first_name, this.state.last_name, this.state.username, this.state.email, this.state.phone, this.state.company_name, this.state.password, this.state.password_confirmation, this.state.partner_type_id, this.state.steaman_commerce_partner_terms);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AuthLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row authDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, \" \", !_.isEmpty(this.props.authentication.signupSuccessMessage) ? \"Account Succesfully Created\" : \"Create a Partner Account\"), !_.isEmpty(this.props.authentication.signupErrorMessage) ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-danger \",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \"The Following errors occured during signup\"), \" \", renderErrorsAsList(this.props.authentication.signupErrorMessage))) : \"\", !_.isEmpty(this.props.authentication.signupSuccessMessage) ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-success \",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, this.props.authentication.signupSuccessMessage, \" \"), \" \") : \"\"), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, !_.isEmpty(this.props.authentication.signupSuccessMessage) ? \"\" : /*#__PURE__*/React.createElement(PartnerSignupForm, Object.assign({\n      id: \"SignupBox\"\n    }, this.state, {\n      onPhoneChange: this.onPhoneChange,\n      handleChangeToggle: this.handleChangeToggle,\n      onChange: this.onChange,\n      signup: this.signup,\n      handleChangeSelect: this.handleChangeSelect,\n      countries: this.state.countries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Signup/PartnerSignup.jsx"],"names":["React","Component","AuthLayout","_","actions","connect","bindActionCreators","PartnerSignupForm","Col","renderErrorsAsList","getPatnerTypes","ForgotPassword","onChange","e","setState","state","target","name","value","onPhoneChange","phone","handleChangeToggle","component","console","log","checked","selected_country_id","username","password","password_confirmation","first_name","last_name","company_name","company_country_id","partner_type_id","selected_partner_type_id","steaman_commerce_partner_terms","handleChangeSelect","selectedOption","val","componentDidMount","then","response","partner_types","signup","preventDefault","props","partner_signup","email","render","isEmpty","authentication","signupSuccessMessage","signupErrorMessage","countries","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AuthLayout from \"../Layout/AuthLayout\";\nimport _ from \"lodash\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport PartnerSignupForm from \"./PartnerSignupForm\";\n\nimport { Col } from \"reactstrap\";\n\nimport { renderErrorsAsList, getPatnerTypes } from \"../misc/functions\";\nclass ForgotPassword extends Component {\n  onChange = (e) => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value,\n    });\n  };\n  onPhoneChange = (phone) => {\n    this.setState({\n      ...this.state,\n      phone: phone,\n    });\n  };\n\n  handleChangeToggle = (component) => {\n    console.log(\"TOGGLEING\", component.target.name);\n    this.setState({\n      ...this.state,\n      [component.target.name]: component.target.checked,\n    });\n  };\n  selected_country_id = \"selected_country_id\";\n  state = {\n    username: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n    first_name: \"\",\n    last_name: \"\",\n    company_name: \"\",\n    company_country_id: \"\",\n    phone: \"\",\n    partner_type_id: 2,\n    selected_partner_type_id: \"\",\n    steaman_commerce_partner_terms: false,\n  };\n  handleChangeSelect = (selectedOption, val) => {\n    var state = {\n      ...this.state,\n      [selectedOption]: val.value,\n      [`selected_${selectedOption}`]: val,\n    };\n    this.setState({ ...state });\n  };\n  componentDidMount = () => {\n    getPatnerTypes().then((response) => {\n      console.log(\"THIS IS THE DATA FOR PARTNER TYPES\", response);\n      this.setState({\n        ...this.state,\n        partner_types: response,\n      });\n    });\n  };\n  signup = (e) => {\n    e.preventDefault();\n    this.props.actions.partner_signup(\n      this.state.first_name,\n      this.state.last_name,\n      this.state.username,\n      this.state.email,\n      this.state.phone,\n      this.state.company_name,\n      this.state.password,\n      this.state.password_confirmation,\n      this.state.partner_type_id,\n      this.state.steaman_commerce_partner_terms\n    );\n  };\n  render() {\n    return (\n      <AuthLayout>\n        <div className=\"row authDiv\">\n          <div className=\"col-md-12 header\">\n            <h2 className=\"col-md-12\">\n              {\" \"}\n              {!_.isEmpty(this.props.authentication.signupSuccessMessage)\n                ? \"Account Succesfully Created\"\n                : \"Create a Partner Account\"}\n            </h2>\n\n            {!_.isEmpty(this.props.authentication.signupErrorMessage) ? (\n              <Col md={12}>\n                <div class=\"alert alert-danger \" role=\"alert\">\n                  {\" \"}\n                  <p>The Following errors occured during signup</p>{\" \"}\n                  {renderErrorsAsList(\n                    this.props.authentication.signupErrorMessage\n                  )}\n                </div>\n              </Col>\n            ) : (\n              \"\"\n            )}\n            {!_.isEmpty(this.props.authentication.signupSuccessMessage) ? (\n              <div class=\"alert alert-success \" role=\"alert\">\n                {\" \"}\n                <p>{this.props.authentication.signupSuccessMessage} </p>{\" \"}\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n          <Col md={12}>\n            {!_.isEmpty(this.props.authentication.signupSuccessMessage) ? (\n              \"\"\n            ) : (\n              <PartnerSignupForm\n                id=\"SignupBox\"\n                {...this.state}\n                onPhoneChange={this.onPhoneChange}\n                handleChangeToggle={this.handleChangeToggle}\n                onChange={this.onChange}\n                signup={this.signup}\n                handleChangeSelect={this.handleChangeSelect}\n                countries={this.state.countries}\n              />\n            )}\n          </Col>\n        </div>\n      </AuthLayout>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\n"]},"metadata":{},"sourceType":"module"}