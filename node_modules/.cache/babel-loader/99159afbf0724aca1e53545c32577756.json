{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Reports/AccountStatement.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport ReactWillPaginateTable from \"../../lib/ReactWillPaginateTable\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axiosInstance from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { BarChart, ColumnChart, LineChart, PieChart } from \"react-chartkick\";\nimport \"chartkick/chart.js\";\nimport _ from \"lodash\";\nimport { bindActionCreators } from \"redux\";\nimport Table from \"reactstrap/lib/Table\";\nimport NumberField from \"../Controls/NumberField\";\nimport moment from \"moment\";\nimport \"react-datetime/css/react-datetime.css\";\nimport Button from \"reactstrap/lib/Button\";\nimport LoadingWidget from \"../LoadingWidget/LoadingWidget\";\nimport ReportFilterWidget from \"../ReportFilterWidget/ReportFilterWidget\";\n\nclass AccountStatement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        balance: 0.0,\n        transactions: []\n      },\n      loading: false,\n      start_date: new moment(),\n      end_date: new moment(),\n      detailed: false\n    };\n\n    this.handleChangeToggle = component => {\n      this.setState({ ...this.state,\n        [component.target.id]: component.target.checked\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.setState({ ...this.state,\n        loading: true\n      });\n      axiosInstance.get(this.props.authentication.default_path + `reports/account_statement?start_date=${this.state.start_date.format(\"YYYY-MM-DD\")}&end_date=${this.state.end_date.format(\"YYYY-MM-DD\")}&detailed=${this.state.detailed ? \"true\" : \"false\"}`).then(response => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n\n        if (response.status == 200) {\n          this.setState({ ...this.state,\n            data: response.data.data,\n            loading: false\n          });\n        } else {\n          this.setState({ ...this.state,\n            loading: false\n          });\n        }\n      });\n    };\n\n    this.run = e => {\n      e.preventDefault();\n      this.setState({ ...this.state,\n        loading: true\n      });\n      axiosInstance.get(this.props.authentication.default_path + `reports/account_statement?start_date=${this.state.start_date.format(\"YYYY-MM-DD\")}&end_date=${this.state.end_date.format(\"YYYY-MM-DD\")}&detailed=${this.state.detailed ? \"true\" : \"false\"}`).then(response => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n\n        if (response.status == 200) {\n          this.setState({ ...this.state,\n            data: response.data.data,\n            loading: false\n          });\n        }\n      }).catch((error, errordata) => {\n        // toast.error(\"Confirmation Resend Failed\")\n        this.setState({ ...this.state,\n          loading: false\n        });\n      });\n    };\n\n    this.onDateChanged = (attr_name, momentdate) => {\n      console.log(\"THIS IS DATE\", momentdate);\n      console.log(\"THIS IS ATTR NAME\", attr_name);\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          [attr_name]: momentdate\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state[attr_name]);\n        var date = new moment(this.state[attr_name]);\n        var new_state = { ...this.state,\n          [attr_name]: date\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n  }\n\n  render() {\n    var balance = parseFloat(this.state.data.balance);\n    var sales = parseFloat(this.state.data.sales);\n    var commissions = parseFloat(this.state.data.commissions);\n    var payouts = parseFloat(this.state.data.payouts);\n    var closing_balance = balance + sales - commissions - payouts;\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \"Account Statement\"), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReportFilterWidget, {\n      run: this.run,\n      onDateChanged: this.onDateChanged,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n      detailed: this.state.detailed,\n      handleChangeToggle: this.handleChangeToggle,\n      showDetailed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, \"\\xA0\"), this.state.loading ? /*#__PURE__*/React.createElement(Col, {\n      className: \"centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(LoadingWidget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    })) : this.state.detailed ? /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 23\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 23\n      }\n    }, \"Reference\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"41%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }, \"Narration\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"7%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, \"DR\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"7%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 23\n      }\n    }, \"CR\"), /*#__PURE__*/React.createElement(\"th\", {\n      width: \"10%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, \"Balance\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 25\n      }\n    }, this.state.start_date.format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, \"Bal b/f\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, \"Opening Balance\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.balance > 0 ? this.state.balance : 0.0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.balance < 0 ? this.state.balance : 0.0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.data.balance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 27\n      }\n    }))), this.state.data.transactions.map(item => {\n      balance += parseFloat(item.amount);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 29\n        }\n      }, item.date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 29\n        }\n      }, item.reference), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }\n      }, item.narration), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NumberField, {\n        value: item.amount > 0 ? item.amount : 0.0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NumberField, {\n        value: item.amount < 0 ? item.amount : 0.0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NumberField, {\n        value: balance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 31\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, this.state.end_date.format(\"YYYY-MM-DD\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, \"Bal c/f\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }, \"Closing Balance\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: balance > 0 ? balance : 0.0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: balance < 0 ? balance || 0.0 : 0.0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: balance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 27\n      }\n    }))), \" \"))) : /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, \"Opening Balance\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.data.balance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 23\n      }\n    }, \"Sales\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.data.sales,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, \"Less Commissions\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 23\n      }\n    }, \"(\", /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.data.commissions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 26\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 23\n      }\n    }, \"Net Sales\"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.data.sales,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 23\n      }\n    }, \"Less Payouts \"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.data.payouts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }, \"Less Payouts \"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 23\n      }\n    }, \"(\", /*#__PURE__*/React.createElement(NumberField, {\n      value: this.state.data.payouts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 26\n      }\n    }), \")\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 23\n      }\n    }, \"Closing Balance \"), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(NumberField, {\n      value: closing_balance,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    })))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AccountStatement));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Reports/AccountStatement.jsx"],"names":["React","Component","Col","Card","CardBody","CardTitle","CardText","ReactWillPaginateTable","Link","withRouter","axiosInstance","actions","connect","BarChart","ColumnChart","LineChart","PieChart","_","bindActionCreators","Table","NumberField","moment","Button","LoadingWidget","ReportFilterWidget","AccountStatement","state","data","balance","transactions","loading","start_date","end_date","detailed","handleChangeToggle","component","setState","target","id","checked","componentDidMount","get","props","authentication","default_path","format","then","response","console","log","status","run","e","preventDefault","catch","error","errordata","onDateChanged","attr_name","momentdate","new_date","constructor","name","new_state","date","render","parseFloat","sales","commissions","payouts","closing_balance","map","item","amount","reference","narration","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport ReactWillPaginateTable from \"../../lib/ReactWillPaginateTable\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axiosInstance from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { BarChart, ColumnChart, LineChart, PieChart } from \"react-chartkick\";\nimport \"chartkick/chart.js\";\n\nimport _ from \"lodash\";\n\nimport { bindActionCreators } from \"redux\";\nimport Table from \"reactstrap/lib/Table\";\nimport NumberField from \"../Controls/NumberField\";\nimport moment from \"moment\";\n\nimport \"react-datetime/css/react-datetime.css\";\nimport Button from \"reactstrap/lib/Button\";\nimport LoadingWidget from \"../LoadingWidget/LoadingWidget\";\n\nimport ReportFilterWidget from \"../ReportFilterWidget/ReportFilterWidget\";\nclass AccountStatement extends Component {\n  state = {\n    data: {\n      balance: 0.0,\n      transactions: [],\n    },\n    loading: false,\n    start_date: new moment(),\n    end_date: new moment(),\n    detailed: false,\n  };\n  handleChangeToggle = (component) => {\n    this.setState({\n      ...this.state,\n\n      [component.target.id]: component.target.checked,\n    });\n  };\n  componentDidMount = () => {\n    this.setState({ ...this.state, loading: true });\n    axiosInstance\n      .get(\n        this.props.authentication.default_path +\n          `reports/account_statement?start_date=${this.state.start_date.format(\n            \"YYYY-MM-DD\"\n          )}&end_date=${this.state.end_date.format(\"YYYY-MM-DD\")}&detailed=${\n            this.state.detailed ? \"true\" : \"false\"\n          }`\n      )\n      .then((response) => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n        if (response.status == 200) {\n          this.setState({\n            ...this.state,\n            data: response.data.data,\n            loading: false,\n          });\n        } else {\n          this.setState({\n            ...this.state,\n            loading: false,\n          });\n        }\n      });\n  };\n  run = (e) => {\n    e.preventDefault();\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    axiosInstance\n      .get(\n        this.props.authentication.default_path +\n          `reports/account_statement?start_date=${this.state.start_date.format(\n            \"YYYY-MM-DD\"\n          )}&end_date=${this.state.end_date.format(\"YYYY-MM-DD\")}&detailed=${\n            this.state.detailed ? \"true\" : \"false\"\n          }`\n      )\n      .then((response) => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n        if (response.status == 200) {\n          this.setState({\n            ...this.state,\n            data: response.data.data,\n            loading: false,\n          });\n        }\n      })\n      .catch((error, errordata) => {\n        // toast.error(\"Confirmation Resend Failed\")\n        this.setState({\n          ...this.state,\n          loading: false,\n        });\n      });\n  };\n  onDateChanged = (attr_name, momentdate) => {\n    console.log(\"THIS IS DATE\", momentdate);\n    console.log(\"THIS IS ATTR NAME\", attr_name);\n    var new_date = new moment();\n    if (momentdate.constructor.name == new_date.constructor.name) {\n      var new_state = {\n        ...this.state,\n        [attr_name]: momentdate,\n      };\n      this.setState({ ...new_state });\n    } else {\n      console.log(this.state[attr_name]);\n      var date = new moment(this.state[attr_name]);\n      var new_state = {\n        ...this.state,\n        [attr_name]: date,\n      };\n      this.setState({ ...new_state });\n    }\n  };\n\n  render() {\n    var balance = parseFloat(this.state.data.balance);\n    var sales = parseFloat(this.state.data.sales);\n    var commissions = parseFloat(this.state.data.commissions);\n    var payouts = parseFloat(this.state.data.payouts);\n    var closing_balance = balance + sales - commissions - payouts;\n\n    return (\n      <Col md={12}>\n        <Card>\n          <CardBody>\n            <CardTitle>Account Statement</CardTitle>\n            <CardText>\n              <ReportFilterWidget\n                run={this.run}\n                onDateChanged={this.onDateChanged}\n                start_date={this.state.start_date}\n                end_date={this.state.end_date}\n                detailed={this.state.detailed}\n                handleChangeToggle={this.handleChangeToggle}\n                showDetailed={true}\n              />\n              <p>&nbsp;</p>\n              {this.state.loading ? (\n                <Col className=\"centered\">\n                  <LoadingWidget />\n                </Col>\n              ) : this.state.detailed ? (\n                <Table striped={true} bordered={true}>\n                  <thead>\n                    <tr>\n                      <th width=\"10%\">Date</th>\n                      <th width=\"10%\">Reference</th>\n                      <th width=\"41%\">Narration</th>\n                      <th width=\"7%\">DR</th>\n                      <th width=\"7%\">CR</th>\n                      <th width=\"10%\">Balance</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <>\n                      {\" \"}\n                      <tr>\n                        <td>{this.state.start_date.format(\"YYYY-MM-DD\")}</td>\n                        <td>Bal b/f</td>\n                        <td>Opening Balance</td>\n\n                        <td className={\"right\"}>\n                          <NumberField\n                            value={\n                              this.state.balance > 0 ? this.state.balance : 0.0\n                            }\n                          />\n                        </td>\n                        <td className={\"right\"}>\n                          <NumberField\n                            value={\n                              this.state.balance < 0 ? this.state.balance : 0.0\n                            }\n                          />\n                        </td>\n                        <td className={\"right\"}>\n                          <NumberField value={this.state.data.balance} />\n                        </td>\n                      </tr>\n                      {this.state.data.transactions.map((item) => {\n                        balance += parseFloat(item.amount);\n                        return (\n                          <tr>\n                            <td>{item.date}</td>\n                            <td>{item.reference}</td>\n                            <td>{item.narration}</td>\n                            <td className={\"right\"}>\n                              <NumberField\n                                value={item.amount > 0 ? item.amount : 0.0}\n                              />\n                            </td>\n                            <td className={\"right\"}>\n                              <NumberField\n                                value={item.amount < 0 ? item.amount : 0.0}\n                              />\n                            </td>\n                            <td className={\"right\"}>\n                              <NumberField value={balance} />\n                            </td>\n                          </tr>\n                        );\n                      })}\n                      <tr>\n                        <td>{this.state.end_date.format(\"YYYY-MM-DD\")}</td>\n                        <td>Bal c/f</td>\n                        <td>Closing Balance</td>\n                        <td className={\"right\"}>\n                          <NumberField value={balance > 0 ? balance : 0.0} />\n                        </td>\n                        <td className={\"right\"}>\n                          <NumberField\n                            value={balance < 0 ? balance || 0.0 : 0.0}\n                          />\n                        </td>\n                        <td className={\"right\"}>\n                          <NumberField value={balance} />\n                        </td>\n                      </tr>{\" \"}\n                    </>\n                  </tbody>\n                </Table>\n              ) : (\n                <Table striped={true} bordered={false}>\n                  <thead></thead>\n                  <tbody>\n                    <tr>\n                      <td>Opening Balance</td>\n                      <td className={\"right\"}>\n                        <NumberField value={this.state.data.balance} />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Sales</td>\n                      <td className={\"right\"}>\n                        <NumberField value={this.state.data.sales} />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Less Commissions</td>\n                      <td className={\"right\"}>\n                        (<NumberField value={this.state.data.commissions} />)\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Net Sales</td>\n                      <td className={\"right\"}>\n                        <NumberField value={this.state.data.sales} />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Less Payouts </td>\n                      <td className={\"right\"}>\n                        <NumberField value={this.state.data.payouts} />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Less Payouts </td>\n                      <td className={\"right\"}>\n                        (<NumberField value={this.state.data.payouts} />)\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Closing Balance </td>\n                      <td className={\"right\"}>\n                        <NumberField value={closing_balance} />\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              )}\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(AccountStatement)\n);\n"]},"metadata":{},"sourceType":"module"}