{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Signup/UserSignup.jsx\";\nimport React, { Component } from 'react';\nimport AuthLayout from '../Layout/AuthLayout';\nimport _ from 'lodash';\nimport * as actions from '../../actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport SignupForm from './SignupForm';\nimport { renderErrorsAsList, getPatnerTypes } from '../misc/functions';\n\nclass UserSignup extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = e => {\n      this.setState({ ...this.state,\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.selected_country_id = \"selected_country_id\";\n    this.state = {\n      username: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      company_name: \"\",\n      company_country_id: '',\n      phone: \"\",\n      selected_company_country_id: \"\"\n    };\n\n    this.handleChangeSelect = (selectedOption, val) => {\n      var state = { ...this.state,\n        [selectedOption]: val.value,\n        [`selected_${selectedOption}`]: val\n      };\n      this.setState({ ...state\n      });\n    };\n\n    this.onPhoneChange = phone => {\n      this.setState({ ...this.state,\n        phone: phone\n      });\n    };\n\n    this.componentDidMount = () => {\n      getPatnerTypes().then(response => {\n        console.log(\"THIS IS THE DATA FOR COUNTRIES\", response);\n        this.setState({ ...this.state,\n          account_types: response\n        });\n      });\n    };\n\n    this.signup = e => {\n      e.preventDefault();\n      this.props.actions.signup(this.state.first_name, this.state.last_name, this.state.phone, this.state.email, this.state.password, this.state.password_confirmation, this.state.account_type_id);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(AuthLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-8 col-sm-8 authDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 55\n      }\n    }, \" \", !_.isEmpty(this.props.authentication.signupSuccessMessage) ? \"Account Succesfully Created\" : \"Create a User Account\"), !_.isEmpty(this.props.authentication.signupErrorMessage) ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-danger \",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 76\n      }\n    }, \"The Following errors occured during signup\"), \" \", renderErrorsAsList(this.props.authentication.signupErrorMessage)) : \"\", !_.isEmpty(this.props.authentication.signupSuccessMessage) ? /*#__PURE__*/React.createElement(\"div\", {\n      class: \"alert alert-success \",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 77\n      }\n    }, this.props.authentication.signupSuccessMessage, \" \"), \" \") : \"\"), !_.isEmpty(this.props.authentication.signupSuccessMessage) ? \"\" : /*#__PURE__*/React.createElement(SignupForm, Object.assign({\n      id: \"SignupBox\"\n    }, this.state, {\n      onChange: this.onChange,\n      signup: this.signup,\n      handleChangeSelect: this.handleChangeSelect,\n      onPhoneChange: this.onPhoneChange,\n      account_types: this.state.account_types,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 93\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserSignup);","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Signup/UserSignup.jsx"],"names":["React","Component","AuthLayout","_","actions","connect","bindActionCreators","SignupForm","renderErrorsAsList","getPatnerTypes","UserSignup","onChange","e","setState","state","target","name","value","selected_country_id","username","password","password_confirmation","first_name","last_name","company_name","company_country_id","phone","selected_company_country_id","handleChangeSelect","selectedOption","val","onPhoneChange","componentDidMount","then","response","console","log","account_types","signup","preventDefault","props","email","account_type_id","render","isEmpty","authentication","signupSuccessMessage","signupErrorMessage","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AuthLayout from '../Layout/AuthLayout'\nimport _ from 'lodash';\nimport * as actions from '../../actions'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport SignupForm from './SignupForm'\n\n\nimport {renderErrorsAsList, getPatnerTypes} from '../misc/functions'\nclass UserSignup extends Component {\n\n    onChange = e => {\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n    }\n    selected_country_id = \"selected_country_id\";\n    state = {\n        username: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        company_name: \"\",\n        company_country_id: '', \n        phone: \"\",\n        selected_company_country_id: \"\"\n    }\n    handleChangeSelect = (selectedOption, val) => {\n        var state = {\n            ...this.state,\n            [selectedOption]: val.value,\n            [`selected_${selectedOption}`]: val\n        }\n        this.setState({ ...state })\n    }\n    onPhoneChange = phone => {\n        this.setState({\n            ...this.state,\n            phone: phone\n        })\n    }\n    componentDidMount = () => {\n        getPatnerTypes().then(response => {\n            console.log(\"THIS IS THE DATA FOR COUNTRIES\", response)\n            this.setState({\n                ...this.state,\n                account_types: response\n            })\n        })\n    }\n    signup = (e) => {\n        e.preventDefault();\n        this.props.actions.signup(this.state.first_name, this.state.last_name, this.state.phone, this.state.email,\n            this.state.password, this.state.password_confirmation, this.state.account_type_id);\n    }\n    render() {\n        return (\n            <AuthLayout>\n                <div className='col-md-8 col-sm-8 authDiv'>\n                    <div className='col-md-12 header'><h2> {!_.isEmpty(this.props.authentication.signupSuccessMessage) ? \"Account Succesfully Created\" :\"Create a User Account\"}</h2>\n                        {!_.isEmpty(this.props.authentication.signupErrorMessage) ?\n                            <div class=\"alert alert-danger \" role=\"alert\"> <p>The Following errors occured during signup</p> {renderErrorsAsList(this.props.authentication.signupErrorMessage)}</div> : \"\"}\n                        {!_.isEmpty(this.props.authentication.signupSuccessMessage) ?\n                            <div class=\"alert alert-success \" role=\"alert\"> <p>{this.props.authentication.signupSuccessMessage} </p> </div> : \"\"}\n                     </div>\n                        {!_.isEmpty(this.props.authentication.signupSuccessMessage) ?  \"\" : <SignupForm id='SignupBox' {...this.state} onChange={this.onChange} signup={this.signup} handleChangeSelect={this.handleChangeSelect} onPhoneChange= {this.onPhoneChange} account_types={this.state.account_types} /> }\n                </div>\n            </AuthLayout>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({ authentication: state.authentication })\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) })\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UserSignup);\n"]},"metadata":{},"sourceType":"module"}