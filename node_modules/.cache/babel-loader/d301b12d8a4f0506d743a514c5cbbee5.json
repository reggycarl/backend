{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/ForgotPassword/ForgotPasswordForm.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap';\nimport axios from '../../utils/AxiosInstance';\nimport { Link } from 'react-router-dom';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\nexport default class LoginForm extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      id: this.props.id,\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"username\",\n      name: \"email\",\n      value: this.props.email,\n      onChange: this.props.onChange,\n      id: \"email\",\n      placeholder: \"Your Email Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"success\",\n      onClick: this.props.confirm == true ? this.props.confirmEmail : this.props.resetPassword,\n      className: \"form-control\",\n      disabled: this.props.confirming || this.props.resetting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }, \" \", this.props.confirming || this.props.resetting ? /*#__PURE__*/React.createElement(ScaleLoader, {\n      size: 5,\n      height: 15,\n      color: \"#ffffff\",\n      loading: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 276\n      }\n    }) : this.props.confirm ? \"Confirm Email\" : \"Reset Password\")), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"btn btn-secondary form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, \"Cancel\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/sign_up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 51\n      }\n    }, \"Sign up\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/ForgotPassword/ForgotPasswordForm.jsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","FormText","Row","Col","axios","Link","ScaleLoader","LoginForm","render","props","id","email","onChange","confirm","confirmEmail","resetPassword","confirming","resetting"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, FormGroup, Label, Input, FormText, Row, Col } from 'reactstrap';\nimport axios from '../../utils/AxiosInstance'\nimport { Link } from 'react-router-dom'\nimport ScaleLoader from 'react-spinners/ScaleLoader'\nexport default class LoginForm extends Component {\n    \n\n    \n\n    render() {\n\n        return (\n            <Form id={this.props.id} className='col-md-12'>\n                <FormGroup>\n                    <Label for=\"exampleEmail\">Email</Label>\n                    <Input type=\"username\" name=\"email\" value={this.props.email} onChange={this.props.onChange} id=\"email\" placeholder=\"Your Email Address\" />\n                </FormGroup>\n\n                <Row>\n                    <Col md={4}>\n                        <Button color={\"success\"} onClick={this.props.confirm == true ? this.props.confirmEmail : this.props.resetPassword} className={\"form-control\"} disabled={this.props.confirming || this.props.resetting}> {this.props.confirming || this.props.resetting ?  <ScaleLoader size={5} height={15} color={\"#ffffff\"} loading={true}/> : (this.props.confirm ? \"Confirm Email\" :\"Reset Password\" ) }</Button>\n                    </Col>\n                    <Col md={4}>\n                        <Link to='/' className=\"btn btn-secondary form-control\"  >Cancel</Link>\n                    </Col>\n\n                </Row>\n                <Row>\n                    <Col md={12} className=\"signup\">\n                        <p>Don't have an account? <Link to='/sign_up'>Sign up</Link></p>\n                    </Col>\n\n                </Row>\n            </Form>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}