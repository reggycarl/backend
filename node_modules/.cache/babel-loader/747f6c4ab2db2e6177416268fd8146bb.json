{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Reports/PayoutsPerVendor.jsx\";\nimport React, { Component } from \"react\";\nimport { Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport ReactWillPaginateTable from \"../../lib/ReactWillPaginateTable\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axiosInstance from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { BarChart, ColumnChart, PieChart } from \"react-chartkick\";\nimport \"chartkick/chart.js\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { bindActionCreators } from \"redux\";\nimport Table from \"reactstrap/lib/Table\";\nimport NumberField from \"../Controls/NumberField\";\nimport ReportFilterWidget from \"../ReportFilterWidget/ReportFilterWidget\";\n\nclass PayoutsPerVendor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {},\n      start_date: new moment(),\n      end_date: new moment()\n    };\n\n    this.componentDidMount = () => {\n      this.populate();\n    };\n\n    this.run = e => {\n      e.preventDefault();\n      this.populate();\n    };\n\n    this.populate = () => {\n      axiosInstance.get(`/admins/reports/payouts_per_vendor?start_date=${this.state.start_date.format(\"YYYY-MM-DD\")}&end_date=${this.state.end_date.format(\"YYYY-MM-DD\")}`).then(response => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n\n        if (response.status == 200) {\n          this.setState({ ...this.state,\n            data: response.data.data\n          });\n        }\n      });\n    };\n\n    this.onDateChanged = (attr_name, momentdate) => {\n      console.log(\"THIS IS DATE\", momentdate);\n      console.log(\"THIS IS ATTR NAME\", attr_name);\n      var new_date = new moment();\n\n      if (momentdate.constructor.name == new_date.constructor.name) {\n        var new_state = { ...this.state,\n          [attr_name]: momentdate\n        };\n        this.setState({ ...new_state\n        });\n      } else {\n        console.log(this.state[attr_name]);\n        var date = new moment(this.state[attr_name]);\n        var new_state = { ...this.state,\n          [attr_name]: date\n        };\n        this.setState({ ...new_state\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Payouts Per Vendor\"), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReportFilterWidget, {\n      run: this.run,\n      onDateChanged: this.onDateChanged,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n      detailed: this.state.detailed,\n      handleChangeToggle: this.handleChangeToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ColumnChart, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Vendor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, Object.entries(this.state.data).map(item => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }\n      }, item[0]), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, item[1]));\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  authentication: state.authentication\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(actions, dispatch)\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PayoutsPerVendor));","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Reports/PayoutsPerVendor.jsx"],"names":["React","Component","Col","Card","CardBody","CardTitle","CardText","ReactWillPaginateTable","Link","withRouter","axiosInstance","actions","connect","BarChart","ColumnChart","PieChart","moment","_","bindActionCreators","Table","NumberField","ReportFilterWidget","PayoutsPerVendor","state","data","start_date","end_date","componentDidMount","populate","run","e","preventDefault","get","format","then","response","console","log","status","setState","onDateChanged","attr_name","momentdate","new_date","constructor","name","new_state","date","render","detailed","handleChangeToggle","Object","entries","map","item","mapStateToProps","authentication","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Card, CardBody, CardTitle, CardText } from \"reactstrap\";\nimport ReactWillPaginateTable from \"../../lib/ReactWillPaginateTable\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport axiosInstance from \"../misc/Axios\";\nimport * as actions from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { BarChart, ColumnChart, PieChart } from \"react-chartkick\";\nimport \"chartkick/chart.js\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\nimport { bindActionCreators } from \"redux\";\nimport Table from \"reactstrap/lib/Table\";\nimport NumberField from \"../Controls/NumberField\";\nimport ReportFilterWidget from \"../ReportFilterWidget/ReportFilterWidget\";\nclass PayoutsPerVendor extends Component {\n  state = {\n    data: {},\n    start_date: new moment(),\n    end_date: new moment(),\n  };\n\n  componentDidMount = () => {\n    this.populate();\n  };\n  run = (e) => {\n    e.preventDefault();\n    this.populate();\n  };\n  populate = () => {\n    axiosInstance\n      .get(\n        `/admins/reports/payouts_per_vendor?start_date=${this.state.start_date.format(\n          \"YYYY-MM-DD\"\n        )}&end_date=${this.state.end_date.format(\"YYYY-MM-DD\")}`\n      )\n      .then((response) => {\n        console.log(\"THIS IS RESPONSE FON SERVER\", response);\n        if (response.status == 200) {\n          this.setState({\n            ...this.state,\n            data: response.data.data,\n          });\n        }\n      });\n  };\n  onDateChanged = (attr_name, momentdate) => {\n    console.log(\"THIS IS DATE\", momentdate);\n    console.log(\"THIS IS ATTR NAME\", attr_name);\n    var new_date = new moment();\n    if (momentdate.constructor.name == new_date.constructor.name) {\n      var new_state = {\n        ...this.state,\n        [attr_name]: momentdate,\n      };\n      this.setState({ ...new_state });\n    } else {\n      console.log(this.state[attr_name]);\n      var date = new moment(this.state[attr_name]);\n      var new_state = {\n        ...this.state,\n        [attr_name]: date,\n      };\n      this.setState({ ...new_state });\n    }\n  };\n  render() {\n    return (\n      <Col md={12}>\n        <Card>\n          <CardBody>\n            <CardTitle>Payouts Per Vendor</CardTitle>\n            <CardText>\n              <ReportFilterWidget\n                run={this.run}\n                onDateChanged={this.onDateChanged}\n                start_date={this.state.start_date}\n                end_date={this.state.end_date}\n                detailed={this.state.detailed}\n                handleChangeToggle={this.handleChangeToggle}\n              />\n              <ColumnChart data={this.state.data} />\n              <p>&nbsp;</p>\n              <Table striped={true} bordered={true}>\n                <thead>\n                  <tr>\n                    <th>Vendor</th>\n                    <th>Amount</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(this.state.data).map((item) => {\n                    return (\n                      <tr>\n                        <td>{item[0]}</td>\n                        <td>{item[1]}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </Table>\n            </CardText>\n          </CardBody>\n        </Card>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ authentication: state.authentication });\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(actions, dispatch),\n});\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(PayoutsPerVendor)\n);\n"]},"metadata":{},"sourceType":"module"}