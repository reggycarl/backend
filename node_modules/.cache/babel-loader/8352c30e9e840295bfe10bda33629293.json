{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/steaman-backend/src/components/Dashboard/PartnerDashboard.jsx\";\nimport React, { Component } from \"react\";\nimport \"./Dashboard.scss\";\nimport { Row, Col, Card, CardTitle, CardText } from \"reactstrap\";\nimport NoDataYet from \"../Layout/NoDataYet\";\nimport { Fragment } from \"react\";\nimport axiosInstance from \"../misc/Axios\";\nimport NumberFormat from \"react-number-format\";\nimport NumberField from \"../Controls/NumberField\";\nimport { AreaChart, LineChart } from \"react-chartkick\";\nimport \"chartkick/chart.js\";\nexport default class Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      sales_trend: [],\n      orders_trend: [],\n      pending_orders: 0,\n      products_count: 0,\n      account_balance: 0,\n      total_sales: 0,\n      loading: false\n    };\n\n    this.componentDidMount = () => {\n      this.setState({ ...this.state,\n        loading: true\n      });\n      setTimeout(() => {\n        console.log(\"CALLING>>>>\");\n        axiosInstance.get(\"/partners/dashboard/orders_pending\").then(response => {\n          this.setState({\n            pending_orders: response.data.data\n          });\n        });\n        axiosInstance.get(\"/partners/dashboard/products_count\").then(response => {\n          this.setState({\n            products_count: response.data.data\n          });\n        });\n        axiosInstance.get(\"/partners/dashboard/total_sales\").then(response => {\n          this.setState({\n            total_sales: response.data.data\n          });\n        });\n        axiosInstance.get(\"/partners/dashboard/sales_trend\").then(response => {\n          this.setState({\n            sales_trend: response.data.data\n          });\n        });\n        axiosInstance.get(\"/partners/dashboard/orders_trend\").then(response => {\n          this.setState({\n            orders_trend: response.data.data\n          });\n        });\n        axiosInstance.get(\"/partners/dashboard/account_balance\").then(response => {\n          this.setState({\n            account_balance: response.data.data\n          });\n        });\n      }, 1000);\n    };\n  }\n\n  render() {\n    var dashInfo = [{\n      name: \"Products\",\n      value: this.state.products_count\n    }, {\n      name: \"Orders Pending\",\n      value: parseInt(this.state.pending_orders)\n    }, {\n      name: \"Total Sales\",\n      value: this.state.total_sales\n    }, {\n      name: \"Account Balance (GHS) \",\n      value: `GHS ${this.state.account_balance}`,\n      type: \"number\"\n    }];\n    return /*#__PURE__*/React.createElement(Col, {\n      className: \"dashboardContent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, dashInfo.map((info, i) => {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"infoBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        className: \"h-100 value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, info.type == \"number\" ? /*#__PURE__*/React.createElement(NumberField, {\n        value: info.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }\n      }) : info.value)), /*#__PURE__*/React.createElement(Col, {\n        className: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }\n      }, info.name)));\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Sales in the Last 7 Days\"), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AreaChart, {\n      data: this.state.sales_trend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      body: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Orders in the Last 7 Days\"), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(AreaChart, {\n      data: this.state.orders_trend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mac/Desktop/steaman-backend/src/components/Dashboard/PartnerDashboard.jsx"],"names":["React","Component","Row","Col","Card","CardTitle","CardText","NoDataYet","Fragment","axiosInstance","NumberFormat","NumberField","AreaChart","LineChart","Dashboard","state","sales_trend","orders_trend","pending_orders","products_count","account_balance","total_sales","loading","componentDidMount","setState","setTimeout","console","log","get","then","response","data","render","dashInfo","name","value","parseInt","type","map","info","i"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Dashboard.scss\";\nimport { Row, Col, Card, CardTitle, CardText } from \"reactstrap\";\nimport NoDataYet from \"../Layout/NoDataYet\";\nimport { Fragment } from \"react\";\nimport axiosInstance from \"../misc/Axios\";\nimport NumberFormat from \"react-number-format\";\nimport NumberField from \"../Controls/NumberField\";\nimport { AreaChart, LineChart } from \"react-chartkick\";\nimport \"chartkick/chart.js\";\nexport default class Dashboard extends Component {\n  state = {\n    sales_trend: [],\n    orders_trend: [],\n    pending_orders: 0,\n    products_count: 0,\n    account_balance: 0,\n    total_sales: 0,\n    loading: false,\n  };\n  componentDidMount = () => {\n    this.setState({\n      ...this.state,\n      loading: true,\n    });\n    setTimeout(() => {\n      console.log(\"CALLING>>>>\");\n\n      axiosInstance\n        .get(\"/partners/dashboard/orders_pending\")\n        .then((response) => {\n          this.setState({\n            pending_orders: response.data.data,\n          });\n        });\n      axiosInstance\n        .get(\"/partners/dashboard/products_count\")\n        .then((response) => {\n          this.setState({\n            products_count: response.data.data,\n          });\n        });\n      axiosInstance.get(\"/partners/dashboard/total_sales\").then((response) => {\n        this.setState({\n          total_sales: response.data.data,\n        });\n      });\n      axiosInstance.get(\"/partners/dashboard/sales_trend\").then((response) => {\n        this.setState({\n          sales_trend: response.data.data,\n        });\n      });\n      axiosInstance.get(\"/partners/dashboard/orders_trend\").then((response) => {\n        this.setState({\n          orders_trend: response.data.data,\n        });\n      });\n      axiosInstance\n        .get(\"/partners/dashboard/account_balance\")\n        .then((response) => {\n          this.setState({\n            account_balance: response.data.data,\n          });\n        });\n    }, 1000);\n  };\n  render() {\n    var dashInfo = [\n      { name: \"Products\", value: this.state.products_count },\n      { name: \"Orders Pending\", value: parseInt(this.state.pending_orders) },\n      { name: \"Total Sales\", value: this.state.total_sales },\n      {\n        name: \"Account Balance (GHS) \",\n        value: `GHS ${this.state.account_balance}`,\n        type: \"number\",\n      },\n    ];\n    return (\n      <Col className=\"dashboardContent\">\n        <Row>\n          {dashInfo.map((info, i) => {\n            return (\n              <Col md={3} className=\"infoBox\">\n                <Col className=\"inner\">\n                  <Row>\n                    <Col className=\"h-100 value\">\n                      {info.type == \"number\" ? (\n                        <NumberField value={info.value} />\n                      ) : (\n                        info.value\n                      )}\n                    </Col>\n                  </Row>\n                  <Col className=\"bottom\">{info.name}</Col>\n                </Col>\n              </Col>\n            );\n          })}\n        </Row>\n        <Row>\n          <Col md={6}>\n            <Card body>\n              <CardTitle>Sales in the Last 7 Days</CardTitle>\n              <CardText>\n                <AreaChart data={this.state.sales_trend} />\n              </CardText>\n            </Card>\n          </Col>\n          <Col md={6}>\n            <Card body>\n              <CardTitle>Orders in the Last 7 Days</CardTitle>\n              <CardText>\n                <AreaChart data={this.state.orders_trend} />\n              </CardText>\n            </Card>\n          </Col>\n          {/* <Col md={3} className=\"infoBox\">\n            <Card body className=\"card50 yellow \">\n              <CardText className=\"inner\">\n                <h2 className=\"right\">\n                  <p>&nbsp;</p>\n                  <NumberField value={this.state.total_sales} />\n                </h2>\n                <Row>\n                  <Col className=\"bottom\">Total Sales</Col>\n                </Row>\n              </CardText>\n            </Card>\n          </Col> */}\n          {/* <Col md={4}>\n                        <Card body>\n                            <CardTitle>Revenue </CardTitle>\n                            <CardText>\n                                <NoDataYet />\n                            </CardText>\n                        </Card>\n                    </Col> */}\n        </Row>\n      </Col>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}